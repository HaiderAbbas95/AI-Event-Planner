{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "source": [
        "!git clone https://github.com/traversaal-ai/AgentPro.git\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "HSxm0QO8ORKz",
        "outputId": "f882135e-17a5-47c2-cdab-a344bf69962d"
      },
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Cloning into 'AgentPro'...\n",
            "remote: Enumerating objects: 1423, done.\u001b[K\n",
            "remote: Counting objects: 100% (329/329), done.\u001b[K\n",
            "remote: Compressing objects: 100% (147/147), done.\u001b[K\n",
            "remote: Total 1423 (delta 273), reused 182 (delta 182), pack-reused 1094 (from 2)\u001b[K\n",
            "Receiving objects: 100% (1423/1423), 12.62 MiB | 30.78 MiB/s, done.\n",
            "Resolving deltas: 100% (698/698), done.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Install any needed libraries (some may already be installed)\n",
        "!pip install openai requests scipy\n",
        "!pip install dateparser"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "xuNH28foPIjA",
        "outputId": "4f3dadf7-b8e1-41c3-9376-2bc5f1aa2a6f"
      },
      "execution_count": 1,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Requirement already satisfied: openai in /usr/local/lib/python3.11/dist-packages (1.82.1)\n",
            "Requirement already satisfied: requests in /usr/local/lib/python3.11/dist-packages (2.32.3)\n",
            "Requirement already satisfied: scipy in /usr/local/lib/python3.11/dist-packages (1.15.3)\n",
            "Requirement already satisfied: anyio<5,>=3.5.0 in /usr/local/lib/python3.11/dist-packages (from openai) (4.9.0)\n",
            "Requirement already satisfied: distro<2,>=1.7.0 in /usr/local/lib/python3.11/dist-packages (from openai) (1.9.0)\n",
            "Requirement already satisfied: httpx<1,>=0.23.0 in /usr/local/lib/python3.11/dist-packages (from openai) (0.28.1)\n",
            "Requirement already satisfied: jiter<1,>=0.4.0 in /usr/local/lib/python3.11/dist-packages (from openai) (0.10.0)\n",
            "Requirement already satisfied: pydantic<3,>=1.9.0 in /usr/local/lib/python3.11/dist-packages (from openai) (2.11.5)\n",
            "Requirement already satisfied: sniffio in /usr/local/lib/python3.11/dist-packages (from openai) (1.3.1)\n",
            "Requirement already satisfied: tqdm>4 in /usr/local/lib/python3.11/dist-packages (from openai) (4.67.1)\n",
            "Requirement already satisfied: typing-extensions<5,>=4.11 in /usr/local/lib/python3.11/dist-packages (from openai) (4.13.2)\n",
            "Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.11/dist-packages (from requests) (3.4.2)\n",
            "Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.11/dist-packages (from requests) (3.10)\n",
            "Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.11/dist-packages (from requests) (2.4.0)\n",
            "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.11/dist-packages (from requests) (2025.4.26)\n",
            "Requirement already satisfied: numpy<2.5,>=1.23.5 in /usr/local/lib/python3.11/dist-packages (from scipy) (2.0.2)\n",
            "Requirement already satisfied: httpcore==1.* in /usr/local/lib/python3.11/dist-packages (from httpx<1,>=0.23.0->openai) (1.0.9)\n",
            "Requirement already satisfied: h11>=0.16 in /usr/local/lib/python3.11/dist-packages (from httpcore==1.*->httpx<1,>=0.23.0->openai) (0.16.0)\n",
            "Requirement already satisfied: annotated-types>=0.6.0 in /usr/local/lib/python3.11/dist-packages (from pydantic<3,>=1.9.0->openai) (0.7.0)\n",
            "Requirement already satisfied: pydantic-core==2.33.2 in /usr/local/lib/python3.11/dist-packages (from pydantic<3,>=1.9.0->openai) (2.33.2)\n",
            "Requirement already satisfied: typing-inspection>=0.4.0 in /usr/local/lib/python3.11/dist-packages (from pydantic<3,>=1.9.0->openai) (0.4.1)\n",
            "Requirement already satisfied: dateparser in /usr/local/lib/python3.11/dist-packages (1.2.1)\n",
            "Requirement already satisfied: python-dateutil>=2.7.0 in /usr/local/lib/python3.11/dist-packages (from dateparser) (2.9.0.post0)\n",
            "Requirement already satisfied: pytz>=2024.2 in /usr/local/lib/python3.11/dist-packages (from dateparser) (2025.2)\n",
            "Requirement already satisfied: regex!=2019.02.19,!=2021.8.27,>=2015.06.24 in /usr/local/lib/python3.11/dist-packages (from dateparser) (2024.11.6)\n",
            "Requirement already satisfied: tzlocal>=0.2 in /usr/local/lib/python3.11/dist-packages (from dateparser) (5.3.1)\n",
            "Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.11/dist-packages (from python-dateutil>=2.7.0->dateparser) (1.17.0)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Import libraries\n",
        "import openai\n",
        "import json\n",
        "import requests\n",
        "import numpy as np\n",
        "from scipy.optimize import linprog\n",
        "import os\n",
        "from google.colab import userdata\n",
        "from datetime import datetime, time\n",
        "import dateparser\n",
        "from datetime import datetime, timezone, timedelta"
      ],
      "metadata": {
        "id": "aczmToPHPMA0"
      },
      "execution_count": 2,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from google.colab import userdata\n",
        "OPENAI_API_KEY = userdata.get('OPENAI_API_KEY')\n",
        "GOOGLE_API_KEY = userdata.get('GOOGLE_API_KEY')\n",
        "print(\"Google API key loaded:\", bool(GOOGLE_API_KEY))\n",
        "print(\"OPEN AI API key loaded:\", bool(OPENAI_API_KEY))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "j-WGjcekPQJO",
        "outputId": "40ed5d2d-dd6a-4bdb-a568-c1b4be98bbbb"
      },
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Google API key loaded: True\n",
            "OPEN AI API key loaded: True\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "%cd AgentPro\n",
        "!pip install -e ."
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "lUpaNqlSOb7g",
        "outputId": "0e800a09-1089-4b94-e9ef-cea402b3d3be"
      },
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "/content/AgentPro\n",
            "Obtaining file:///content/AgentPro\n",
            "  Installing build dependencies ... \u001b[?25l\u001b[?25hdone\n",
            "  Checking if build backend supports build_editable ... \u001b[?25l\u001b[?25hdone\n",
            "  Getting requirements to build editable ... \u001b[?25l\u001b[?25hdone\n",
            "  Preparing editable metadata (pyproject.toml) ... \u001b[?25l\u001b[?25hdone\n",
            "Requirement already satisfied: openai in /usr/local/lib/python3.11/dist-packages (from agentpro==0.1.0) (1.82.1)\n",
            "Requirement already satisfied: youtube_transcript_api in /usr/local/lib/python3.11/dist-packages (from agentpro==0.1.0) (1.0.3)\n",
            "Requirement already satisfied: duckduckgo-search in /usr/local/lib/python3.11/dist-packages (from agentpro==0.1.0) (8.0.2)\n",
            "Requirement already satisfied: requests in /usr/local/lib/python3.11/dist-packages (from agentpro==0.1.0) (2.32.3)\n",
            "Requirement already satisfied: python-pptx in /usr/local/lib/python3.11/dist-packages (from agentpro==0.1.0) (1.0.2)\n",
            "Requirement already satisfied: pydantic in /usr/local/lib/python3.11/dist-packages (from agentpro==0.1.0) (2.11.5)\n",
            "Requirement already satisfied: python-dotenv in /usr/local/lib/python3.11/dist-packages (from agentpro==0.1.0) (1.1.0)\n",
            "Requirement already satisfied: pandas in /usr/local/lib/python3.11/dist-packages (from agentpro==0.1.0) (2.2.2)\n",
            "Requirement already satisfied: numpy in /usr/local/lib/python3.11/dist-packages (from agentpro==0.1.0) (2.0.2)\n",
            "Requirement already satisfied: matplotlib in /usr/local/lib/python3.11/dist-packages (from agentpro==0.1.0) (3.10.0)\n",
            "Requirement already satisfied: seaborn in /usr/local/lib/python3.11/dist-packages (from agentpro==0.1.0) (0.13.2)\n",
            "Requirement already satisfied: openpyxl in /usr/local/lib/python3.11/dist-packages (from agentpro==0.1.0) (3.1.5)\n",
            "Requirement already satisfied: pyarrow in /usr/local/lib/python3.11/dist-packages (from agentpro==0.1.0) (18.1.0)\n",
            "Requirement already satisfied: scikit-learn in /usr/local/lib/python3.11/dist-packages (from agentpro==0.1.0) (1.6.1)\n",
            "Requirement already satisfied: yfinance in /usr/local/lib/python3.11/dist-packages (from agentpro==0.1.0) (0.2.61)\n",
            "Requirement already satisfied: litellm in /usr/local/lib/python3.11/dist-packages (from agentpro==0.1.0) (1.72.1)\n",
            "Requirement already satisfied: click>=8.1.8 in /usr/local/lib/python3.11/dist-packages (from duckduckgo-search->agentpro==0.1.0) (8.2.1)\n",
            "Requirement already satisfied: primp>=0.15.0 in /usr/local/lib/python3.11/dist-packages (from duckduckgo-search->agentpro==0.1.0) (0.15.0)\n",
            "Requirement already satisfied: lxml>=5.3.0 in /usr/local/lib/python3.11/dist-packages (from duckduckgo-search->agentpro==0.1.0) (5.4.0)\n",
            "Requirement already satisfied: aiohttp in /usr/local/lib/python3.11/dist-packages (from litellm->agentpro==0.1.0) (3.11.15)\n",
            "Requirement already satisfied: httpx>=0.23.0 in /usr/local/lib/python3.11/dist-packages (from litellm->agentpro==0.1.0) (0.28.1)\n",
            "Requirement already satisfied: importlib-metadata>=6.8.0 in /usr/local/lib/python3.11/dist-packages (from litellm->agentpro==0.1.0) (8.7.0)\n",
            "Requirement already satisfied: jinja2<4.0.0,>=3.1.2 in /usr/local/lib/python3.11/dist-packages (from litellm->agentpro==0.1.0) (3.1.6)\n",
            "Requirement already satisfied: jsonschema<5.0.0,>=4.22.0 in /usr/local/lib/python3.11/dist-packages (from litellm->agentpro==0.1.0) (4.24.0)\n",
            "Requirement already satisfied: tiktoken>=0.7.0 in /usr/local/lib/python3.11/dist-packages (from litellm->agentpro==0.1.0) (0.9.0)\n",
            "Requirement already satisfied: tokenizers in /usr/local/lib/python3.11/dist-packages (from litellm->agentpro==0.1.0) (0.21.1)\n",
            "Requirement already satisfied: anyio<5,>=3.5.0 in /usr/local/lib/python3.11/dist-packages (from openai->agentpro==0.1.0) (4.9.0)\n",
            "Requirement already satisfied: distro<2,>=1.7.0 in /usr/local/lib/python3.11/dist-packages (from openai->agentpro==0.1.0) (1.9.0)\n",
            "Requirement already satisfied: jiter<1,>=0.4.0 in /usr/local/lib/python3.11/dist-packages (from openai->agentpro==0.1.0) (0.10.0)\n",
            "Requirement already satisfied: sniffio in /usr/local/lib/python3.11/dist-packages (from openai->agentpro==0.1.0) (1.3.1)\n",
            "Requirement already satisfied: tqdm>4 in /usr/local/lib/python3.11/dist-packages (from openai->agentpro==0.1.0) (4.67.1)\n",
            "Requirement already satisfied: typing-extensions<5,>=4.11 in /usr/local/lib/python3.11/dist-packages (from openai->agentpro==0.1.0) (4.13.2)\n",
            "Requirement already satisfied: annotated-types>=0.6.0 in /usr/local/lib/python3.11/dist-packages (from pydantic->agentpro==0.1.0) (0.7.0)\n",
            "Requirement already satisfied: pydantic-core==2.33.2 in /usr/local/lib/python3.11/dist-packages (from pydantic->agentpro==0.1.0) (2.33.2)\n",
            "Requirement already satisfied: typing-inspection>=0.4.0 in /usr/local/lib/python3.11/dist-packages (from pydantic->agentpro==0.1.0) (0.4.1)\n",
            "Requirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.11/dist-packages (from matplotlib->agentpro==0.1.0) (1.3.2)\n",
            "Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.11/dist-packages (from matplotlib->agentpro==0.1.0) (0.12.1)\n",
            "Requirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.11/dist-packages (from matplotlib->agentpro==0.1.0) (4.58.1)\n",
            "Requirement already satisfied: kiwisolver>=1.3.1 in /usr/local/lib/python3.11/dist-packages (from matplotlib->agentpro==0.1.0) (1.4.8)\n",
            "Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.11/dist-packages (from matplotlib->agentpro==0.1.0) (24.2)\n",
            "Requirement already satisfied: pillow>=8 in /usr/local/lib/python3.11/dist-packages (from matplotlib->agentpro==0.1.0) (11.2.1)\n",
            "Requirement already satisfied: pyparsing>=2.3.1 in /usr/local/lib/python3.11/dist-packages (from matplotlib->agentpro==0.1.0) (3.2.3)\n",
            "Requirement already satisfied: python-dateutil>=2.7 in /usr/local/lib/python3.11/dist-packages (from matplotlib->agentpro==0.1.0) (2.9.0.post0)\n",
            "Requirement already satisfied: et-xmlfile in /usr/local/lib/python3.11/dist-packages (from openpyxl->agentpro==0.1.0) (2.0.0)\n",
            "Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.11/dist-packages (from pandas->agentpro==0.1.0) (2025.2)\n",
            "Requirement already satisfied: tzdata>=2022.7 in /usr/local/lib/python3.11/dist-packages (from pandas->agentpro==0.1.0) (2025.2)\n",
            "Requirement already satisfied: XlsxWriter>=0.5.7 in /usr/local/lib/python3.11/dist-packages (from python-pptx->agentpro==0.1.0) (3.2.3)\n",
            "Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.11/dist-packages (from requests->agentpro==0.1.0) (3.4.2)\n",
            "Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.11/dist-packages (from requests->agentpro==0.1.0) (3.10)\n",
            "Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.11/dist-packages (from requests->agentpro==0.1.0) (2.4.0)\n",
            "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.11/dist-packages (from requests->agentpro==0.1.0) (2025.4.26)\n",
            "Requirement already satisfied: scipy>=1.6.0 in /usr/local/lib/python3.11/dist-packages (from scikit-learn->agentpro==0.1.0) (1.15.3)\n",
            "Requirement already satisfied: joblib>=1.2.0 in /usr/local/lib/python3.11/dist-packages (from scikit-learn->agentpro==0.1.0) (1.5.1)\n",
            "Requirement already satisfied: threadpoolctl>=3.1.0 in /usr/local/lib/python3.11/dist-packages (from scikit-learn->agentpro==0.1.0) (3.6.0)\n",
            "Requirement already satisfied: multitasking>=0.0.7 in /usr/local/lib/python3.11/dist-packages (from yfinance->agentpro==0.1.0) (0.0.11)\n",
            "Requirement already satisfied: platformdirs>=2.0.0 in /usr/local/lib/python3.11/dist-packages (from yfinance->agentpro==0.1.0) (4.3.8)\n",
            "Requirement already satisfied: frozendict>=2.3.4 in /usr/local/lib/python3.11/dist-packages (from yfinance->agentpro==0.1.0) (2.4.6)\n",
            "Requirement already satisfied: peewee>=3.16.2 in /usr/local/lib/python3.11/dist-packages (from yfinance->agentpro==0.1.0) (3.18.1)\n",
            "Requirement already satisfied: beautifulsoup4>=4.11.1 in /usr/local/lib/python3.11/dist-packages (from yfinance->agentpro==0.1.0) (4.13.4)\n",
            "Requirement already satisfied: curl_cffi>=0.7 in /usr/local/lib/python3.11/dist-packages (from yfinance->agentpro==0.1.0) (0.11.1)\n",
            "Requirement already satisfied: protobuf>=3.19.0 in /usr/local/lib/python3.11/dist-packages (from yfinance->agentpro==0.1.0) (5.29.5)\n",
            "Requirement already satisfied: websockets>=13.0 in /usr/local/lib/python3.11/dist-packages (from yfinance->agentpro==0.1.0) (15.0.1)\n",
            "Requirement already satisfied: defusedxml<0.8.0,>=0.7.1 in /usr/local/lib/python3.11/dist-packages (from youtube_transcript_api->agentpro==0.1.0) (0.7.1)\n",
            "Requirement already satisfied: soupsieve>1.2 in /usr/local/lib/python3.11/dist-packages (from beautifulsoup4>=4.11.1->yfinance->agentpro==0.1.0) (2.7)\n",
            "Requirement already satisfied: cffi>=1.12.0 in /usr/local/lib/python3.11/dist-packages (from curl_cffi>=0.7->yfinance->agentpro==0.1.0) (1.17.1)\n",
            "Requirement already satisfied: httpcore==1.* in /usr/local/lib/python3.11/dist-packages (from httpx>=0.23.0->litellm->agentpro==0.1.0) (1.0.9)\n",
            "Requirement already satisfied: h11>=0.16 in /usr/local/lib/python3.11/dist-packages (from httpcore==1.*->httpx>=0.23.0->litellm->agentpro==0.1.0) (0.16.0)\n",
            "Requirement already satisfied: zipp>=3.20 in /usr/local/lib/python3.11/dist-packages (from importlib-metadata>=6.8.0->litellm->agentpro==0.1.0) (3.22.0)\n",
            "Requirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.11/dist-packages (from jinja2<4.0.0,>=3.1.2->litellm->agentpro==0.1.0) (3.0.2)\n",
            "Requirement already satisfied: attrs>=22.2.0 in /usr/local/lib/python3.11/dist-packages (from jsonschema<5.0.0,>=4.22.0->litellm->agentpro==0.1.0) (25.3.0)\n",
            "Requirement already satisfied: jsonschema-specifications>=2023.03.6 in /usr/local/lib/python3.11/dist-packages (from jsonschema<5.0.0,>=4.22.0->litellm->agentpro==0.1.0) (2025.4.1)\n",
            "Requirement already satisfied: referencing>=0.28.4 in /usr/local/lib/python3.11/dist-packages (from jsonschema<5.0.0,>=4.22.0->litellm->agentpro==0.1.0) (0.36.2)\n",
            "Requirement already satisfied: rpds-py>=0.7.1 in /usr/local/lib/python3.11/dist-packages (from jsonschema<5.0.0,>=4.22.0->litellm->agentpro==0.1.0) (0.25.1)\n",
            "Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.11/dist-packages (from python-dateutil>=2.7->matplotlib->agentpro==0.1.0) (1.17.0)\n",
            "Requirement already satisfied: regex>=2022.1.18 in /usr/local/lib/python3.11/dist-packages (from tiktoken>=0.7.0->litellm->agentpro==0.1.0) (2024.11.6)\n",
            "Requirement already satisfied: aiohappyeyeballs>=2.3.0 in /usr/local/lib/python3.11/dist-packages (from aiohttp->litellm->agentpro==0.1.0) (2.6.1)\n",
            "Requirement already satisfied: aiosignal>=1.1.2 in /usr/local/lib/python3.11/dist-packages (from aiohttp->litellm->agentpro==0.1.0) (1.3.2)\n",
            "Requirement already satisfied: frozenlist>=1.1.1 in /usr/local/lib/python3.11/dist-packages (from aiohttp->litellm->agentpro==0.1.0) (1.6.0)\n",
            "Requirement already satisfied: multidict<7.0,>=4.5 in /usr/local/lib/python3.11/dist-packages (from aiohttp->litellm->agentpro==0.1.0) (6.4.4)\n",
            "Requirement already satisfied: propcache>=0.2.0 in /usr/local/lib/python3.11/dist-packages (from aiohttp->litellm->agentpro==0.1.0) (0.3.1)\n",
            "Requirement already satisfied: yarl<2.0,>=1.17.0 in /usr/local/lib/python3.11/dist-packages (from aiohttp->litellm->agentpro==0.1.0) (1.20.0)\n",
            "Requirement already satisfied: huggingface-hub<1.0,>=0.16.4 in /usr/local/lib/python3.11/dist-packages (from tokenizers->litellm->agentpro==0.1.0) (0.32.2)\n",
            "Requirement already satisfied: pycparser in /usr/local/lib/python3.11/dist-packages (from cffi>=1.12.0->curl_cffi>=0.7->yfinance->agentpro==0.1.0) (2.22)\n",
            "Requirement already satisfied: filelock in /usr/local/lib/python3.11/dist-packages (from huggingface-hub<1.0,>=0.16.4->tokenizers->litellm->agentpro==0.1.0) (3.18.0)\n",
            "Requirement already satisfied: fsspec>=2023.5.0 in /usr/local/lib/python3.11/dist-packages (from huggingface-hub<1.0,>=0.16.4->tokenizers->litellm->agentpro==0.1.0) (2025.3.2)\n",
            "Requirement already satisfied: pyyaml>=5.1 in /usr/local/lib/python3.11/dist-packages (from huggingface-hub<1.0,>=0.16.4->tokenizers->litellm->agentpro==0.1.0) (6.0.2)\n",
            "Requirement already satisfied: hf-xet<2.0.0,>=1.1.2 in /usr/local/lib/python3.11/dist-packages (from huggingface-hub<1.0,>=0.16.4->tokenizers->litellm->agentpro==0.1.0) (1.1.2)\n",
            "Building wheels for collected packages: agentpro\n",
            "  Building editable for agentpro (pyproject.toml) ... \u001b[?25l\u001b[?25hdone\n",
            "  Created wheel for agentpro: filename=agentpro-0.1.0-0.editable-py3-none-any.whl size=7155 sha256=1a35ed8dcafc2debb82889d5b79eb57502016d4d66856ead1e568ddad29097f2\n",
            "  Stored in directory: /tmp/pip-ephem-wheel-cache-jkff2tqe/wheels/9c/c4/78/3256381eeab54c5a623877649478a807224b8b9955de374b97\n",
            "Successfully built agentpro\n",
            "Installing collected packages: agentpro\n",
            "  Attempting uninstall: agentpro\n",
            "    Found existing installation: agentpro 0.1.0\n",
            "    Uninstalling agentpro-0.1.0:\n",
            "      Successfully uninstalled agentpro-0.1.0\n",
            "Successfully installed agentpro-0.1.0\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from google.colab import userdata\n",
        "import os\n",
        "\n",
        "# Set keys from secrets\n",
        "os.environ[\"OPENAI_API_KEY\"] = userdata.get(\"OPENAI_API_KEY\")\n",
        "os.environ[\"GOOGLE_API_KEY\"] = userdata.get(\"GOOGLE_API_KEY\")\n",
        "\n",
        "print(\"✅ API keys successfully loaded into environment.\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "8TJh3BWBOiNa",
        "outputId": "c8c0e548-b77d-4ef3-9303-58c9a93d22f9"
      },
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "✅ API keys successfully loaded into environment.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from openai import OpenAI\n",
        "import os\n",
        "\n",
        "client = OpenAI(api_key=os.environ[\"OPENAI_API_KEY\"])\n",
        "\n",
        "response = client.chat.completions.create(\n",
        "    model=\"gpt-4o\",\n",
        "    messages=[\n",
        "        {\"role\": \"system\", \"content\": \"You are a catering expert.\"},\n",
        "        {\"role\": \"user\", \"content\": \"Create a meal plan for a tech conference in Dubai.\"}\n",
        "    ]\n",
        ")\n",
        "\n",
        "print(response.choices[0].message.content)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "bTURZlh7Rc7q",
        "outputId": "f79938f7-0192-407c-b5b1-5f279af78f76"
      },
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Creating a meal plan for a tech conference in Dubai involves considering diverse dietary preferences, cultural norms, and the professional setting. Below is a suggested plan catering to various requirements over a three-day conference:\n",
            "\n",
            "### Day 1\n",
            "\n",
            "#### Breakfast\n",
            "- **Continental Buffet:**\n",
            "  - Fresh fruits: sliced watermelon, oranges, and berries\n",
            "  - Assortment of pastries: croissants, muffins, and Danish pastries\n",
            "  - Yogurts: plain and flavored options\n",
            "  - Granola and muesli with milk (including soy and almond milk)\n",
            "\n",
            "- **Beverages:**\n",
            "  - Freshly brewed coffee and a selection of teas\n",
            "  - Fresh orange juice and apple juice\n",
            "\n",
            "#### Lunch\n",
            "- **Starter:**\n",
            "  - Lentil soup with coriander\n",
            "\n",
            "- **Main Course:**\n",
            "  - Grilled chicken breast with lemon and herbs\n",
            "  - Roasted vegetable couscous (Vegetarian/Vegan option)\n",
            "  - Baked Salmon fillet with dill sauce\n",
            "\n",
            "- **Sides:**\n",
            "  - Mixed greens salad with vinaigrette\n",
            "  - Hummus and pita bread\n",
            "\n",
            "- **Dessert:**\n",
            "  - Baklava\n",
            "  - Fresh fruit platter\n",
            "\n",
            "- **Beverage:**\n",
            "  - Iced tea and lemonade\n",
            "\n",
            "#### Dinner\n",
            "- **Appetizer:**\n",
            "  - Mezze platter including tabbouleh, baba ghanoush, and stuffed grape leaves\n",
            "\n",
            "- **Main Course:**\n",
            "  - Lamb kebabs with saffron rice\n",
            "  - Vegetarian moussaka (Vegetarian)\n",
            "  - Quinoa and black bean stuffed peppers (Vegan/Gluten-free)\n",
            "\n",
            "- **Dessert:**\n",
            "  - Dates and Arabic sweets\n",
            "\n",
            "- **Beverages:**\n",
            "  - Mint tea and a selection of sodas\n",
            "  \n",
            "### Day 2\n",
            "\n",
            "#### Breakfast\n",
            "- **Middle Eastern-Style Buffet:**\n",
            "  - Shakshuka\n",
            "  - Labneh and falafel\n",
            "  - Selection of Arabic bread\n",
            "\n",
            "- **Beverages:**\n",
            "  - Arabic coffee and teas\n",
            "  - Pomegranate juice\n",
            "\n",
            "#### Lunch\n",
            "- **Starter:**\n",
            "  - Tomato basil soup\n",
            "\n",
            "- **Main Course:**\n",
            "  - Beef Shawarma wraps\n",
            "  - Moroccan tagine with apricots and almonds (Vegetarian)\n",
            "  - Grilled eggplant stacks (Vegan/Gluten-free)\n",
            "\n",
            "- **Sides:**\n",
            "  - Couscous salad with raisins and almonds\n",
            "  - Fresh garden salad with feta cheese\n",
            "\n",
            "- **Dessert:**\n",
            "  - Chocolate fondant\n",
            "  - Assorted quest cheeses with crackers\n",
            "\n",
            "- **Beverages:**\n",
            "  - Sparkling water and soft drinks\n",
            "\n",
            "#### Dinner\n",
            "- **Appetizer:**\n",
            "  - Spinach and cheese triangles\n",
            "\n",
            "- **Main Course:**\n",
            "  - Roast chicken with za’atar\n",
            "  - Penne pasta with creamy pesto sauce (Vegetarian)\n",
            "  - Grilled tofu with vegetables (Vegan)\n",
            "\n",
            "- **Dessert:**\n",
            "  - Tiramisu\n",
            "  - Mango mousse\n",
            "\n",
            "- **Beverages:**\n",
            "  - Herbal teas and fruit juices\n",
            "\n",
            "### Day 3\n",
            "\n",
            "#### Breakfast\n",
            "- **International Buffet:**\n",
            "  - Pancakes with maple syrup\n",
            "  - Selection of cold cuts and cheeses\n",
            "  - Assorted cereals\n",
            "\n",
            "- **Beverages:**\n",
            "  - Espresso and cappuccino\n",
            "  - Mango and pineapple juice\n",
            "\n",
            "#### Lunch\n",
            "- **Starter:**\n",
            "  - Cream of mushroom soup\n",
            "\n",
            "- **Main Course:**\n",
            "  - Herb-crusted lamb chops\n",
            "  - Spinach and ricotta cannelloni (Vegetarian)\n",
            "  - Stir-fried vegetables with rice noodles (Vegan/Gluten-free)\n",
            "\n",
            "- **Sides:**\n",
            "  - Caesar salad\n",
            "  - Coleslaw\n",
            "\n",
            "- **Dessert:**\n",
            "  - Cheesecake\n",
            "  - Fruit tart\n",
            "\n",
            "- **Beverages:**\n",
            "  - Water and soft drinks\n",
            "\n",
            "#### Dinner\n",
            "- **Appetizer:**\n",
            "  - Smoked salmon on a bed of arugula\n",
            "\n",
            "- **Main Course:**\n",
            "  - Beef tenderloin with peppercorn sauce\n",
            "  - Vegetable and tofu curry with basmati rice (Vegan/Gluten-free)\n",
            "\n",
            "- **Dessert:**\n",
            "  - Chocolate truffles\n",
            "  - Rosewater panna cotta\n",
            "\n",
            "- **Beverages:**\n",
            "  - Coffee and assorted teas\n",
            "  - Coconut water\n",
            "\n",
            "This plan offers a variety of international flavors with a nod to the local cuisine of Dubai, accommodating different dietary needs and preferences. Also, remember to label all dishes clearly, especially those that cater to specific dietary restrictions.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Building Agents"
      ],
      "metadata": {
        "id": "OGLkvtdcULIE"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "User Intent Agent"
      ],
      "metadata": {
        "id": "WyQ3Vw3oQsIC"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import sys\n",
        "import os\n",
        "import re\n",
        "import json\n",
        "import ast\n",
        "import dateparser\n",
        "\n",
        "# Add AgentPro to system path\n",
        "sys.path.insert(0, \"/content/AgentPro\")\n",
        "\n",
        "# ✅ AgentPro imports\n",
        "from agentpro import ReactAgent, create_model\n",
        "from agentpro.tools import UserInputTool  # optional\n",
        "\n",
        "# ✅ Create model wrapper (this solves the .chat_completion error)\n",
        "model = create_model(\n",
        "    provider=\"openai\",\n",
        "    model_name=\"gpt-4o\",\n",
        "    api_key=os.environ[\"OPENAI_API_KEY\"]\n",
        ")\n",
        "\n",
        "agent = ReactAgent(model=model, tools=[])\n",
        "\n",
        "# 🧼 LLM response parser\n",
        "def extract_json_from_response(response):\n",
        "    cleaned = response.strip()\n",
        "    cleaned = re.sub(r\"```(?:json|python)?\", \"\", cleaned)\n",
        "    cleaned = re.sub(r\"[^\\x00-\\x7F]+\", \"\", cleaned).strip()\n",
        "    cleaned = cleaned.replace(\"“\", '\"').replace(\"”\", '\"').replace(\"‘\", \"'\").replace(\"’\", \"'\")\n",
        "\n",
        "    try:\n",
        "        return json.loads(cleaned)\n",
        "    except json.JSONDecodeError:\n",
        "        match = re.search(r\"(\\{.*\\}|\\[.*\\])\", cleaned, re.DOTALL)\n",
        "        if match:\n",
        "            try:\n",
        "                return json.loads(match.group(0))\n",
        "            except json.JSONDecodeError:\n",
        "                pass\n",
        "    raise ValueError(f\"❌ Could not extract valid JSON from LLM response:\\n{cleaned}\")\n",
        "\n",
        "# 🚀 Main user intent extraction\n",
        "def extract_user_intent():\n",
        "    user_query = input(\"👤 Please describe the event you want to plan (type, location, guests, etc.):\\n> \")\n",
        "\n",
        "    prompt = (\n",
        "      \"You are an event planning assistant.\\n\"\n",
        "      \"Extract structured event info from the user query below.\\n\"\n",
        "      \"Return a **Python dictionary only**, no explanations or formatting.\\n\\n\"\n",
        "      \"Required dictionary keys:\\n\"\n",
        "      \"- 'event_type': string\\n\"\n",
        "      \"- 'location': string\\n\"\n",
        "      \"- 'event_date': string (YYYY-MM-DD)\\n\"\n",
        "      \"- 'guest_count': integer\\n\"\n",
        "      \"- 'preferences': dictionary (include keys like 'stay_dates', 'guest_origins', etc.)\\n\"\n",
        "      \"- 'event_theme': string (optional)\\n\"\n",
        "      \"- 'meal_count': integer (optional)\\n\"\n",
        "      \"- 'transport_needs': string (optional)\\n\"\n",
        "      \"- 'sightseeing': boolean (optional)\\n\\n\"\n",
        "      \"Missing values must be set to null.\\n\\n\"\n",
        "      \"Output should be in pure JSON form and nothing else should be included which is not in JSON format\"\n",
        "      f\"User input: {user_query}\"\n",
        "      \"IMPORTANT: Respond immediately with the final JSON object using only `Final Answer:` followed by the valid JSON. Do NOT output thoughts, actions, or any reasoning.\"\n",
        ")\n",
        "\n",
        "\n",
        "    print(\"🔁 Querying GPT-4o via ReAct agent...\")\n",
        "    response = agent.run(prompt)\n",
        "    raw_output = response.final_answer\n",
        "    print(\"🧠 LLM RAW OUTPUT:\\n\", raw_output)\n",
        "\n",
        "    intent_data = extract_json_from_response(raw_output)\n",
        "\n",
        "    if intent_data.get(\"event_date\"):\n",
        "        parsed_date = dateparser.parse(intent_data[\"event_date\"])\n",
        "        intent_data[\"event_date\"] = parsed_date.strftime(\"%Y-%m-%d\") if parsed_date else None\n",
        "\n",
        "    print(\"\\n✅ Extracted User Intent:\")\n",
        "    print(json.dumps(intent_data, indent=2))\n",
        "    return intent_data\n",
        "\n",
        "# Run the extraction\n",
        "extracted_intent = extract_user_intent()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "dN65U1D9UNYO",
        "outputId": "4c789bbd-15be-4ca8-8865-2d923ce62bee"
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "👤 Please describe the event you want to plan (type, location, guests, etc.):\n",
            "> Plan a wedding of 300 guests in islamabad on 13 June till 15 June 2025.\n",
            "🔁 Querying GPT-4o via ReAct agent...\n",
            "================================================== Iteration 1 \n",
            "✅  [Debug] Sending System Prompt (with history) to LLM:\n",
            "You are an AI assistant that follows the ReAct (Reasoning + Acting) pattern.\n",
            "        \n",
            "Your goal is to help users by breaking down complex tasks into a series of thought-out steps and actions.\n",
            "\n",
            "You have access to these tools: \n",
            "\n",
            "\n",
            "\n",
            "Your task is to:\n",
            "1. Think about what action is required — Thought.\n",
            "2. Take an appropriate action — Action.\n",
            "3. Repeat Thought/Action as needed until you find the final answer.\n",
            "\n",
            "### Format (Choose only one per response)\n",
            "\n",
            "Option 1 — When action is needed:\n",
            "Thought: Your reasoning about action and observation.\n",
            "Action: {\"action_type\": \"<action_type>\", \"input\": <input_data>}\n",
            "\n",
            "Option 2 — When you're confident in the final response:\n",
            "Thought: Now I know the answer that will be given in Final Answer.\n",
            "Final Answer: Provide a complete, well-structured response that directly addresses the original question.\n",
            "\n",
            "### Important:\n",
            "- Think step-by-step.\n",
            "- Never provide both Action and Final Answer or multiple Action in the same response.\n",
            "- Use available tools wisely.\n",
            "- If stuck, reflect and retry but never hallucinate.\n",
            "- If observation is empty or not related, reflect and retry but never hallucinate.\n",
            "- The current date is June 05, 2025.\n",
            "- If you follow the format strictly, you will be recognized as an excellent and trustworthy AI assistant.\n",
            "\n",
            "\n",
            "Question: You are an event planning assistant.\n",
            "Extract structured event info from the user query below.\n",
            "Return a **Python dictionary only**, no explanations or formatting.\n",
            "\n",
            "Required dictionary keys:\n",
            "- 'event_type': string\n",
            "- 'location': string\n",
            "- 'event_date': string (YYYY-MM-DD)\n",
            "- 'guest_count': integer\n",
            "- 'preferences': dictionary (include keys like 'stay_dates', 'guest_origins', etc.)\n",
            "- 'event_theme': string (optional)\n",
            "- 'meal_count': integer (optional)\n",
            "- 'transport_needs': string (optional)\n",
            "- 'sightseeing': boolean (optional)\n",
            "\n",
            "Missing values must be set to null.\n",
            "\n",
            "Output should be in pure JSON form and nothing else should be included which is not in JSON formatUser input: Plan a wedding of 300 guests in islamabad on 13 June till 15 June 2025.IMPORTANT: Respond immediately with the final JSON object using only `Final Answer:` followed by the valid JSON. Do NOT output thoughts, actions, or any reasoning.\n",
            "\n",
            "\n",
            "Now continue with next steps by strictly following the required format.\n",
            "\n",
            "==================================================\n",
            "🤖 [Debug] Step LLM Response:\n",
            "Final Answer: {\"event_type\": \"wedding\", \"location\": \"Islamabad\", \"event_date\": \"2025-06-13\", \"guest_count\": 300, \"preferences\": {\"stay_dates\": \"2025-06-13 to 2025-06-15\", \"guest_origins\": null}, \"event_theme\": null, \"meal_count\": null, \"transport_needs\": null, \"sightseeing\": null}\n",
            "✅ Parsed Final Answer: {\"event_type\": \"wedding\", \"location\": \"Islamabad\", \"event_date\": \"2025-06-13\", \"guest_count\": 300, \"preferences\": {\"stay_dates\": \"2025-06-13 to 2025-06-15\", \"guest_origins\": null}, \"event_theme\": null, \"meal_count\": null, \"transport_needs\": null, \"sightseeing\": null}\n",
            "🧠 LLM RAW OUTPUT:\n",
            " {\"event_type\": \"wedding\", \"location\": \"Islamabad\", \"event_date\": \"2025-06-13\", \"guest_count\": 300, \"preferences\": {\"stay_dates\": \"2025-06-13 to 2025-06-15\", \"guest_origins\": null}, \"event_theme\": null, \"meal_count\": null, \"transport_needs\": null, \"sightseeing\": null}\n",
            "\n",
            "✅ Extracted User Intent:\n",
            "{\n",
            "  \"event_type\": \"wedding\",\n",
            "  \"location\": \"Islamabad\",\n",
            "  \"event_date\": \"2025-06-13\",\n",
            "  \"guest_count\": 300,\n",
            "  \"preferences\": {\n",
            "    \"stay_dates\": \"2025-06-13 to 2025-06-15\",\n",
            "    \"guest_origins\": null\n",
            "  },\n",
            "  \"event_theme\": null,\n",
            "  \"meal_count\": null,\n",
            "  \"transport_needs\": null,\n",
            "  \"sightseeing\": null\n",
            "}\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Schedular Agent"
      ],
      "metadata": {
        "id": "QzUvHXuuWuUQ"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import sys\n",
        "import os\n",
        "import json\n",
        "import re\n",
        "\n",
        "# Add AgentPro to path\n",
        "sys.path.insert(0, \"/content/AgentPro\")\n",
        "\n",
        "from agentpro import create_model, ReactAgent\n",
        "\n",
        "# ✅ Create GPT-4o model client\n",
        "model = create_model(\n",
        "    provider=\"openai\",\n",
        "    model_name=\"gpt-4o\",\n",
        "    api_key=os.environ[\"OPENAI_API_KEY\"]\n",
        ")\n",
        "\n",
        "agent = ReactAgent(model=model, tools=[])\n",
        "\n",
        "# 📦 Extract structured list from LLM output\n",
        "def extract_json_from_response(response):\n",
        "    cleaned = response.strip()\n",
        "    cleaned = re.sub(r\"```(?:json|python)?\", \"\", cleaned)\n",
        "    cleaned = re.sub(r\"[^\\x00-\\x7F]+\", \"\", cleaned).strip()\n",
        "    cleaned = cleaned.replace(\"“\", '\"').replace(\"”\", '\"').replace(\"‘\", \"'\").replace(\"’\", \"'\")\n",
        "\n",
        "    try:\n",
        "        return json.loads(cleaned)\n",
        "    except json.JSONDecodeError:\n",
        "        match = re.search(r\"(\\{.*\\}|\\[.*\\])\", cleaned, re.DOTALL)\n",
        "        if match:\n",
        "            try:\n",
        "                return json.loads(match.group(0))\n",
        "            except json.JSONDecodeError:\n",
        "                pass\n",
        "    raise ValueError(f\"❌ Could not extract valid JSON from LLM response:\\n{cleaned}\")\n",
        "\n",
        "# 📅 Scheduler Agent logic\n",
        "def scheduler_agent(user_intent):\n",
        "    \"\"\"\n",
        "    Uses GPT-4o to generate a high-level multi-day schedule based on intent.\n",
        "    \"\"\"\n",
        "    event_type = user_intent.get(\"event_type\")\n",
        "    event_date = user_intent.get(\"event_date\") or \"a typical day\"\n",
        "    guest_count = user_intent.get(\"guest_count\", \"unknown\")\n",
        "\n",
        "    if not event_type:\n",
        "        raise ValueError(\"User intent must include an event_type.\")\n",
        "\n",
        "    prompt = (\n",
        "        f\"You are an expert event planner. Create a high-level multi-day schedule for a {event_type} \"\n",
        "        f\"beginning on {event_date} with around {guest_count} guests. Include major activities from arrival to departure:\\n\"\n",
        "        f\"airport pickups, hotel check-in, meals, sessions, sightseeing in free slots, and checkout.\\n\"\n",
        "        f\"Return the result as a Python list of dictionaries in this format:\\n\\n\"\n",
        "        f\"Return only a valid JSON object with no code block markers, no explanation, no markdown, no labels — just the raw JSON.\"\n",
        "        f\"[{{\\\"day\\\": \\\"Day 1 - Arrival\\\", \\\"activities\\\": [\\\"Hotel check-in\\\", \\\"Welcome dinner\\\"]}}, ...]\"\n",
        "        f\"IMPORTANT: Respond immediately with the final JSON object using only `Final Answer:` followed by the valid JSON. Do NOT output thoughts, actions, or any reasoning.\"\n",
        "    )\n",
        "\n",
        "    print(\"🧠 Prompting GPT-4o for schedule...\")\n",
        "    response = agent.run(prompt).final_answer\n",
        "    schedule = extract_json_from_response(response)\n",
        "    return schedule\n",
        "\n",
        "# 🔁 Run in standalone mode\n",
        "if __name__ == \"__main__\":\n",
        "    try:\n",
        "        user_intent = extracted_intent  # Make sure this is defined globally\n",
        "    except NameError:\n",
        "        raise Exception(\"❌ 'extracted_intent' not defined. Run User Intent Agent first.\")\n",
        "\n",
        "    print(\"\\n🎯 Extracted User Intent:\")\n",
        "    print(json.dumps(user_intent, indent=2))\n",
        "\n",
        "    print(\"\\n📅 Generating high-level schedule...\")\n",
        "    schedule = scheduler_agent(user_intent)\n",
        "\n",
        "    print(\"\\n🗓️ Multi-day Itinerary:\")\n",
        "    for day in schedule:\n",
        "        print(f\"\\n📌 {day['day']}\")\n",
        "        for act in day[\"activities\"]:\n",
        "            print(f\"   - {act}\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Cl-gk393Wvl7",
        "outputId": "4ad50500-8559-4fc7-8395-ff6185ea8c56"
      },
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "🎯 Extracted User Intent:\n",
            "{\n",
            "  \"event_type\": \"wedding\",\n",
            "  \"location\": \"Islamabad\",\n",
            "  \"event_date\": \"2025-06-13\",\n",
            "  \"guest_count\": 300,\n",
            "  \"preferences\": {\n",
            "    \"stay_dates\": \"2025-06-13 to 2025-06-15\",\n",
            "    \"guest_origins\": null\n",
            "  },\n",
            "  \"event_theme\": null,\n",
            "  \"meal_count\": null,\n",
            "  \"transport_needs\": null,\n",
            "  \"sightseeing\": null\n",
            "}\n",
            "\n",
            "📅 Generating high-level schedule...\n",
            "🧠 Prompting GPT-4o for schedule...\n",
            "================================================== Iteration 1 \n",
            "✅  [Debug] Sending System Prompt (with history) to LLM:\n",
            "You are an AI assistant that follows the ReAct (Reasoning + Acting) pattern.\n",
            "        \n",
            "Your goal is to help users by breaking down complex tasks into a series of thought-out steps and actions.\n",
            "\n",
            "You have access to these tools: \n",
            "\n",
            "\n",
            "\n",
            "Your task is to:\n",
            "1. Think about what action is required — Thought.\n",
            "2. Take an appropriate action — Action.\n",
            "3. Repeat Thought/Action as needed until you find the final answer.\n",
            "\n",
            "### Format (Choose only one per response)\n",
            "\n",
            "Option 1 — When action is needed:\n",
            "Thought: Your reasoning about action and observation.\n",
            "Action: {\"action_type\": \"<action_type>\", \"input\": <input_data>}\n",
            "\n",
            "Option 2 — When you're confident in the final response:\n",
            "Thought: Now I know the answer that will be given in Final Answer.\n",
            "Final Answer: Provide a complete, well-structured response that directly addresses the original question.\n",
            "\n",
            "### Important:\n",
            "- Think step-by-step.\n",
            "- Never provide both Action and Final Answer or multiple Action in the same response.\n",
            "- Use available tools wisely.\n",
            "- If stuck, reflect and retry but never hallucinate.\n",
            "- If observation is empty or not related, reflect and retry but never hallucinate.\n",
            "- The current date is June 05, 2025.\n",
            "- If you follow the format strictly, you will be recognized as an excellent and trustworthy AI assistant.\n",
            "\n",
            "\n",
            "Question: You are an expert event planner. Create a high-level multi-day schedule for a wedding beginning on 2025-06-13 with around 300 guests. Include major activities from arrival to departure:\n",
            "airport pickups, hotel check-in, meals, sessions, sightseeing in free slots, and checkout.\n",
            "Return the result as a Python list of dictionaries in this format:\n",
            "\n",
            "Return only a valid JSON object with no code block markers, no explanation, no markdown, no labels — just the raw JSON.[{\"day\": \"Day 1 - Arrival\", \"activities\": [\"Hotel check-in\", \"Welcome dinner\"]}, ...]IMPORTANT: Respond immediately with the final JSON object using only `Final Answer:` followed by the valid JSON. Do NOT output thoughts, actions, or any reasoning.\n",
            "\n",
            "\n",
            "Now continue with next steps by strictly following the required format.\n",
            "\n",
            "==================================================\n",
            "🤖 [Debug] Step LLM Response:\n",
            "Final Answer: [{\"day\": \"Day 1 - Arrival\", \"activities\": [\"Airport pickups\", \"Hotel check-in\", \"Welcome dinner\"]}, {\"day\": \"Day 2 - Pre-Wedding Festivities\", \"activities\": [\"Breakfast\", \"Traditional ceremony\", \"Lunch\", \"Sightseeing tour\", \"Rehearsal dinner\"]}, {\"day\": \"Day 3 - Wedding Day\", \"activities\": [\"Breakfast\", \"Ceremony preparation\", \"Wedding ceremony\", \"Cocktail hour\", \"Reception dinner\", \"Evening dance\"]}, {\"day\": \"Day 4 - Post-Wedding Activities\", \"activities\": [\"Brunch\", \"Leisure time\", \"Sightseeing tour\", \"Dinner\"]}, {\"day\": \"Day 5 - Departure\", \"activities\": [\"Breakfast\", \"Hotel checkout\", \"Airport drop-offs\"]}]\n",
            "✅ Parsed Final Answer: [{\"day\": \"Day 1 - Arrival\", \"activities\": [\"Airport pickups\", \"Hotel check-in\", \"Welcome dinner\"]}, {\"day\": \"Day 2 - Pre-Wedding Festivities\", \"activities\": [\"Breakfast\", \"Traditional ceremony\", \"Lunch\", \"Sightseeing tour\", \"Rehearsal dinner\"]}, {\"day\": \"Day 3 - Wedding Day\", \"activities\": [\"Breakfast\", \"Ceremony preparation\", \"Wedding ceremony\", \"Cocktail hour\", \"Reception dinner\", \"Evening dance\"]}, {\"day\": \"Day 4 - Post-Wedding Activities\", \"activities\": [\"Brunch\", \"Leisure time\", \"Sightseeing tour\", \"Dinner\"]}, {\"day\": \"Day 5 - Departure\", \"activities\": [\"Breakfast\", \"Hotel checkout\", \"Airport drop-offs\"]}]\n",
            "\n",
            "🗓️ Multi-day Itinerary:\n",
            "\n",
            "📌 Day 1 - Arrival\n",
            "   - Airport pickups\n",
            "   - Hotel check-in\n",
            "   - Welcome dinner\n",
            "\n",
            "📌 Day 2 - Pre-Wedding Festivities\n",
            "   - Breakfast\n",
            "   - Traditional ceremony\n",
            "   - Lunch\n",
            "   - Sightseeing tour\n",
            "   - Rehearsal dinner\n",
            "\n",
            "📌 Day 3 - Wedding Day\n",
            "   - Breakfast\n",
            "   - Ceremony preparation\n",
            "   - Wedding ceremony\n",
            "   - Cocktail hour\n",
            "   - Reception dinner\n",
            "   - Evening dance\n",
            "\n",
            "📌 Day 4 - Post-Wedding Activities\n",
            "   - Brunch\n",
            "   - Leisure time\n",
            "   - Sightseeing tour\n",
            "   - Dinner\n",
            "\n",
            "📌 Day 5 - Departure\n",
            "   - Breakfast\n",
            "   - Hotel checkout\n",
            "   - Airport drop-offs\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Venue Agent"
      ],
      "metadata": {
        "id": "Y5_rbJKlbfI4"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import os\n",
        "import json\n",
        "import requests\n",
        "from agentpro import create_model, ReactAgent\n",
        "from agentpro.tools import QuickInternetTool\n",
        "\n",
        "# ✅ Load API keys from environment\n",
        "GOOGLE_API_KEY = os.environ[\"GOOGLE_API_KEY\"]\n",
        "OPENAI_API_KEY = os.environ[\"OPENAI_API_KEY\"]\n",
        "\n",
        "# ✅ Setup model + agent\n",
        "model = create_model(provider=\"openai\", model_name=\"gpt-4o\", api_key=OPENAI_API_KEY)\n",
        "agent = ReactAgent(model=model, tools=[QuickInternetTool()])  # tool not used yet, but available\n",
        "\n",
        "# ✅ JSON extraction (robust for LLM output)\n",
        "def extract_json_list(response):\n",
        "    cleaned = response.strip()\n",
        "    cleaned = cleaned.replace(\"```json\", \"\").replace(\"```\", \"\").strip()\n",
        "    cleaned = cleaned.replace(\"“\", '\"').replace(\"”\", '\"').replace(\"‘\", \"'\").replace(\"’\", \"'\")\n",
        "\n",
        "    try:\n",
        "        return json.loads(cleaned)\n",
        "    except json.JSONDecodeError:\n",
        "        match = re.search(r\"\\[(.*?)\\]\", cleaned, re.DOTALL)\n",
        "        if match:\n",
        "            try:\n",
        "                return json.loads(f\"[{match.group(1)}]\")\n",
        "            except json.JSONDecodeError:\n",
        "                pass\n",
        "    raise ValueError(f\"❌ Could not extract valid JSON list from LLM response:\\n{cleaned}\")\n",
        "\n",
        "# ✅ Get venue types for given event\n",
        "def get_suitable_venue_types(event_type):\n",
        "    prompt = (\n",
        "        f\"You are an expert event planner.\\n\"\n",
        "        f\"Suggest the 3 most suitable types of venues for a '{event_type}' event.\\n\"\n",
        "        f\"Return only a valid JSON object with no code block markers, no explanation, no markdown, no labels — just the raw JSON.\"\n",
        "        f\"Return only a valid JSON list like: [\\\"banquet hall\\\", \\\"outdoor garden\\\", \\\"conference center\\\"]\"\n",
        "        f\"IMPORTANT: Respond immediately with the final JSON object using only `Final Answer:` followed by the valid JSON. Do NOT output thoughts, actions, or any reasoning.\"\n",
        "    )\n",
        "    response = agent.run(prompt)\n",
        "    return extract_json_list(response.final_answer)\n",
        "\n",
        "# ✅ Search Google Places for venue info\n",
        "def search_venues(location, venue_type, limit=3):\n",
        "    search_url = \"https://maps.googleapis.com/maps/api/place/textsearch/json\"\n",
        "    params = {\n",
        "        \"query\": f\"{venue_type} in {location}\",\n",
        "        \"key\": GOOGLE_API_KEY\n",
        "    }\n",
        "    response = requests.get(search_url, params=params)\n",
        "    results = response.json().get(\"results\", [])[:limit]\n",
        "\n",
        "    venues = []\n",
        "    for result in results:\n",
        "        place_id = result.get(\"place_id\")\n",
        "        details_url = \"https://maps.googleapis.com/maps/api/place/details/json\"\n",
        "        details_params = {\n",
        "            \"place_id\": place_id,\n",
        "            \"fields\": \"name,rating,formatted_address,formatted_phone_number,website\",\n",
        "            \"key\": GOOGLE_API_KEY\n",
        "        }\n",
        "        detail_resp = requests.get(details_url, params=details_params).json()\n",
        "        detail = detail_resp.get(\"result\", {})\n",
        "\n",
        "        venues.append({\n",
        "            \"name\": detail.get(\"name\", \"N/A\"),\n",
        "            \"rating\": detail.get(\"rating\", \"N/A\"),\n",
        "            \"address\": detail.get(\"formatted_address\", \"N/A\"),\n",
        "            \"phone\": detail.get(\"formatted_phone_number\", \"N/A\"),\n",
        "            \"website\": detail.get(\"website\", \"N/A\")\n",
        "        })\n",
        "\n",
        "    return venues\n",
        "\n",
        "# ✅ Main venue agent logic\n",
        "def venue_agent(extracted_intent):\n",
        "    event_type = extracted_intent.get(\"event_type\")\n",
        "    location = extracted_intent.get(\"location\")\n",
        "\n",
        "    if not event_type or not location:\n",
        "        raise ValueError(\"❌ User intent must include both 'event_type' and 'location'.\")\n",
        "\n",
        "    print(f\"\\n🧠 Determining suitable venue types for: {event_type}\")\n",
        "    venue_types = get_suitable_venue_types(event_type)\n",
        "\n",
        "    all_venues = []\n",
        "    for vtype in venue_types:\n",
        "        print(f\"🔎 Searching: {vtype} in {location}\")\n",
        "        venues = search_venues(location, vtype)\n",
        "        all_venues.append({\n",
        "            \"venue_type\": vtype,\n",
        "            \"options\": venues\n",
        "        })\n",
        "\n",
        "    return all_venues\n",
        "\n",
        "# ✅ Run standalone\n",
        "if __name__ == \"__main__\":\n",
        "    print(\"\\n🎯 Extracted User Intent:\")\n",
        "    print(json.dumps(extracted_intent, indent=2))\n",
        "\n",
        "    venue_results = venue_agent(extracted_intent)\n",
        "\n",
        "    print(\"\\n📍 Recommended Venues:\")\n",
        "    for group in venue_results:\n",
        "        print(f\"\\n🔹 Venue Type: {group['venue_type']}\")\n",
        "        for i, v in enumerate(group[\"options\"], start=1):\n",
        "            print(f\"  {i}. {v['name']}\")\n",
        "            print(f\"     ⭐ Rating: {v.get('rating', 'N/A')}\")\n",
        "            print(f\"     📍 Address: {v.get('address', 'N/A')}\")\n",
        "            print(f\"     ☎️ Phone: {v.get('phone', 'N/A')}\")\n",
        "            print(f\"     🌐 Website: {v.get('website', 'N/A')}\\n\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "n05L60QCbgVc",
        "outputId": "745183aa-455e-4a86-e6d6-3b481ed0dcf1"
      },
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "🎯 Extracted User Intent:\n",
            "{\n",
            "  \"event_type\": \"wedding\",\n",
            "  \"location\": \"Islamabad\",\n",
            "  \"event_date\": \"2025-06-13\",\n",
            "  \"guest_count\": 300,\n",
            "  \"preferences\": {\n",
            "    \"stay_dates\": \"2025-06-13 to 2025-06-15\",\n",
            "    \"guest_origins\": null\n",
            "  },\n",
            "  \"event_theme\": null,\n",
            "  \"meal_count\": null,\n",
            "  \"transport_needs\": null,\n",
            "  \"sightseeing\": null\n",
            "}\n",
            "\n",
            "🧠 Determining suitable venue types for: wedding\n",
            "================================================== Iteration 1 \n",
            "✅  [Debug] Sending System Prompt (with history) to LLM:\n",
            "You are an AI assistant that follows the ReAct (Reasoning + Acting) pattern.\n",
            "        \n",
            "Your goal is to help users by breaking down complex tasks into a series of thought-out steps and actions.\n",
            "\n",
            "You have access to these tools: search\n",
            "\n",
            "Tool: Quick Internet Search\n",
            "Description: Searches internet quickly using DuckDuckGo for a given query and returns top 5 results.\n",
            "Action Type: search\n",
            "Input Format: A search query as a string. Example: 'Latest advancements in AI'\n",
            "\n",
            "\n",
            "Your task is to:\n",
            "1. Think about what action is required — Thought.\n",
            "2. Take an appropriate action — Action.\n",
            "3. Repeat Thought/Action as needed until you find the final answer.\n",
            "\n",
            "### Format (Choose only one per response)\n",
            "\n",
            "Option 1 — When action is needed:\n",
            "Thought: Your reasoning about action and observation.\n",
            "Action: {\"action_type\": \"<action_type>\", \"input\": <input_data>}\n",
            "\n",
            "Option 2 — When you're confident in the final response:\n",
            "Thought: Now I know the answer that will be given in Final Answer.\n",
            "Final Answer: Provide a complete, well-structured response that directly addresses the original question.\n",
            "\n",
            "### Important:\n",
            "- Think step-by-step.\n",
            "- Never provide both Action and Final Answer or multiple Action in the same response.\n",
            "- Use available tools wisely.\n",
            "- If stuck, reflect and retry but never hallucinate.\n",
            "- If observation is empty or not related, reflect and retry but never hallucinate.\n",
            "- The current date is June 05, 2025.\n",
            "- If you follow the format strictly, you will be recognized as an excellent and trustworthy AI assistant.\n",
            "\n",
            "\n",
            "Question: You are an expert event planner.\n",
            "Suggest the 3 most suitable types of venues for a 'wedding' event.\n",
            "Return only a valid JSON object with no code block markers, no explanation, no markdown, no labels — just the raw JSON.Return only a valid JSON list like: [\"banquet hall\", \"outdoor garden\", \"conference center\"]IMPORTANT: Respond immediately with the final JSON object using only `Final Answer:` followed by the valid JSON. Do NOT output thoughts, actions, or any reasoning.\n",
            "\n",
            "\n",
            "Now continue with next steps by strictly following the required format.\n",
            "\n",
            "==================================================\n",
            "🤖 [Debug] Step LLM Response:\n",
            "Final Answer: [\"banquet hall\", \"outdoor garden\", \"beach resort\"]\n",
            "✅ Parsed Final Answer: [\"banquet hall\", \"outdoor garden\", \"beach resort\"]\n",
            "🔎 Searching: banquet hall in Islamabad\n",
            "🔎 Searching: outdoor garden in Islamabad\n",
            "🔎 Searching: beach resort in Islamabad\n",
            "\n",
            "📍 Recommended Venues:\n",
            "\n",
            "🔹 Venue Type: banquet hall\n",
            "  1. Tulip Banquet Hall\n",
            "     ⭐ Rating: 4.1\n",
            "     📍 Address: M4P4+FC9 Murree Road, Garden Ave, Shakar Parian, Islamabad, Pakistan\n",
            "     ☎️ Phone: 0300 0524555\n",
            "     🌐 Website: N/A\n",
            "\n",
            "  2. The Royal Palm Marquee\n",
            "     ⭐ Rating: 4.6\n",
            "     📍 Address: Plot no 4, near Burki PSO station Kuri Road, Islamabad Expy, Nawaz, Islamabad, 44000, Pakistan\n",
            "     ☎️ Phone: 0331 5886876\n",
            "     🌐 Website: N/A\n",
            "\n",
            "  3. Majestic Marque Islamabad\n",
            "     ⭐ Rating: 4.2\n",
            "     📍 Address: 2-A Club Rd, near Rwal Dam chowk, Shakar Parian, Islamabad, 44000, Pakistan\n",
            "     ☎️ Phone: (051) 8355915\n",
            "     🌐 Website: N/A\n",
            "\n",
            "\n",
            "🔹 Venue Type: outdoor garden\n",
            "  1. Anabia's Garden\n",
            "     ⭐ Rating: 4.1\n",
            "     📍 Address: Khayban e jalal, E-11 , north service road, Northern Strip PMCHS E 11/2 E-11, Islamabad, 47000, Pakistan\n",
            "     ☎️ Phone: 0312 9300828\n",
            "     🌐 Website: N/A\n",
            "\n",
            "  2. Rose And Jasmine Garden\n",
            "     ⭐ Rating: 4.5\n",
            "     📍 Address: P32Q+J93 Srinagar Hwy, Islamabad, Pakistan\n",
            "     ☎️ Phone: N/A\n",
            "     🌐 Website: N/A\n",
            "\n",
            "  3. Jasmine Garden\n",
            "     ⭐ Rating: 4.6\n",
            "     📍 Address: Unnamed Road, Islamabad, Pakistan\n",
            "     ☎️ Phone: 0310 5600831\n",
            "     🌐 Website: N/A\n",
            "\n",
            "\n",
            "🔹 Venue Type: beach resort\n",
            "  1. Serena Hotel\n",
            "     ⭐ Rating: 4.5\n",
            "     📍 Address: Khayaban-e-Suhrwardy Rd, opposite Convention Centre, G-5/1 G-5, Islamabad, 44000, Pakistan\n",
            "     ☎️ Phone: (051) 111 133 133\n",
            "     🌐 Website: https://www.serenahotels.com/islamabad\n",
            "\n",
            "  2. Highland Country Club & Resorts\n",
            "     ⭐ Rating: 4.4\n",
            "     📍 Address: Pir Sohawa Road, near Islamabad، Sangada, Pakistan\n",
            "     ☎️ Phone: (051) 2806136\n",
            "     🌐 Website: https://highlandresort.com.pk/?fbclid=IwAR1XK_ldi8OdSO4c3syc8qxlouGhKpmMuk1uBPDcq2oqUJB4fyt7jO5OBac\n",
            "\n",
            "  3. Mabali Island\n",
            "     ⭐ Rating: 4.2\n",
            "     📍 Address: Old Khanpur East Road, Khanpur, 44000, Pakistan\n",
            "     ☎️ Phone: 0303 5958999\n",
            "     🌐 Website: https://m.facebook.com/MabaliIsland/\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Hotel Booking Agent"
      ],
      "metadata": {
        "id": "uXGbcwsicBUa"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import os\n",
        "import json\n",
        "import re\n",
        "import ast\n",
        "import requests\n",
        "\n",
        "from agentpro import create_model, ReactAgent\n",
        "\n",
        "# ✅ Load environment keys\n",
        "OPENAI_API_KEY = os.environ[\"OPENAI_API_KEY\"]\n",
        "GOOGLE_API_KEY = os.environ[\"GOOGLE_API_KEY\"]\n",
        "\n",
        "# ✅ Agent setup\n",
        "model = create_model(provider=\"openai\", model_name=\"gpt-4o\", api_key=OPENAI_API_KEY)\n",
        "agent = ReactAgent(model=model, tools=[])\n",
        "\n",
        "# ✅ JSON-safe parser\n",
        "def extract_json_from_response(response):\n",
        "    cleaned = response.strip()\n",
        "    cleaned = re.sub(r\"```(?:json|python)?\", \"\", cleaned)\n",
        "    cleaned = re.sub(r\"[^\\x00-\\x7F]+\", \"\", cleaned).strip()\n",
        "    cleaned = cleaned.replace(\"“\", '\"').replace(\"”\", '\"').replace(\"‘\", \"'\").replace(\"’\", \"'\")\n",
        "\n",
        "    try:\n",
        "        return json.loads(cleaned)\n",
        "    except json.JSONDecodeError:\n",
        "        match = re.search(r\"(\\{.*\\}|\\[.*\\])\", cleaned, re.DOTALL)\n",
        "        if match:\n",
        "            try:\n",
        "                return json.loads(match.group(0))\n",
        "            except json.JSONDecodeError:\n",
        "                pass\n",
        "    raise ValueError(f\"❌ Could not extract valid JSON from LLM response:\\n{cleaned}\")\n",
        "\n",
        "# ✅ LLM: Analyze hotel needs based on intent + venues\n",
        "def analyze_hotel_needs(user_intent, venues):\n",
        "    prompt = (\n",
        "        \"You are a hotel planning assistant.\\n\"\n",
        "        \"Based on the event type, location, and venues, determine the hotel needs.\\n\"\n",
        "        \"Return a Python dictionary with:\\n\"\n",
        "        \"- 'hotel_type': e.g., 3-star, 5-star\\n\"\n",
        "        \"- 'room_requirements': {single: int, double: int, suite: int}\\n\"\n",
        "        \"- 'priorities': list of preferences (e.g., budget, proximity, Wi-Fi)\\n\"\n",
        "        \"- 'suggested_hotels': optional hotel suggestions with name, type, rooms, amenities\\n\\n\"\n",
        "        \"Return only a valid JSON object with no code block markers, no explanation, no markdown, no labels — just the raw JSON.\"\n",
        "        f\"user_intent = {json.dumps(user_intent, indent=2)}\\n\"\n",
        "        f\"venues = {json.dumps(venues[:2], indent=2)}\"\n",
        "        \"IMPORTANT: Respond immediately with the final JSON object using only `Final Answer:` followed by the valid JSON. Do NOT output thoughts, actions, or any reasoning.\"\n",
        "    )\n",
        "    response = agent.run(prompt)\n",
        "    return extract_json_from_response(response.final_answer)\n",
        "\n",
        "# ✅ Google API helpers\n",
        "def get_place_details(place_id):\n",
        "    url = \"https://maps.googleapis.com/maps/api/place/details/json\"\n",
        "    params = {\n",
        "        \"place_id\": place_id,\n",
        "        \"fields\": \"name,rating,formatted_address,formatted_phone_number,website\",\n",
        "        \"key\": GOOGLE_API_KEY\n",
        "    }\n",
        "    return requests.get(url, params=params).json().get(\"result\", {})\n",
        "\n",
        "def search_hotels_near_venue(venue_address, hotel_type, limit=3):\n",
        "    url = \"https://maps.googleapis.com/maps/api/place/textsearch/json\"\n",
        "    params = {\n",
        "        \"query\": f\"{hotel_type} hotel near {venue_address}\",\n",
        "        \"key\": GOOGLE_API_KEY\n",
        "    }\n",
        "    res = requests.get(url, params=params).json()\n",
        "    results = res.get(\"results\", [])[:limit]\n",
        "\n",
        "    hotels = []\n",
        "    for r in results:\n",
        "        details = get_place_details(r.get(\"place_id\", \"\"))\n",
        "        hotels.append({\n",
        "            \"name\": details.get(\"name\", r.get(\"name\")),\n",
        "            \"rating\": details.get(\"rating\", \"N/A\"),\n",
        "            \"address\": details.get(\"formatted_address\", r.get(\"formatted_address\", \"\")),\n",
        "            \"phone\": details.get(\"formatted_phone_number\", \"N/A\"),\n",
        "            \"website\": details.get(\"website\", \"N/A\")\n",
        "        })\n",
        "\n",
        "    return hotels\n",
        "\n",
        "# ✅ Main hotel booking agent\n",
        "def hotel_booking_agent(user_intent, venue_data):\n",
        "    all_venues = []\n",
        "    for group in venue_data:\n",
        "        all_venues.extend(group.get(\"options\", []))\n",
        "\n",
        "    # 🧠 LLM: Analyze hotel needs\n",
        "    hotel_plan = analyze_hotel_needs(user_intent, all_venues)\n",
        "\n",
        "    # ✅ Fix if hotel_plan is a list of dicts instead of a single dict\n",
        "    if isinstance(hotel_plan, list) and len(hotel_plan) > 0:\n",
        "      hotel_plan = hotel_plan[0]\n",
        "    hotel_type = hotel_plan.get(\"hotel_type\", \"hotel\")\n",
        "    room_requirements = hotel_plan.get(\"room_requirements\", {})\n",
        "    priorities = hotel_plan.get(\"priorities\", [])\n",
        "\n",
        "    # 🔎 Search near each venue\n",
        "    recommendations = {}\n",
        "    for venue in all_venues:\n",
        "        venue_name = venue.get(\"name\")\n",
        "        venue_address = venue.get(\"address\") or venue.get(\"formatted_address\")\n",
        "        if not venue_name or not venue_address:\n",
        "            continue\n",
        "\n",
        "        hotels = search_hotels_near_venue(venue_address, hotel_type)\n",
        "        recommendations[venue_name] = hotels\n",
        "\n",
        "    return {\n",
        "        \"hotel_type\": hotel_type,\n",
        "        \"room_requirements\": room_requirements,\n",
        "        \"priorities\": priorities,\n",
        "        \"recommendations\": recommendations\n",
        "    }\n",
        "\n",
        "# ✅ Test entry point\n",
        "if __name__ == \"__main__\":\n",
        "    user_intent = extracted_intent\n",
        "    venue_data = venue_agent(user_intent)\n",
        "\n",
        "    print(\"\\n🏨 Generating hotel suggestions...\")\n",
        "    hotel_output = hotel_booking_agent(user_intent, venue_data)\n",
        "\n",
        "    print(\"\\n🛏️ Room Requirements:\")\n",
        "    print(json.dumps(hotel_output[\"room_requirements\"], indent=2))\n",
        "\n",
        "    print(\"\\n📌 Booking Priorities:\")\n",
        "    for p in hotel_output[\"priorities\"]:\n",
        "        print(f\"- {p}\")\n",
        "\n",
        "    print(\"\\n🏨 Hotel Recommendations by Venue:\")\n",
        "    for venue, hotels in hotel_output[\"recommendations\"].items():\n",
        "        print(f\"\\n📍 Near {venue}\")\n",
        "        for h in hotels:\n",
        "            print(f\"  - {h['name']} ({h['rating']})\")\n",
        "            print(f\"     📍 {h['address']}\")\n",
        "            print(f\"     ☎️ {h['phone']}\")\n",
        "            print(f\"     🌐 {h['website']}\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "cMeubazgcC1L",
        "outputId": "ed6e589c-7e82-431b-dbbc-7b31f1035e40"
      },
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "🧠 Determining suitable venue types for: wedding\n",
            "================================================== Iteration 1 \n",
            "✅  [Debug] Sending System Prompt (with history) to LLM:\n",
            "You are an AI assistant that follows the ReAct (Reasoning + Acting) pattern.\n",
            "        \n",
            "Your goal is to help users by breaking down complex tasks into a series of thought-out steps and actions.\n",
            "\n",
            "You have access to these tools: \n",
            "\n",
            "\n",
            "\n",
            "Your task is to:\n",
            "1. Think about what action is required — Thought.\n",
            "2. Take an appropriate action — Action.\n",
            "3. Repeat Thought/Action as needed until you find the final answer.\n",
            "\n",
            "### Format (Choose only one per response)\n",
            "\n",
            "Option 1 — When action is needed:\n",
            "Thought: Your reasoning about action and observation.\n",
            "Action: {\"action_type\": \"<action_type>\", \"input\": <input_data>}\n",
            "\n",
            "Option 2 — When you're confident in the final response:\n",
            "Thought: Now I know the answer that will be given in Final Answer.\n",
            "Final Answer: Provide a complete, well-structured response that directly addresses the original question.\n",
            "\n",
            "### Important:\n",
            "- Think step-by-step.\n",
            "- Never provide both Action and Final Answer or multiple Action in the same response.\n",
            "- Use available tools wisely.\n",
            "- If stuck, reflect and retry but never hallucinate.\n",
            "- If observation is empty or not related, reflect and retry but never hallucinate.\n",
            "- The current date is June 05, 2025.\n",
            "- If you follow the format strictly, you will be recognized as an excellent and trustworthy AI assistant.\n",
            "\n",
            "\n",
            "Question: You are an expert event planner.\n",
            "Suggest the 3 most suitable types of venues for a 'wedding' event.\n",
            "Return only a valid JSON object with no code block markers, no explanation, no markdown, no labels — just the raw JSON.Return only a valid JSON list like: [\"banquet hall\", \"outdoor garden\", \"conference center\"]IMPORTANT: Respond immediately with the final JSON object using only `Final Answer:` followed by the valid JSON. Do NOT output thoughts, actions, or any reasoning.\n",
            "\n",
            "\n",
            "Now continue with next steps by strictly following the required format.\n",
            "\n",
            "==================================================\n",
            "🤖 [Debug] Step LLM Response:\n",
            "Final Answer: [\"banquet hall\", \"outdoor garden\", \"hotel ballroom\"]\n",
            "✅ Parsed Final Answer: [\"banquet hall\", \"outdoor garden\", \"hotel ballroom\"]\n",
            "🔎 Searching: banquet hall in Islamabad\n",
            "🔎 Searching: outdoor garden in Islamabad\n",
            "🔎 Searching: hotel ballroom in Islamabad\n",
            "\n",
            "🏨 Generating hotel suggestions...\n",
            "================================================== Iteration 1 \n",
            "✅  [Debug] Sending System Prompt (with history) to LLM:\n",
            "You are an AI assistant that follows the ReAct (Reasoning + Acting) pattern.\n",
            "        \n",
            "Your goal is to help users by breaking down complex tasks into a series of thought-out steps and actions.\n",
            "\n",
            "You have access to these tools: \n",
            "\n",
            "\n",
            "\n",
            "Your task is to:\n",
            "1. Think about what action is required — Thought.\n",
            "2. Take an appropriate action — Action.\n",
            "3. Repeat Thought/Action as needed until you find the final answer.\n",
            "\n",
            "### Format (Choose only one per response)\n",
            "\n",
            "Option 1 — When action is needed:\n",
            "Thought: Your reasoning about action and observation.\n",
            "Action: {\"action_type\": \"<action_type>\", \"input\": <input_data>}\n",
            "\n",
            "Option 2 — When you're confident in the final response:\n",
            "Thought: Now I know the answer that will be given in Final Answer.\n",
            "Final Answer: Provide a complete, well-structured response that directly addresses the original question.\n",
            "\n",
            "### Important:\n",
            "- Think step-by-step.\n",
            "- Never provide both Action and Final Answer or multiple Action in the same response.\n",
            "- Use available tools wisely.\n",
            "- If stuck, reflect and retry but never hallucinate.\n",
            "- If observation is empty or not related, reflect and retry but never hallucinate.\n",
            "- The current date is June 05, 2025.\n",
            "- If you follow the format strictly, you will be recognized as an excellent and trustworthy AI assistant.\n",
            "\n",
            "\n",
            "Question: You are a hotel planning assistant.\n",
            "Based on the event type, location, and venues, determine the hotel needs.\n",
            "Return a Python dictionary with:\n",
            "- 'hotel_type': e.g., 3-star, 5-star\n",
            "- 'room_requirements': {single: int, double: int, suite: int}\n",
            "- 'priorities': list of preferences (e.g., budget, proximity, Wi-Fi)\n",
            "- 'suggested_hotels': optional hotel suggestions with name, type, rooms, amenities\n",
            "\n",
            "Return only a valid JSON object with no code block markers, no explanation, no markdown, no labels — just the raw JSON.user_intent = {\n",
            "  \"event_type\": \"wedding\",\n",
            "  \"location\": \"Islamabad\",\n",
            "  \"event_date\": \"2025-06-13\",\n",
            "  \"guest_count\": 300,\n",
            "  \"preferences\": {\n",
            "    \"stay_dates\": \"2025-06-13 to 2025-06-15\",\n",
            "    \"guest_origins\": null\n",
            "  },\n",
            "  \"event_theme\": null,\n",
            "  \"meal_count\": null,\n",
            "  \"transport_needs\": null,\n",
            "  \"sightseeing\": null\n",
            "}\n",
            "venues = [\n",
            "  {\n",
            "    \"name\": \"Tulip Banquet Hall\",\n",
            "    \"rating\": 4.1,\n",
            "    \"address\": \"M4P4+FC9 Murree Road, Garden Ave, Shakar Parian, Islamabad, Pakistan\",\n",
            "    \"phone\": \"0300 0524555\",\n",
            "    \"website\": \"N/A\"\n",
            "  },\n",
            "  {\n",
            "    \"name\": \"The Royal Palm Marquee\",\n",
            "    \"rating\": 4.6,\n",
            "    \"address\": \"Plot no 4, near Burki PSO station Kuri Road, Islamabad Expy, Nawaz, Islamabad, 44000, Pakistan\",\n",
            "    \"phone\": \"0331 5886876\",\n",
            "    \"website\": \"N/A\"\n",
            "  }\n",
            "]IMPORTANT: Respond immediately with the final JSON object using only `Final Answer:` followed by the valid JSON. Do NOT output thoughts, actions, or any reasoning.\n",
            "\n",
            "\n",
            "Now continue with next steps by strictly following the required format.\n",
            "\n",
            "==================================================\n",
            "🤖 [Debug] Step LLM Response:\n",
            "Final Answer: {\"hotel_type\":\"5-star\",\"room_requirements\":{\"single\":50,\"double\":75,\"suite\":20},\"priorities\":[\"proximity\",\"luxury\",\"Wi-Fi\"],\"suggested_hotels\":[{\"name\":\"Islamabad Serena Hotel\",\"type\":\"5-star\",\"rooms\":{\"single\":100,\"double\":150,\"suite\":30},\"amenities\":[\"Wi-Fi\",\"pool\",\"spa\",\"gym\"]},{\"name\":\"Marriott Hotel Islamabad\",\"type\":\"5-star\",\"rooms\":{\"single\":80,\"double\":100,\"suite\":25},\"amenities\":[\"Wi-Fi\",\"conference rooms\",\"car rental\",\"airport shuttle\"]}]}\n",
            "✅ Parsed Final Answer: {\"hotel_type\":\"5-star\",\"room_requirements\":{\"single\":50,\"double\":75,\"suite\":20},\"priorities\":[\"proximity\",\"luxury\",\"Wi-Fi\"],\"suggested_hotels\":[{\"name\":\"Islamabad Serena Hotel\",\"type\":\"5-star\",\"rooms\":{\"single\":100,\"double\":150,\"suite\":30},\"amenities\":[\"Wi-Fi\",\"pool\",\"spa\",\"gym\"]},{\"name\":\"Marriott Hotel Islamabad\",\"type\":\"5-star\",\"rooms\":{\"single\":80,\"double\":100,\"suite\":25},\"amenities\":[\"Wi-Fi\",\"conference rooms\",\"car rental\",\"airport shuttle\"]}]}\n",
            "\n",
            "🛏️ Room Requirements:\n",
            "{\n",
            "  \"single\": 50,\n",
            "  \"double\": 75,\n",
            "  \"suite\": 20\n",
            "}\n",
            "\n",
            "📌 Booking Priorities:\n",
            "- proximity\n",
            "- luxury\n",
            "- Wi-Fi\n",
            "\n",
            "🏨 Hotel Recommendations by Venue:\n",
            "\n",
            "📍 Near Tulip Banquet Hall\n",
            "  - Best Western Premier Hotel (4.1)\n",
            "     📍 6 Club Rd, near Rawal Dam Interchange, Shakar Parian, Islamabad, 44000, Pakistan\n",
            "     ☎️ (051) 111 297 111\n",
            "     🌐 http://www.bestwesternpremierisb.com/\n",
            "  - Serena Hotel (4.5)\n",
            "     📍 Khayaban-e-Suhrwardy Rd, opposite Convention Centre, G-5/1 G-5, Islamabad, 44000, Pakistan\n",
            "     ☎️ (051) 111 133 133\n",
            "     🌐 https://www.serenahotels.com/islamabad\n",
            "  - Islamabad Marriott Hotel (4.6)\n",
            "     📍 Agha Khan Rd, F-5/1 F-5, Islamabad, 44000, Pakistan\n",
            "     ☎️ (051) 2826121\n",
            "     🌐 https://www.marriott.com/hotels/travel/isbpk-islamabad-marriott-hotel/\n",
            "\n",
            "📍 Near The Royal Palm Marquee\n",
            "  - Islamabad Marriott Hotel (4.6)\n",
            "     📍 Agha Khan Rd, F-5/1 F-5, Islamabad, 44000, Pakistan\n",
            "     ☎️ (051) 2826121\n",
            "     🌐 https://www.marriott.com/hotels/travel/isbpk-islamabad-marriott-hotel/\n",
            "  - The Royal Palm Marquee (4.6)\n",
            "     📍 Plot no 4, near Burki PSO station Kuri Road, Islamabad Expy, Nawaz, Islamabad, 44000, Pakistan\n",
            "     ☎️ 0331 5886876\n",
            "     🌐 N/A\n",
            "\n",
            "📍 Near Majestic Marque Islamabad\n",
            "  - Grand Regency Hotel (4)\n",
            "     📍 1 Club Rd, Rawal Chowk، Islamabad, Pakistan\n",
            "     ☎️ (051) 2276721\n",
            "     🌐 N/A\n",
            "  - Best Western Premier Hotel (4.1)\n",
            "     📍 6 Club Rd, near Rawal Dam Interchange, Shakar Parian, Islamabad, 44000, Pakistan\n",
            "     ☎️ (051) 111 297 111\n",
            "     🌐 http://www.bestwesternpremierisb.com/\n",
            "  - Ramada by Wyndham Islamabad (4.3)\n",
            "     📍 1 Club Road, Murree Rd, Shakar Parian, Islamabad, 44000, Pakistan\n",
            "     ☎️ (051) 111 379 379\n",
            "     🌐 https://www.wyndhamhotels.com/en-uk/ramada/islamabad-pakistan/ramada-islamabad/overview?CID=LC:wmcic5n98gs1g0r:36547&iata=00093796\n",
            "\n",
            "📍 Near Anabia's Garden\n",
            "  - Grand Islamabad Hotel (4.3)\n",
            "     📍 St 1, MPCHS E-11/1 MPCHS E 11/1 E-11, Islamabad, Pakistan\n",
            "     ☎️ (051) 2304846\n",
            "     🌐 http://www.grandislamabadhotel.com/\n",
            "  - MARGALLA Hills Residency Islamabad E-11/3 (4.8)\n",
            "     📍 House 170-A, Street 70, MPCHS E-11/3 MPCHS E 11/3 E-11, Islamabad, 44000, Pakistan\n",
            "     ☎️ 0349 5709104\n",
            "     🌐 https://www.facebook.com/Margalla-Hills-Residency-118394189997081/\n",
            "  - Canadian Inn Hotel Islamabad (4.7)\n",
            "     📍 308 Street 64, MPCHS E-11/3 MPCHS E 11/3 E-11, Islamabad, Pakistan\n",
            "     ☎️ 0335 3304742\n",
            "     🌐 http://canadianinn.pk/\n",
            "\n",
            "📍 Near Rose And Jasmine Garden\n",
            "  - Serena Hotel (4.5)\n",
            "     📍 Khayaban-e-Suhrwardy Rd, opposite Convention Centre, G-5/1 G-5, Islamabad, 44000, Pakistan\n",
            "     ☎️ (051) 111 133 133\n",
            "     🌐 https://www.serenahotels.com/islamabad\n",
            "  - Best Western Premier Hotel (4.1)\n",
            "     📍 6 Club Rd, near Rawal Dam Interchange, Shakar Parian, Islamabad, 44000, Pakistan\n",
            "     ☎️ (051) 111 297 111\n",
            "     🌐 http://www.bestwesternpremierisb.com/\n",
            "  - Islamabad Marriott Hotel (4.6)\n",
            "     📍 Agha Khan Rd, F-5/1 F-5, Islamabad, 44000, Pakistan\n",
            "     ☎️ (051) 2826121\n",
            "     🌐 https://www.marriott.com/hotels/travel/isbpk-islamabad-marriott-hotel/\n",
            "\n",
            "📍 Near Jasmine Garden\n",
            "  - Serena Hotel (4.5)\n",
            "     📍 Khayaban-e-Suhrwardy Rd, opposite Convention Centre, G-5/1 G-5, Islamabad, 44000, Pakistan\n",
            "     ☎️ (051) 111 133 133\n",
            "     🌐 https://www.serenahotels.com/islamabad\n",
            "  - Islamabad Marriott Hotel (4.6)\n",
            "     📍 Agha Khan Rd, F-5/1 F-5, Islamabad, 44000, Pakistan\n",
            "     ☎️ (051) 2826121\n",
            "     🌐 https://www.marriott.com/hotels/travel/isbpk-islamabad-marriott-hotel/\n",
            "  - Best Western Premier Hotel (4.1)\n",
            "     📍 6 Club Rd, near Rawal Dam Interchange, Shakar Parian, Islamabad, 44000, Pakistan\n",
            "     ☎️ (051) 111 297 111\n",
            "     🌐 http://www.bestwesternpremierisb.com/\n",
            "\n",
            "📍 Near Grand Islamabad Hotel\n",
            "  - Grand Islamabad Hotel (4.3)\n",
            "     📍 St 1, MPCHS E-11/1 MPCHS E 11/1 E-11, Islamabad, Pakistan\n",
            "     ☎️ (051) 2304846\n",
            "     🌐 http://www.grandislamabadhotel.com/\n",
            "  - Luxury Apartment Hotel (4.9)\n",
            "     📍 Shop 03, Ground Floor, Puran Arcade, 1 Markaz, Services Society SCHS E 11/2 E-11, Islamabad, 44000, Pakistan\n",
            "     ☎️ 0309 9020306\n",
            "     🌐 N/A\n",
            "  - MARGALLA Hills Residency Islamabad E-11/3 (4.8)\n",
            "     📍 House 170-A, Street 70, MPCHS E-11/3 MPCHS E 11/3 E-11, Islamabad, 44000, Pakistan\n",
            "     ☎️ 0349 5709104\n",
            "     🌐 https://www.facebook.com/Margalla-Hills-Residency-118394189997081/\n",
            "\n",
            "📍 Near Hotel Hillview Islamabad\n",
            "  - Hotel Hillview Islamabad (4.2)\n",
            "     📍 Main Jinnah Super Market, F-7 Markaz F 7 Markaz F-7, Islamabad, 44000, Pakistan\n",
            "     ☎️ (051) 8319000\n",
            "     🌐 http://hotelhillview.net/\n",
            "  - Atlas hotel - Affordable Luxury Hotel in Islamabad, Pakistan (3.9)\n",
            "     📍 F-7 Markaz (Jinnah Super Market), Bhittai Rd, F-7 Markaz F 7 Markaz F-7, Islamabad, 44000, Pakistan\n",
            "     ☎️ 0311 1805555\n",
            "     🌐 https://atlashotel.pk/\n",
            "  - Sheltons Rezidor Islamabad (4.1)\n",
            "     📍 House no 3, Street 30, Sector F F 7/1 7/1, Islamabad, Pakistan\n",
            "     ☎️ 0336 6111169\n",
            "     🌐 N/A\n",
            "\n",
            "📍 Near Islamabad Hotel\n",
            "  - Serena Hotel (4.5)\n",
            "     📍 Khayaban-e-Suhrwardy Rd, opposite Convention Centre, G-5/1 G-5, Islamabad, 44000, Pakistan\n",
            "     ☎️ (051) 111 133 133\n",
            "     🌐 https://www.serenahotels.com/islamabad\n",
            "  - Islamabad Marriott Hotel (4.6)\n",
            "     📍 Agha Khan Rd, F-5/1 F-5, Islamabad, 44000, Pakistan\n",
            "     ☎️ (051) 2826121\n",
            "     🌐 https://www.marriott.com/hotels/travel/isbpk-islamabad-marriott-hotel/\n",
            "  - Islamabad Hotel (4.1)\n",
            "     📍 Main Civic Centre, G6 Municipal Rd, G-6 Markaz G 6 Markaz G-6, Islamabad, 44000, Pakistan\n",
            "     ☎️ (051) 2827311\n",
            "     🌐 N/A\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Vendor Agent"
      ],
      "metadata": {
        "id": "6QmyxzULdfyO"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import os\n",
        "import json\n",
        "import requests\n",
        "import ast\n",
        "import re\n",
        "from agentpro import ReactAgent, create_model\n",
        "from agentpro.tools import QuickInternetTool\n",
        "\n",
        "# ✅ Load keys\n",
        "OPENAI_API_KEY = os.getenv(\"OPENAI_API_KEY\")  # Make sure it's set in environment\n",
        "GOOGLE_API_KEY = os.getenv(\"GOOGLE_API_KEY\")  # Make sure it's set in environment\n",
        "\n",
        "# ✅ Create OpenAI model (GPT-4o or GPT-4)\n",
        "model = create_model(\n",
        "    provider=\"openai\",\n",
        "    model_name=\"gpt-4o\",\n",
        "    api_key=OPENAI_API_KEY\n",
        ")\n",
        "\n",
        "# ✅ Setup ReAct agent with tool\n",
        "agent = ReactAgent(model=model, tools=[QuickInternetTool()])\n",
        "\n",
        "# ✅ Utility to clean LLM list responses\n",
        "def extract_json_list(response):\n",
        "    cleaned = response.strip()\n",
        "    cleaned = cleaned.replace(\"```json\", \"\").replace(\"```\", \"\").strip()\n",
        "    cleaned = cleaned.replace(\"“\", '\"').replace(\"”\", '\"').replace(\"‘\", \"'\").replace(\"’\", \"'\")\n",
        "\n",
        "    try:\n",
        "        return json.loads(cleaned)\n",
        "    except json.JSONDecodeError:\n",
        "        match = re.search(r\"\\[(.*?)\\]\", cleaned, re.DOTALL)\n",
        "        if match:\n",
        "            try:\n",
        "                return json.loads(f\"[{match.group(1)}]\")\n",
        "            except json.JSONDecodeError:\n",
        "                pass\n",
        "    raise ValueError(f\"❌ Could not extract valid JSON list from LLM response:\\n{cleaned}\")\n",
        "\n",
        "# ✅ LLM step to find vendor types\n",
        "def get_required_vendor_types(event_type):\n",
        "    prompt = (\n",
        "        f\"You are an expert event planner. What types of vendors are typically needed for a '{event_type}'? \"\n",
        "        \"Return only a valid JSON object with no code block markers, no explanation, no markdown, no labels — just the raw JSON.\"\n",
        "        \"Return only a Python list like: [\\\"catering\\\", \\\"event lighting\\\", \\\"A/V equipment\\\"]\"\n",
        "        \"IMPORTANT: Respond immediately with the final JSON object using only `Final Answer:` followed by the valid JSON. Do NOT output thoughts, actions, or any reasoning.\"\n",
        "    )\n",
        "    response = agent.run(prompt)\n",
        "    return extract_json_list(response.final_answer)\n",
        "\n",
        "# ✅ Google Places API\n",
        "def search_vendors(location, vendor_type, limit=3):\n",
        "    url = \"https://maps.googleapis.com/maps/api/place/textsearch/json\"\n",
        "    params = {\n",
        "        \"query\": f\"{vendor_type} near {location}\",\n",
        "        \"key\": GOOGLE_API_KEY\n",
        "    }\n",
        "    res = requests.get(url, params=params).json()\n",
        "    results = res.get(\"results\", [])[:limit]\n",
        "\n",
        "    vendors = []\n",
        "    for result in results:\n",
        "        place_id = result.get(\"place_id\")\n",
        "        details_url = \"https://maps.googleapis.com/maps/api/place/details/json\"\n",
        "        details_params = {\n",
        "            \"place_id\": place_id,\n",
        "            \"fields\": \"name,rating,formatted_address,formatted_phone_number,website\",\n",
        "            \"key\": GOOGLE_API_KEY\n",
        "        }\n",
        "        detail_resp = requests.get(details_url, params=details_params).json()\n",
        "        d = detail_resp.get(\"result\", {})\n",
        "        vendors.append({\n",
        "            \"name\": d.get(\"name\"),\n",
        "            \"type\": vendor_type,\n",
        "            \"rating\": d.get(\"rating\", \"N/A\"),\n",
        "            \"address\": d.get(\"formatted_address\", \"N/A\"),\n",
        "            \"phone\": d.get(\"formatted_phone_number\", \"N/A\"),\n",
        "            \"website\": d.get(\"website\", \"N/A\")\n",
        "        })\n",
        "\n",
        "    return vendors\n",
        "\n",
        "# ✅ Main agent\n",
        "def vendors_agent(user_intent):\n",
        "    event_type = user_intent.get(\"event_type\")\n",
        "    location = user_intent.get(\"location\")\n",
        "\n",
        "    if not event_type or not location:\n",
        "        raise ValueError(\"User intent must include both event_type and location.\")\n",
        "\n",
        "    vendor_types = get_required_vendor_types(event_type)\n",
        "    all_vendors = []\n",
        "\n",
        "    for vtype in vendor_types:\n",
        "        print(f\"🔎 Searching vendors for: {vtype}\")\n",
        "        vendors = search_vendors(location, vtype)\n",
        "        all_vendors.append({\n",
        "            \"vendor_type\": vtype,\n",
        "            \"options\": vendors\n",
        "        })\n",
        "\n",
        "    return all_vendors\n",
        "\n",
        "# ✅ Run if main\n",
        "if __name__ == \"__main__\":\n",
        "\n",
        "    print(\"\\n🎯 Extracted Intent:\")\n",
        "    print(json.dumps(extracted_intent, indent=2))\n",
        "\n",
        "    print(\"\\n🔧 Finding vendors...\")\n",
        "    vendor_results = vendors_agent(extracted_intent)\n",
        "\n",
        "    print(\"\\n🛍️ Recommended Vendors:\")\n",
        "    for group in vendor_results:\n",
        "        print(f\"\\n🔹 Vendor Type: {group['vendor_type']}\")\n",
        "        for idx, v in enumerate(group[\"options\"], start=1):\n",
        "            print(f\"  {idx}. {v['name']} ({v['rating']})\")\n",
        "            print(f\"     📍 {v['address']}\")\n",
        "            print(f\"     ☎️ {v['phone']}\")\n",
        "            print(f\"     🌐 {v['website']}\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "mndR4lTidhAc",
        "outputId": "dd589e1e-eeb8-49ea-da60-7dd74cb535dc"
      },
      "execution_count": 15,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "🎯 Extracted Intent:\n",
            "{\n",
            "  \"event_type\": \"wedding\",\n",
            "  \"location\": \"Islamabad\",\n",
            "  \"event_date\": \"2025-06-13\",\n",
            "  \"guest_count\": 300,\n",
            "  \"preferences\": {\n",
            "    \"stay_dates\": \"2025-06-13 to 2025-06-15\",\n",
            "    \"guest_origins\": null\n",
            "  },\n",
            "  \"event_theme\": null,\n",
            "  \"meal_count\": null,\n",
            "  \"transport_needs\": null,\n",
            "  \"sightseeing\": null\n",
            "}\n",
            "\n",
            "🔧 Finding vendors...\n",
            "================================================== Iteration 1 \n",
            "✅  [Debug] Sending System Prompt (with history) to LLM:\n",
            "You are an AI assistant that follows the ReAct (Reasoning + Acting) pattern.\n",
            "        \n",
            "Your goal is to help users by breaking down complex tasks into a series of thought-out steps and actions.\n",
            "\n",
            "You have access to these tools: search\n",
            "\n",
            "Tool: Quick Internet Search\n",
            "Description: Searches internet quickly using DuckDuckGo for a given query and returns top 5 results.\n",
            "Action Type: search\n",
            "Input Format: A search query as a string. Example: 'Latest advancements in AI'\n",
            "\n",
            "\n",
            "Your task is to:\n",
            "1. Think about what action is required — Thought.\n",
            "2. Take an appropriate action — Action.\n",
            "3. Repeat Thought/Action as needed until you find the final answer.\n",
            "\n",
            "### Format (Choose only one per response)\n",
            "\n",
            "Option 1 — When action is needed:\n",
            "Thought: Your reasoning about action and observation.\n",
            "Action: {\"action_type\": \"<action_type>\", \"input\": <input_data>}\n",
            "\n",
            "Option 2 — When you're confident in the final response:\n",
            "Thought: Now I know the answer that will be given in Final Answer.\n",
            "Final Answer: Provide a complete, well-structured response that directly addresses the original question.\n",
            "\n",
            "### Important:\n",
            "- Think step-by-step.\n",
            "- Never provide both Action and Final Answer or multiple Action in the same response.\n",
            "- Use available tools wisely.\n",
            "- If stuck, reflect and retry but never hallucinate.\n",
            "- If observation is empty or not related, reflect and retry but never hallucinate.\n",
            "- The current date is June 05, 2025.\n",
            "- If you follow the format strictly, you will be recognized as an excellent and trustworthy AI assistant.\n",
            "\n",
            "\n",
            "Question: You are an expert event planner. What types of vendors are typically needed for a 'wedding'? Return only a valid JSON object with no code block markers, no explanation, no markdown, no labels — just the raw JSON.Return only a Python list like: [\"catering\", \"event lighting\", \"A/V equipment\"]IMPORTANT: Respond immediately with the final JSON object using only `Final Answer:` followed by the valid JSON. Do NOT output thoughts, actions, or any reasoning.\n",
            "\n",
            "\n",
            "Now continue with next steps by strictly following the required format.\n",
            "\n",
            "==================================================\n",
            "🤖 [Debug] Step LLM Response:\n",
            "Final Answer: [\"catering\", \"event lighting\", \"A/V equipment\", \"florist\", \"photographer\", \"videographer\", \"DJ or live band\", \"wedding planner\", \"venue\", \"cake designer\", \"hair and makeup artist\", \"transportation\", \"officiant\", \"stationery\"]\n",
            "✅ Parsed Final Answer: [\"catering\", \"event lighting\", \"A/V equipment\", \"florist\", \"photographer\", \"videographer\", \"DJ or live band\", \"wedding planner\", \"venue\", \"cake designer\", \"hair and makeup artist\", \"transportation\", \"officiant\", \"stationery\"]\n",
            "🔎 Searching vendors for: catering\n",
            "🔎 Searching vendors for: event lighting\n",
            "🔎 Searching vendors for: A/V equipment\n",
            "🔎 Searching vendors for: florist\n",
            "🔎 Searching vendors for: photographer\n",
            "🔎 Searching vendors for: videographer\n",
            "🔎 Searching vendors for: DJ or live band\n",
            "🔎 Searching vendors for: wedding planner\n",
            "🔎 Searching vendors for: venue\n",
            "🔎 Searching vendors for: cake designer\n",
            "🔎 Searching vendors for: hair and makeup artist\n",
            "🔎 Searching vendors for: transportation\n",
            "🔎 Searching vendors for: officiant\n",
            "🔎 Searching vendors for: stationery\n",
            "\n",
            "🛍️ Recommended Vendors:\n",
            "\n",
            "🔹 Vendor Type: catering\n",
            "  1. Naveed Caterers & Event Management (5)\n",
            "     📍 Office#5, First Floor, Victory Tower, F-8 Markaz F 8 Markaz F-8, Islamabad, 44220, Pakistan\n",
            "     ☎️ 0321 5151972\n",
            "     🌐 http://www.naveedcaterers.pk/\n",
            "  2. Tandoori Caterers & Event Management (4.9)\n",
            "     📍 Shop no. 11, 20A, Jasmine Plaza, G8 Markaz Rd, G-8 Markaz G 8 Markaz G-8, Islamabad, 44000, Pakistan\n",
            "     ☎️ 0300 5095090\n",
            "     🌐 https://tandoorirestaurants.pk/tandoori-catering/\n",
            "  3. Capital Caterers & Decorators | Catering Services & Event Planner (4.8)\n",
            "     📍 Pacific Centre Shop 1 & 2, Ground Floor, Pacific Center, Pacific Center, Johar Rd, F-8 Markaz F 8 Markaz F-8, Islamabad, 44000, Pakistan\n",
            "     ☎️ 0300 5279004\n",
            "     🌐 https://capitalcaterer.com/\n",
            "\n",
            "🔹 Vendor Type: event lighting\n",
            "  1. Islamabad Lights & Events (4.9)\n",
            "     📍 Shop No 2, Mughal Plaza, Main Service Rd W, near Mirza Chock, G-11/1 G-12, Islamabad, 44000, Pakistan\n",
            "     ☎️ 0345 2343209\n",
            "     🌐 N/A\n",
            "  2. Islamabad Light Decorators & Sound Systems, Home Lighting (5)\n",
            "     📍 Shop#3B, AL-Farooq Plaza, G-10 Markaz G 10 Markaz G-10, Islamabad, 44000, Pakistan\n",
            "     ☎️ 0312 5008749\n",
            "     🌐 N/A\n",
            "  3. Zee J Events (4.8)\n",
            "     📍 House 758 Street 72, D-12/2 D 12/2 D-12, Islamabad, 46000, Pakistan\n",
            "     ☎️ 0304 9198575\n",
            "     🌐 N/A\n",
            "\n",
            "🔹 Vendor Type: A/V equipment\n",
            "  1. Technology Aid & Equipment (5)\n",
            "     📍 Office No.7, 3rd Floor, Aneeq Arcade, I-8 Markaz I 8 Markaz I-8, Islamabad, 44000, Pakistan\n",
            "     ☎️ 0333 9550902\n",
            "     🌐 http://www.technologyaids.com.pk/\n",
            "  2. MAJESTIC TECHNOLOGY |Audio Visual Solution|Projector/Screen°Audio Video Conference System°Sound Sys°Ceiling Speaker°Biometric (4.7)\n",
            "     📍 Office No, First Floor, Mehmood Plaza, 5 Warsak Rd, I-9 Markaz I 9 Markaz I-9, Islamabad, 44000, Pakistan\n",
            "     ☎️ 0333 4747573\n",
            "     🌐 N/A\n",
            "  3. KBS Enterprises | Smart Interactive LED | Smart Boards (4.9)\n",
            "     📍 House #, 1566 Street 54, Bahria Town Phase III Phase 3 Bahria Town, Islamabad, 46220, Pakistan\n",
            "     ☎️ 0321 2067200\n",
            "     🌐 http://kbse.com.pk/?utm_source=local&utm_medium=organic&utm_campaign=gmb&utm_term=islamabad\n",
            "\n",
            "🔹 Vendor Type: florist\n",
            "  1. Best Ideal Fresh Flowers Shop # 3 (4.9)\n",
            "     📍 Ideal Fresh Flowers, Shop # 3, super flowers market, F-6/1 F 6/1 F-6, Islamabad, 46000, Pakistan\n",
            "     ☎️ 0333 8294720\n",
            "     🌐 https://www.instagram.com/best_ideal_fresh_flower_shop_3?igsh=MTFjeHR0dWowbXhicA==\n",
            "  2. The Flower Palace (4.7)\n",
            "     📍 F/7 markaz Collige road, markaz, F 7/3 F-7, Islamabad, 44210, Pakistan\n",
            "     ☎️ 0345 5441746\n",
            "     🌐 http://theflowerpalace.store/\n",
            "  3. Zain Flowers (5)\n",
            "     📍 Shop No 11 Super Market F6/2 School Road, F, 6, F-6/1 F 6/1 F-6, Islamabad, 44220, Pakistan\n",
            "     ☎️ 0310 7949463\n",
            "     🌐 https://www.instagram.com/blossomstudio.pk?igsh=MXd6ODBuMmc0NWNpNQ==\n",
            "\n",
            "🔹 Vendor Type: photographer\n",
            "  1. RIZWAN ARIF PHOTOGRAPHY (4.9)\n",
            "     📍 St:55 block :29 shop:12, G-9/4 G 9/4 G-9, Islamabad, Pakistan\n",
            "     ☎️ 0333 4509667\n",
            "     🌐 https://www.instagram.com/rizwanarifphotography/\n",
            "  2. Hamza's production - Photography/Videography & Events (4.8)\n",
            "     📍 Block 12 ofice # Y12 Phase 7, Sector F DHA Phase 1, Islamabad, 46000, Pakistan\n",
            "     ☎️ 0333 1585135\n",
            "     🌐 https://hamzasproduction.com/\n",
            "  3. Qamar Anwar Photography (4.9)\n",
            "     📍 Office # 5, Select Center, F-11 Markaz F 11 Markaz F-11, Islamabad, 44000, Pakistan\n",
            "     ☎️ 0333 5449598\n",
            "     🌐 http://www.qamaranwar.com/\n",
            "\n",
            "🔹 Vendor Type: videographer\n",
            "  1. Hamza's production - Photography/Videography & Events (4.8)\n",
            "     📍 Block 12 ofice # Y12 Phase 7, Sector F DHA Phase 1, Islamabad, 46000, Pakistan\n",
            "     ☎️ 0333 1585135\n",
            "     🌐 https://hamzasproduction.com/\n",
            "  2. Zillay Studios -Videography and Photography Services in Rawalpindi And Islamabad (5)\n",
            "     📍 ground floor office no, Liberty Market, 24, opposite to Gordon college, Naya Mohalla, Rawalpindi, 46000, Pakistan\n",
            "     ☎️ 0324 5264029\n",
            "     🌐 N/A\n",
            "  3. Hamzas production - Photography/Videography & Events (5)\n",
            "     📍 feroz center, 5th floor, G-6/2 G 6/3 G-6, Islamabad, 46000, Pakistan\n",
            "     ☎️ 0300 1514151\n",
            "     🌐 https://hamzasproduction.com/\n",
            "\n",
            "🔹 Vendor Type: DJ or live band\n",
            "  1. Music band (5)\n",
            "     📍 i&t center, G-10/4 G 10/4 G-10, Islamabad, 44000, Pakistan\n",
            "     ☎️ 0344 0741099\n",
            "     🌐 N/A\n",
            "  2. Octave Guitar Shop & Music Lessons (4.9)\n",
            "     📍 Shop No. 8, Basement of Pehchan Mall, Mall 9, G-9 Markaz G 9 Markaz G-9, Islamabad, Pakistan\n",
            "     ☎️ 0333 5342184\n",
            "     🌐 N/A\n",
            "  3. Zebi Sound & Lights (4.8)\n",
            "     📍 Street 1، Main Peshawar Rd, Qasimabad, Rawalpindi, 46000, Pakistan\n",
            "     ☎️ 0313 2628270\n",
            "     🌐 N/A\n",
            "\n",
            "🔹 Vendor Type: wedding planner\n",
            "  1. Hello Events (4.9)\n",
            "     📍 E11/4 Street 22, NPF E 11/4 E-11, Islamabad, 46000, Pakistan\n",
            "     ☎️ 0333 5312378\n",
            "     🌐 https://helloevents.pk/?utm_source=gmb&utm_medium=referral\n",
            "  2. Zee J Events (4.8)\n",
            "     📍 House 758 Street 72, D-12/2 D 12/2 D-12, Islamabad, 46000, Pakistan\n",
            "     ☎️ 0304 9198575\n",
            "     🌐 N/A\n",
            "  3. Islamabad Creative Event Planner (4.9)\n",
            "     📍 street 16, Markaz, F-6 Markaz F 6 Markaz F-6, Islamabad, 44220, Pakistan\n",
            "     ☎️ 0311 8835640\n",
            "     🌐 N/A\n",
            "\n",
            "🔹 Vendor Type: venue\n",
            "  1. Fortress Events Complex Islamabad (4.4)\n",
            "     📍 Islamabad Expy, Madina Town, Islamabad, 44000, Pakistan\n",
            "     ☎️ 0300 0452255\n",
            "     🌐 https://www.facebook.com/fortresseventscomplexislamabad/\n",
            "  2. The Royal Palm Marquee (4.6)\n",
            "     📍 Plot no 4, near Burki PSO station Kuri Road, Islamabad Expy, Nawaz, Islamabad, 44000, Pakistan\n",
            "     ☎️ 0331 5886876\n",
            "     🌐 N/A\n",
            "  3. Empire Marquee Islamabad (4.4)\n",
            "     📍 Islamabad Expy, behind PSO Pump، Nawaz, Islamabad, 44000, Pakistan\n",
            "     ☎️ 0300 9714546\n",
            "     🌐 https://empiremarquee.pk/\n",
            "\n",
            "🔹 Vendor Type: cake designer\n",
            "  1. Polka Dots Cakes and Desserts (4.9)\n",
            "     📍 House No, 38 Street 24, F-8/2 F 8/2 F-8, Islamabad, 44000, Pakistan\n",
            "     ☎️ 0311 5853083\n",
            "     🌐 http://polkadotspk.com/\n",
            "  2. Bake Away The Cake Shop (4.8)\n",
            "     📍 Plaza 9, Tipu Boulevard, G, Sector, Sector G DHA Phase II, Islamabad, Pakistan\n",
            "     ☎️ 0331 5132844\n",
            "     🌐 https://www.bakeaway.pk/\n",
            "  3. Funky Bake (4.6)\n",
            "     📍 Hilal Rd, F-11 Markaz F 11 Markaz F-11, Islamabad, Pakistan\n",
            "     ☎️ (051) 4718500\n",
            "     🌐 N/A\n",
            "\n",
            "🔹 Vendor Type: hair and makeup artist\n",
            "  1. M.Ramzan International MAKEUP Institute ISLAMABAD PAKISTAN (4.9)\n",
            "     📍 M.RAMZAN INTERNATIONAL MAKEUP institute Styling Stylist Pakistan, near Photohar Station Metro, I-9/4 I 9/4 I-9, Islamabad, 04483, Pakistan\n",
            "     ☎️ 0301 5091232\n",
            "     🌐 N/A\n",
            "  2. Emkaez Makeup Studio & Salon | Best Salon In Islamabad (4.8)\n",
            "     📍 1 Pakeeza Market Street، near I-8 Markaz, I-8/4 I 8/4 I-8, Islamabad, 44000, Pakistan\n",
            "     ☎️ 0310 6666992\n",
            "     🌐 https://www.instagram.com/emkaez_salon/\n",
            "  3. Queen's Hair & Nail Makeup Best Beauty Parlour Salon Studio (4.9)\n",
            "     📍 Basement shop No 8, Bismillah Plaza, Markaz I 10 Markaz I-10, Islamabad, 44800, Pakistan\n",
            "     ☎️ 0330 5328370\n",
            "     🌐 https://sites.google.com/view/queens-salon-studio/home\n",
            "\n",
            "🔹 Vendor Type: transportation\n",
            "  1. Islamabad Haseeb Goods Transport and logistics services (4.9)\n",
            "     📍 Shop 350, I-11/4 I 11/4 New sabzi mandi, Islamabad, 46000, Pakistan\n",
            "     ☎️ 0341 5101051\n",
            "     🌐 N/A\n",
            "  2. MS Tours And Transport (4.8)\n",
            "     📍 Office #16, Ground Floor, Ali Plaza, Markaz, G-10 Markaz G 10 Markaz G-10, Islamabad, 92000, Pakistan\n",
            "     ☎️ 0344 0997199\n",
            "     🌐 http://www.mstoursandtransport.com/\n",
            "  3. Musafir Transport (4.9)\n",
            "     📍 Office no 11, 3rd Floor, Mujahid Plaza, Jinnah Ave, Block H G 7/2 Blue Area, Islamabad, 44000, Pakistan\n",
            "     ☎️ 0315 7499933\n",
            "     🌐 N/A\n",
            "\n",
            "🔹 Vendor Type: officiant\n",
            "  1. Muhammad Arif -Nikah Khawan Registrar In Rawalpindi (4.9)\n",
            "     📍 22 No. Chungi Rd, Harley Street, Rawalpindi, 46000, Pakistan\n",
            "     ☎️ 0332 5025763\n",
            "     🌐 N/A\n",
            "  2. Empire Marquee Islamabad (4.4)\n",
            "     📍 Islamabad Expy, behind PSO Pump، Nawaz, Islamabad, 44000, Pakistan\n",
            "     ☎️ 0300 9714546\n",
            "     🌐 https://empiremarquee.pk/\n",
            "  3. Nikah Rigestrar and Nikah Khuwan (4.8)\n",
            "     📍 Madrassa Jamia Masjid Chungi No 22 Chaklala Cantt, Harley Street, Rawalpindi, 46000, Pakistan\n",
            "     ☎️ 0300 9854508\n",
            "     🌐 N/A\n",
            "\n",
            "🔹 Vendor Type: stationery\n",
            "  1. Paperman Stationery Store (4.6)\n",
            "     📍 Capital Trade Center, Markaz, F-10 Markaz F 10/3 F-10, Islamabad, 44000, Pakistan\n",
            "     ☎️ (051) 2290384\n",
            "     🌐 http://paperman.com.pk/\n",
            "  2. Hamza Stationers (4.6)\n",
            "     📍 Hamza Stationers, G-8-2, Tipu Market, Islamabad 44000, Pakistan، G-8/2 G 8/2 G-8, Islamabad, 46000, Pakistan\n",
            "     ☎️ 0334 5607172\n",
            "     🌐 http://hamza-stationers.business.site/\n",
            "  3. Imperial Stationery Mart (4.9)\n",
            "     📍 Shop No 22-A, Hajveri Plaza, China Chowk Underpass, Block B G 6/3 Blue Area, Islamabad, 44000, Pakistan\n",
            "     ☎️ (051) 2120627\n",
            "     🌐 N/A\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Transport and Parking Agent"
      ],
      "metadata": {
        "id": "syxU25ziemoK"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import os\n",
        "import json\n",
        "import ast\n",
        "import re\n",
        "import requests\n",
        "from agentpro import ReactAgent, create_model\n",
        "\n",
        "# ✅ Use OpenAI API key\n",
        "OPENAI_API_KEY = os.getenv(\"OPENAI_API_KEY\")\n",
        "assert OPENAI_API_KEY, \"❌ Missing OPENAI_API_KEY in environment\"\n",
        "\n",
        "# ✅ Create model + ReAct agent with OpenAI GPT-4o\n",
        "model = create_model(provider=\"openai\", model_name=\"gpt-4o\", api_key=OPENAI_API_KEY)\n",
        "agent = ReactAgent(model=model)\n",
        "\n",
        "def extract_json_from_response(response):\n",
        "    cleaned = response.strip()\n",
        "    cleaned = re.sub(r\"```(?:json|python)?\", \"\", cleaned)\n",
        "    cleaned = re.sub(r\"[^\\x00-\\x7F]+\", \"\", cleaned).strip()\n",
        "    cleaned = cleaned.replace(\"“\", '\"').replace(\"”\", '\"').replace(\"‘\", \"'\").replace(\"’\", \"'\")\n",
        "\n",
        "    try:\n",
        "        return json.loads(cleaned)\n",
        "    except json.JSONDecodeError:\n",
        "        match = re.search(r\"(\\{.*\\}|\\[.*\\])\", cleaned, re.DOTALL)\n",
        "        if match:\n",
        "            try:\n",
        "                return json.loads(match.group(0))\n",
        "            except json.JSONDecodeError:\n",
        "                pass\n",
        "    raise ValueError(f\"❌ Could not extract valid JSON from LLM response:\\n{cleaned}\")\n",
        "\n",
        "def analyze_transport_needs(user_intent, venues, schedule):\n",
        "    prompt = (\n",
        "        \"You are a logistics planner. Based on this event, return:\\n\"\n",
        "        \"- A list of transport vendor types required\\n\"\n",
        "        \"- A dictionary of estimated vehicle needs by type\\n\\n\"\n",
        "        \"Return only a valid JSON object with no code block markers, no explanation, no markdown, no labels — just the raw JSON.\"\n",
        "        \"Return this as a Python dictionary with two keys: 'vendor_types' and 'vehicle_estimates'.\\n\"\n",
        "        \"Example:\\n\"\n",
        "        \"{\\n\"\n",
        "        \"  \\\"vendor_types\\\": [\\\"shuttle service\\\", \\\"bus rental\\\"],\\n\"\n",
        "        \"  \\\"vehicle_estimates\\\": {\\\"cars\\\": 3, \\\"shuttles\\\": 2, \\\"buses\\\": 1}\\n\"\n",
        "        \"}\\n\\n\"\n",
        "        f\"user_intent = {json.dumps(user_intent, indent=2)}\\n\"\n",
        "        f\"venues = {json.dumps(venues[:2], indent=2)}\\n\"\n",
        "        f\"schedule = {json.dumps(schedule[:2], indent=2)}\"\n",
        "        \"IMPORTANT: Respond immediately with the final JSON object using only `Final Answer:` followed by the valid JSON. Do NOT output thoughts, actions, or any reasoning.\"\n",
        "    )\n",
        "\n",
        "    response = agent.run(prompt)\n",
        "    cleaned = extract_json_from_response(response.final_answer)\n",
        "\n",
        "    try:\n",
        "        if isinstance(cleaned, dict):\n",
        "            data = cleaned\n",
        "        elif isinstance(cleaned, str):\n",
        "            try:\n",
        "                data = ast.literal_eval(cleaned)\n",
        "            except Exception:\n",
        "                data = json.loads(cleaned.replace(\"'\", '\"'))\n",
        "        else:\n",
        "            raise Exception(\"LLM returned unparseable content\")\n",
        "\n",
        "        if isinstance(data, dict) and \"vendor_types\" in data and \"vehicle_estimates\" in data:\n",
        "            return data\n",
        "        else:\n",
        "            raise ValueError(\"Unexpected LLM output structure:\\n\" + json.dumps(data, indent=2))\n",
        "\n",
        "    except Exception as e:\n",
        "        raise Exception(f\"LLM response could not be parsed:\\n{cleaned}\\n\\nError: {e}\")\n",
        "\n",
        "def search_vendors(location, vendor_type, limit=3):\n",
        "    url = \"https://maps.googleapis.com/maps/api/place/textsearch/json\"\n",
        "    params = {\n",
        "        \"query\": f\"{vendor_type} near {location}\",\n",
        "        \"key\": os.getenv(\"GOOGLE_API_KEY\")\n",
        "    }\n",
        "    res = requests.get(url, params=params).json()\n",
        "    results = res.get(\"results\", [])[:limit]\n",
        "\n",
        "    vendors = []\n",
        "    for r in results:\n",
        "        vendors.append({\n",
        "            \"name\": r.get(\"name\"),\n",
        "            \"type\": vendor_type,\n",
        "            \"address\": r.get(\"formatted_address\"),\n",
        "            \"rating\": r.get(\"rating\", \"N/A\")\n",
        "        })\n",
        "    return vendors\n",
        "\n",
        "def get_nearest_transport_hubs(location):\n",
        "    airport = search_vendors(location, \"international airport\", limit=1)\n",
        "    railway = search_vendors(location, \"intercity railway station\", limit=1)\n",
        "    bus = search_vendors(location, \"intercity bus terminal\", limit=1)\n",
        "\n",
        "    return {\n",
        "        \"nearest_airport\": airport[0] if airport else {\"name\": \"N/A\", \"address\": \"N/A\"},\n",
        "        \"nearest_railway_station\": railway[0] if railway else {\"name\": \"N/A\", \"address\": \"N/A\"},\n",
        "        \"nearest_bus_station\": bus[0] if bus else {\"name\": \"N/A\", \"address\": \"N/A\"},\n",
        "    }\n",
        "\n",
        "def find_parking_near_venues(venues):\n",
        "    parking_results = {}\n",
        "    for v in venues:\n",
        "        venue_name = v.get(\"name\")\n",
        "        venue_address = v.get(\"address\") or v.get(\"formatted_address\")\n",
        "        if not venue_name or not venue_address:\n",
        "            continue\n",
        "\n",
        "        url = \"https://maps.googleapis.com/maps/api/place/textsearch/json\"\n",
        "        params = {\n",
        "            \"query\": f\"parking near {venue_address}\",\n",
        "            \"key\": os.getenv(\"GOOGLE_API_KEY\")\n",
        "        }\n",
        "        res = requests.get(url, params=params).json()\n",
        "        results = res.get(\"results\", [])[:3]\n",
        "\n",
        "        parking_spots = [{\n",
        "            \"name\": r.get(\"name\"),\n",
        "            \"address\": r.get(\"formatted_address\"),\n",
        "            \"rating\": r.get(\"rating\", \"N/A\")\n",
        "        } for r in results]\n",
        "\n",
        "        parking_results[venue_name] = parking_spots\n",
        "    return parking_results\n",
        "\n",
        "def transport_parking_agent(user_intent, venue_data, schedule_data):\n",
        "    location = user_intent.get(\"location\")\n",
        "    event_type = user_intent.get(\"event_type\")\n",
        "    if not location or not event_type:\n",
        "        raise ValueError(\"Missing location or event_type.\")\n",
        "\n",
        "    all_venues = []\n",
        "    for group in venue_data:\n",
        "        all_venues.extend(group.get(\"options\", []))\n",
        "\n",
        "    transport_plan = analyze_transport_needs(user_intent, all_venues, schedule_data)\n",
        "    vendor_types = transport_plan.get(\"vendor_types\", [])\n",
        "    vehicle_estimates = transport_plan.get(\"vehicle_estimates\", {})\n",
        "\n",
        "    vendor_recs = []\n",
        "    for vtype in vendor_types:\n",
        "        vendor_recs.append({\n",
        "            \"vendor_type\": vtype,\n",
        "            \"options\": search_vendors(location, vtype)\n",
        "        })\n",
        "\n",
        "    return {\n",
        "        \"transport_plan\": {\n",
        "            \"vendor_types\": vendor_types,\n",
        "            \"vehicle_estimates\": vehicle_estimates\n",
        "        },\n",
        "        \"vendor_recommendations\": vendor_recs,\n",
        "        \"parking_near_venues\": find_parking_near_venues(all_venues),\n",
        "        \"transport_hubs\": get_nearest_transport_hubs(location)\n",
        "    }\n",
        "\n",
        "if __name__ == \"__main__\":\n",
        "    user_intent = extracted_intent\n",
        "    venue_data = venue_agent(user_intent)\n",
        "    schedule_data = scheduler_agent(user_intent)\n",
        "    transport_output = transport_parking_agent(user_intent, venue_data, schedule_data)\n",
        "\n",
        "    print(\"\\n🚗 Vehicle Estimates:\")\n",
        "    for k, v in transport_output[\"transport_plan\"][\"vehicle_estimates\"].items():\n",
        "        print(f\"- {k.title()}: {v}\")\n",
        "\n",
        "    print(\"\\n🛻 Transport Vendors:\")\n",
        "    for group in transport_output[\"vendor_recommendations\"]:\n",
        "        print(f\"\\n🔹 {group['vendor_type'].title()}\")\n",
        "        for v in group[\"options\"]:\n",
        "            print(f\"  - {v['name']} ({v['rating']}) - {v['address']}\")\n",
        "\n",
        "    print(\"\\n🅿️ Parking Near Venues:\")\n",
        "    for venue, lots in transport_output[\"parking_near_venues\"].items():\n",
        "        print(f\"\\n{venue}\")\n",
        "        for lot in lots:\n",
        "            print(f\"  - {lot['name']} ({lot['rating']}) - {lot['address']}\")\n",
        "\n",
        "    print(\"\\n🚉 Nearest Transport Hubs:\")\n",
        "    hubs = transport_output.get(\"transport_hubs\", {})\n",
        "    print(f\"🛫 Airport: {hubs.get('nearest_airport', {}).get('name', 'N/A')} - {hubs.get('nearest_airport', {}).get('address', 'N/A')}\")\n",
        "    print(f\"🚆 Railway: {hubs.get('nearest_railway_station', {}).get('name', 'N/A')} - {hubs.get('nearest_railway_station', {}).get('address', 'N/A')}\")\n",
        "    print(f\"🚌 Bus Station: {hubs.get('nearest_bus_station', {}).get('name', 'N/A')} - {hubs.get('nearest_bus_station', {}).get('address', 'N/A')}\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "RKn7ro37eoWv",
        "outputId": "a2946026-635c-4ada-c29f-b32ca08577bd"
      },
      "execution_count": 16,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "🧠 Determining suitable venue types for: wedding\n",
            "================================================== Iteration 1 \n",
            "✅  [Debug] Sending System Prompt (with history) to LLM:\n",
            "You are an AI assistant that follows the ReAct (Reasoning + Acting) pattern.\n",
            "        \n",
            "Your goal is to help users by breaking down complex tasks into a series of thought-out steps and actions.\n",
            "\n",
            "You have access to these tools: \n",
            "\n",
            "\n",
            "\n",
            "Your task is to:\n",
            "1. Think about what action is required — Thought.\n",
            "2. Take an appropriate action — Action.\n",
            "3. Repeat Thought/Action as needed until you find the final answer.\n",
            "\n",
            "### Format (Choose only one per response)\n",
            "\n",
            "Option 1 — When action is needed:\n",
            "Thought: Your reasoning about action and observation.\n",
            "Action: {\"action_type\": \"<action_type>\", \"input\": <input_data>}\n",
            "\n",
            "Option 2 — When you're confident in the final response:\n",
            "Thought: Now I know the answer that will be given in Final Answer.\n",
            "Final Answer: Provide a complete, well-structured response that directly addresses the original question.\n",
            "\n",
            "### Important:\n",
            "- Think step-by-step.\n",
            "- Never provide both Action and Final Answer or multiple Action in the same response.\n",
            "- Use available tools wisely.\n",
            "- If stuck, reflect and retry but never hallucinate.\n",
            "- If observation is empty or not related, reflect and retry but never hallucinate.\n",
            "- The current date is June 05, 2025.\n",
            "- If you follow the format strictly, you will be recognized as an excellent and trustworthy AI assistant.\n",
            "\n",
            "\n",
            "Question: You are an expert event planner.\n",
            "Suggest the 3 most suitable types of venues for a 'wedding' event.\n",
            "Return only a valid JSON object with no code block markers, no explanation, no markdown, no labels — just the raw JSON.Return only a valid JSON list like: [\"banquet hall\", \"outdoor garden\", \"conference center\"]IMPORTANT: Respond immediately with the final JSON object using only `Final Answer:` followed by the valid JSON. Do NOT output thoughts, actions, or any reasoning.\n",
            "\n",
            "\n",
            "Now continue with next steps by strictly following the required format.\n",
            "\n",
            "==================================================\n",
            "🤖 [Debug] Step LLM Response:\n",
            "Final Answer: [\"banquet hall\", \"outdoor garden\", \"vineyard\"]\n",
            "✅ Parsed Final Answer: [\"banquet hall\", \"outdoor garden\", \"vineyard\"]\n",
            "🔎 Searching: banquet hall in Islamabad\n",
            "🔎 Searching: outdoor garden in Islamabad\n",
            "🔎 Searching: vineyard in Islamabad\n",
            "🧠 Prompting GPT-4o for schedule...\n",
            "================================================== Iteration 1 \n",
            "✅  [Debug] Sending System Prompt (with history) to LLM:\n",
            "You are an AI assistant that follows the ReAct (Reasoning + Acting) pattern.\n",
            "        \n",
            "Your goal is to help users by breaking down complex tasks into a series of thought-out steps and actions.\n",
            "\n",
            "You have access to these tools: \n",
            "\n",
            "\n",
            "\n",
            "Your task is to:\n",
            "1. Think about what action is required — Thought.\n",
            "2. Take an appropriate action — Action.\n",
            "3. Repeat Thought/Action as needed until you find the final answer.\n",
            "\n",
            "### Format (Choose only one per response)\n",
            "\n",
            "Option 1 — When action is needed:\n",
            "Thought: Your reasoning about action and observation.\n",
            "Action: {\"action_type\": \"<action_type>\", \"input\": <input_data>}\n",
            "\n",
            "Option 2 — When you're confident in the final response:\n",
            "Thought: Now I know the answer that will be given in Final Answer.\n",
            "Final Answer: Provide a complete, well-structured response that directly addresses the original question.\n",
            "\n",
            "### Important:\n",
            "- Think step-by-step.\n",
            "- Never provide both Action and Final Answer or multiple Action in the same response.\n",
            "- Use available tools wisely.\n",
            "- If stuck, reflect and retry but never hallucinate.\n",
            "- If observation is empty or not related, reflect and retry but never hallucinate.\n",
            "- The current date is June 05, 2025.\n",
            "- If you follow the format strictly, you will be recognized as an excellent and trustworthy AI assistant.\n",
            "\n",
            "\n",
            "Question: You are an expert event planner. Create a high-level multi-day schedule for a wedding beginning on 2025-06-13 with around 300 guests. Include major activities from arrival to departure:\n",
            "airport pickups, hotel check-in, meals, sessions, sightseeing in free slots, and checkout.\n",
            "Return the result as a Python list of dictionaries in this format:\n",
            "\n",
            "Return only a valid JSON object with no code block markers, no explanation, no markdown, no labels — just the raw JSON.[{\"day\": \"Day 1 - Arrival\", \"activities\": [\"Hotel check-in\", \"Welcome dinner\"]}, ...]IMPORTANT: Respond immediately with the final JSON object using only `Final Answer:` followed by the valid JSON. Do NOT output thoughts, actions, or any reasoning.\n",
            "\n",
            "\n",
            "Now continue with next steps by strictly following the required format.\n",
            "\n",
            "==================================================\n",
            "🤖 [Debug] Step LLM Response:\n",
            "Final Answer: [{\"day\": \"Day 1 - Arrival\", \"activities\": [\"Airport pickups\", \"Hotel check-in\", \"Welcome dinner\"]}, {\"day\": \"Day 2 - Pre-Wedding\", \"activities\": [\"Breakfast\", \"Sightseeing tour\", \"Lunch\", \"Rehearsal dinner\"]}, {\"day\": \"Day 3 - Wedding Day\", \"activities\": [\"Breakfast\", \"Wedding ceremony\", \"Reception\"]}, {\"day\": \"Day 4 - Post-Wedding\", \"activities\": [\"Brunch\", \"Free time for sightseeing\", \"Farewell dinner\"]}, {\"day\": \"Day 5 - Departure\", \"activities\": [\"Breakfast\", \"Hotel checkout\", \"Airport drop-offs\"]}]\n",
            "✅ Parsed Final Answer: [{\"day\": \"Day 1 - Arrival\", \"activities\": [\"Airport pickups\", \"Hotel check-in\", \"Welcome dinner\"]}, {\"day\": \"Day 2 - Pre-Wedding\", \"activities\": [\"Breakfast\", \"Sightseeing tour\", \"Lunch\", \"Rehearsal dinner\"]}, {\"day\": \"Day 3 - Wedding Day\", \"activities\": [\"Breakfast\", \"Wedding ceremony\", \"Reception\"]}, {\"day\": \"Day 4 - Post-Wedding\", \"activities\": [\"Brunch\", \"Free time for sightseeing\", \"Farewell dinner\"]}, {\"day\": \"Day 5 - Departure\", \"activities\": [\"Breakfast\", \"Hotel checkout\", \"Airport drop-offs\"]}]\n",
            "================================================== Iteration 1 \n",
            "✅  [Debug] Sending System Prompt (with history) to LLM:\n",
            "You are an AI assistant that follows the ReAct (Reasoning + Acting) pattern.\n",
            "        \n",
            "Your goal is to help users by breaking down complex tasks into a series of thought-out steps and actions.\n",
            "\n",
            "You have access to these tools: \n",
            "\n",
            "\n",
            "\n",
            "Your task is to:\n",
            "1. Think about what action is required — Thought.\n",
            "2. Take an appropriate action — Action.\n",
            "3. Repeat Thought/Action as needed until you find the final answer.\n",
            "\n",
            "### Format (Choose only one per response)\n",
            "\n",
            "Option 1 — When action is needed:\n",
            "Thought: Your reasoning about action and observation.\n",
            "Action: {\"action_type\": \"<action_type>\", \"input\": <input_data>}\n",
            "\n",
            "Option 2 — When you're confident in the final response:\n",
            "Thought: Now I know the answer that will be given in Final Answer.\n",
            "Final Answer: Provide a complete, well-structured response that directly addresses the original question.\n",
            "\n",
            "### Important:\n",
            "- Think step-by-step.\n",
            "- Never provide both Action and Final Answer or multiple Action in the same response.\n",
            "- Use available tools wisely.\n",
            "- If stuck, reflect and retry but never hallucinate.\n",
            "- If observation is empty or not related, reflect and retry but never hallucinate.\n",
            "- The current date is June 05, 2025.\n",
            "- If you follow the format strictly, you will be recognized as an excellent and trustworthy AI assistant.\n",
            "\n",
            "\n",
            "Question: You are a logistics planner. Based on this event, return:\n",
            "- A list of transport vendor types required\n",
            "- A dictionary of estimated vehicle needs by type\n",
            "\n",
            "Return only a valid JSON object with no code block markers, no explanation, no markdown, no labels — just the raw JSON.Return this as a Python dictionary with two keys: 'vendor_types' and 'vehicle_estimates'.\n",
            "Example:\n",
            "{\n",
            "  \"vendor_types\": [\"shuttle service\", \"bus rental\"],\n",
            "  \"vehicle_estimates\": {\"cars\": 3, \"shuttles\": 2, \"buses\": 1}\n",
            "}\n",
            "\n",
            "user_intent = {\n",
            "  \"event_type\": \"wedding\",\n",
            "  \"location\": \"Islamabad\",\n",
            "  \"event_date\": \"2025-06-13\",\n",
            "  \"guest_count\": 300,\n",
            "  \"preferences\": {\n",
            "    \"stay_dates\": \"2025-06-13 to 2025-06-15\",\n",
            "    \"guest_origins\": null\n",
            "  },\n",
            "  \"event_theme\": null,\n",
            "  \"meal_count\": null,\n",
            "  \"transport_needs\": null,\n",
            "  \"sightseeing\": null\n",
            "}\n",
            "venues = [\n",
            "  {\n",
            "    \"name\": \"Tulip Banquet Hall\",\n",
            "    \"rating\": 4.1,\n",
            "    \"address\": \"M4P4+FC9 Murree Road, Garden Ave, Shakar Parian, Islamabad, Pakistan\",\n",
            "    \"phone\": \"0300 0524555\",\n",
            "    \"website\": \"N/A\"\n",
            "  },\n",
            "  {\n",
            "    \"name\": \"Monal Marquee\",\n",
            "    \"rating\": 4.4,\n",
            "    \"address\": \"Main Service Road, Parallel\\u060c Main Margalla Rd, Golra NPF E 11/4 E-11, Islamabad, Pakistan\",\n",
            "    \"phone\": \"(051) 2223886\",\n",
            "    \"website\": \"N/A\"\n",
            "  }\n",
            "]\n",
            "schedule = [\n",
            "  {\n",
            "    \"day\": \"Day 1 - Arrival\",\n",
            "    \"activities\": [\n",
            "      \"Airport pickups\",\n",
            "      \"Hotel check-in\",\n",
            "      \"Welcome dinner\"\n",
            "    ]\n",
            "  },\n",
            "  {\n",
            "    \"day\": \"Day 2 - Pre-Wedding\",\n",
            "    \"activities\": [\n",
            "      \"Breakfast\",\n",
            "      \"Sightseeing tour\",\n",
            "      \"Lunch\",\n",
            "      \"Rehearsal dinner\"\n",
            "    ]\n",
            "  }\n",
            "]IMPORTANT: Respond immediately with the final JSON object using only `Final Answer:` followed by the valid JSON. Do NOT output thoughts, actions, or any reasoning.\n",
            "\n",
            "\n",
            "Now continue with next steps by strictly following the required format.\n",
            "\n",
            "==================================================\n",
            "🤖 [Debug] Step LLM Response:\n",
            "Final Answer: {\n",
            "  \"vendor_types\": [\"shuttle service\", \"car rental\", \"bus rental\"],\n",
            "  \"vehicle_estimates\": {\"cars\": 5, \"shuttles\": 3, \"buses\": 2}\n",
            "}\n",
            "✅ Parsed Final Answer: {\n",
            "  \"vendor_types\": [\"shuttle service\", \"car rental\", \"bus rental\"],\n",
            "  \"vehicle_estimates\": {\"cars\": 5, \"shuttles\": 3, \"buses\": 2}\n",
            "}\n",
            "\n",
            "🚗 Vehicle Estimates:\n",
            "- Cars: 5\n",
            "- Shuttles: 3\n",
            "- Buses: 2\n",
            "\n",
            "🛻 Transport Vendors:\n",
            "\n",
            "🔹 Shuttle Service\n",
            "  - Visa Seeker Shuttle Service (3.4) - P4HP+78M, 3rd Ave, Maira, Islamabad, Pakistan\n",
            "\n",
            "🔹 Car Rental\n",
            "  - New Pakistan Motors (4.9) - I & T Center, Plot # 135 Street 29, G-9/1 G 9/1 G-9, Islamabad, 44000, Pakistan\n",
            "  - Car Hire Pakistan - Rent a car in Islamabad - Best rental cars in Islamabad - Cars for rent (5) - Ist Floor, Bismillah, Bismillah Plaza, OFFICE: Flat #4, Block D-10, G8 Markaz Rd, G-8 Markaz plaza, Islamabad, 44080, Pakistan\n",
            "  - Prado For Rent in Islamabad | Rent A Car Services 247 | Prado V8 Mercedes Audi Civic BRV Corolla | Rent A Car Islamabad (4.9) - first floor, New Aabpara Arcade, Office # F-8, 1 Street Number 49, G-6, Islamabad, 44000, Pakistan\n",
            "\n",
            "🔹 Bus Rental\n",
            "  - Rent a car SHAH RIDE TOUR Islamabad Rawalpindi Daewoo stand (5) - jahngisyedaan, Service road, Gali No. 2, Jhangi Sayedan, Islamabad, 46000, Pakistan\n",
            "  - Syed Rent A Car Islamabad || Syed Transport Dewoo Terminal Ict || Pakistan (4.8) - Office #1, Awan Market, Main Peshawar Rd, near Deawoo Bus Terminal, floor Jhangi Sayedan, Islamabad, 44000, Pakistan\n",
            "  - Musafir Transport (4.9) - Office no 11, 3rd Floor, Mujahid Plaza, Jinnah Ave, G 7/2 Blue Area, Islamabad, 44000, Pakistan\n",
            "\n",
            "🅿️ Parking Near Venues:\n",
            "\n",
            "Tulip Banquet Hall\n",
            "  - Shakarparian Car Parking (4.4) - M3VC+F7F, Islamabad, Pakistan\n",
            "  - Islamabad Club Parking (5) - P434+RR6, Main Murree Rd،, near Kashmir Chowk, Islamabad Club, Islamabad, Pakistan\n",
            "  - Jasmine Garden Parking (4.2) - M3XP+HV8 Jasmin Garden, Islamabad, Pakistan\n",
            "\n",
            "Monal Marquee\n",
            "  - Parking Area Golra Darbar (4.3) - MXRG+Q8G, Golra E-11, Islamabad, Pakistan\n",
            "  - Golra Darbar (4.5) - MXRG+Q2G, Golra E-11, Islamabad, Pakistan\n",
            "  - Monal Marquee (4.4) - Main Service Road, Parallel, Main Margalla Rd, Islamabad, Pakistan\n",
            "\n",
            "Majestic Marque Islamabad\n",
            "  - 2a Club Rd (N/A) - 2a Club Rd, near Rwal Dam chowk, Shakar Parian, Islamabad, 44000, Pakistan\n",
            "\n",
            "Anabia's Garden\n",
            "  - Anabia's Garden (4.1) - Khayban e jalal, E-11 , north service road, 47000, Pakistan\n",
            "\n",
            "Rose And Jasmine Garden\n",
            "  - Shakarparian Car Parking (4.4) - M3VC+F7F, Islamabad, Pakistan\n",
            "\n",
            "Jasmine Garden\n",
            "  - Convention Centre Parking (4.5) - P463+MWF, Unnamed Road, Islamabad, Pakistan\n",
            "  - Trail 5 Parking Area (4.7) - P3VP+RVF, Main Margalla Rd, F-5/2 F-5, Islamabad, Pakistan\n",
            "  - Free parking (4.5) - P3CG+QXV, F 6/1 Blue Area, Islamabad, Pakistan\n",
            "\n",
            "Santech vineyards\n",
            "  - Parking Lot (3.9) - QPCC+77C, Kalar Kahar Chao Syedan Shah Road Opp. Weigh, Kalar Kahar, 48530, Pakistan\n",
            "  - Swaik Lake Parking (4) - Kamran Shabbir House, kallar kahar khandowa, Khandoyah, 48530, Pakistan\n",
            "  - Car Parking, Project Directorate (N/A) - HR6V+CQ7, Islamabad Gandhara International Airport, Islamabad, Pakistan\n",
            "\n",
            "Whispering Pines Hotel & Residences\n",
            "  - Highland Country Club & Resorts (4.4) - Pir Sohawa Road، near Islamabad, Sangada, Pakistan\n",
            "  - Whispering Pines Hotel & Residences - Executive Block (4.5) - Whispering Pines, Pir Sohawa Road, Phase.2 Makhniyal, Pakistan\n",
            "\n",
            "Shah Allah Ditta Caves\n",
            "  - Shah Allah Ditta Caves (4.4) - PWC8+R3C, Road, Shah Allah Ditta Islamabad, 44000, Pakistan\n",
            "  - Buddha Caves (400BC) (4.4) - PWC8+Q25, Margalla Hills Rd, Shah Allah Ditta, Islamabad, Pakistan\n",
            "  - Dar Ul Quran Alkareem Was Sunnah (5) - PW4M+H87, Road, Shah Allah Ditta Pind Sangrial, Islamabad, 44000, Pakistan\n",
            "\n",
            "🚉 Nearest Transport Hubs:\n",
            "🛫 Airport: Islamabad International Airport - New Islamabad Airport Rd, Islamabad, Pakistan\n",
            "🚆 Railway: Ibn-e-Sina Bay 1 - G 9/3 G-9, Islamabad, Pakistan\n",
            "🚌 Bus Station: Ibn-e-Sina Bay 1 - G 9/3 G-9, Islamabad, Pakistan\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Catering Agent"
      ],
      "metadata": {
        "id": "yHuOPN3dXdUv"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import sys\n",
        "import os\n",
        "import json\n",
        "import requests\n",
        "\n",
        "# AgentPro setup\n",
        "sys.path.insert(0, \"/content/AgentPro\")\n",
        "from agentpro import ReactAgent, create_model\n",
        "from agentpro.tools import MealPlannerTool\n",
        "\n",
        "# Load keys from environment\n",
        "GOOGLE_API_KEY = os.environ[\"GOOGLE_API_KEY\"]\n",
        "OPENAI_API_KEY = os.environ[\"OPENAI_API_KEY\"]\n",
        "\n",
        "# Create model and agent\n",
        "model = create_model(provider=\"openai\", model_name=\"gpt-4o\", api_key=OPENAI_API_KEY)\n",
        "meal_tool = MealPlannerTool()\n",
        "agent = ReactAgent(model=model, tools=[meal_tool])\n",
        "def extract_json_from_response(response):\n",
        "    cleaned = response.strip()\n",
        "    cleaned = re.sub(r\"```(?:json|python)?\", \"\", cleaned)\n",
        "    cleaned = re.sub(r\"[^\\x00-\\x7F]+\", \"\", cleaned).strip()\n",
        "    cleaned = cleaned.replace(\"“\", '\"').replace(\"”\", '\"').replace(\"‘\", \"'\").replace(\"’\", \"'\")\n",
        "\n",
        "    try:\n",
        "        return json.loads(cleaned)\n",
        "    except json.JSONDecodeError:\n",
        "        match = re.search(r\"(\\{.*\\}|\\[.*\\])\", cleaned, re.DOTALL)\n",
        "        if match:\n",
        "            try:\n",
        "                return json.loads(match.group(0))\n",
        "            except json.JSONDecodeError:\n",
        "                pass\n",
        "    raise ValueError(f\"❌ Could not extract valid JSON from LLM response:\\n{cleaned}\")\n",
        "\n",
        "# 🎯 Main catering agent logic\n",
        "def catering_agent(user_intent, schedule):\n",
        "    location = user_intent.get(\"location\", \"\")\n",
        "    if not location:\n",
        "        raise ValueError(\"❌ Location missing in user intent.\")\n",
        "\n",
        "    # Run tool via ReAct agent\n",
        "    llm_input = {\n",
        "        \"event_type\": user_intent.get(\"event_type\", \"event\"),\n",
        "        \"location\": location,\n",
        "        \"schedule\": schedule\n",
        "    }\n",
        "\n",
        "    print(\"🧠 Calling MealPlannerTool via ReAct agent...\")\n",
        "    response = agent.run(\n",
        "        f\"Use the meal planner tool to suggest an appropriate structured meal plan for the event in {location} based on the schedule.\"\n",
        "        f\" Use the schedule and intent below:\\n\\n{json.dumps(llm_input, indent=2)}\"\n",
        "        f\"IMPORTANT: Respond immediately with the final JSON object using only `Final Answer:` followed by the valid JSON. Do NOT output thoughts, actions, or any reasoning.\"\n",
        "    )\n",
        "\n",
        "    if isinstance(response.final_answer, dict):\n",
        "      meal_plan = response.final_answer.get(\"meal_plan\", response.final_answer)\n",
        "    else:\n",
        "    # fallback for formatted string meal plan\n",
        "      meal_plan = response.final_answer\n",
        "\n",
        "\n",
        "    # 🔍 Use Google Places to find caterers\n",
        "    caterer_recommendations = {}\n",
        "    for meal in [\"breakfast\", \"lunch\", \"dinner\"]:  # Simplified; can use meal_plan keys\n",
        "        vendors = search_caterers(location, meal)\n",
        "        caterer_recommendations[meal] = vendors\n",
        "\n",
        "    return {\n",
        "        \"catering_plan\": meal_plan,\n",
        "        \"caterer_recommendations\": caterer_recommendations\n",
        "    }\n",
        "\n",
        "# 📍 Google Places search\n",
        "def search_caterers(location, meal_type, limit=3):\n",
        "    url = \"https://maps.googleapis.com/maps/api/place/textsearch/json\"\n",
        "    params = {\n",
        "        \"query\": f\"{meal_type} catering near {location}\",\n",
        "        \"key\": GOOGLE_API_KEY\n",
        "    }\n",
        "    res = requests.get(url, params=params).json()\n",
        "    results = res.get(\"results\", [])[:limit]\n",
        "\n",
        "    caterers = []\n",
        "    for r in results:\n",
        "        place_id = r.get(\"place_id\")\n",
        "        detail_url = \"https://maps.googleapis.com/maps/api/place/details/json\"\n",
        "        detail_params = {\n",
        "            \"place_id\": place_id,\n",
        "            \"fields\": \"name,rating,formatted_address,formatted_phone_number,website\",\n",
        "            \"key\": GOOGLE_API_KEY\n",
        "        }\n",
        "        d = requests.get(detail_url, params=detail_params).json().get(\"result\", {})\n",
        "        caterers.append({\n",
        "            \"name\": d.get(\"name\"),\n",
        "            \"rating\": d.get(\"rating\", \"N/A\"),\n",
        "            \"address\": d.get(\"formatted_address\"),\n",
        "            \"phone\": d.get(\"formatted_phone_number\", \"N/A\"),\n",
        "            \"website\": d.get(\"website\", \"N/A\")\n",
        "        })\n",
        "\n",
        "    return caterers\n",
        "\n",
        "# 🧪 Example usage\n",
        "if __name__ == \"__main__\":\n",
        "    user_intent = extracted_intent\n",
        "    schedule = scheduler_agent(user_intent)\n",
        "\n",
        "    print(\"\\n🍽️ Running Catering Agent...\")\n",
        "    catering_result = catering_agent(user_intent, schedule)\n",
        "\n",
        "    print(\"\\n🧾 Catering Plan:\")\n",
        "    print(json.dumps(catering_result[\"catering_plan\"], indent=2))\n",
        "\n",
        "    print(\"\\n👨‍🍳 Caterer Recommendations:\")\n",
        "    for meal, vendors in catering_result[\"caterer_recommendations\"].items():\n",
        "        print(f\"\\n🍴 {meal.title()}:\")\n",
        "        for v in vendors:\n",
        "            print(f\"  - {v['name']} ({v['rating']})\")\n",
        "            print(f\"    📍 {v['address']}\")\n",
        "            print(f\"    ☎️ {v['phone']}\")\n",
        "            print(f\"    🌐 {v['website']}\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "myagM43gXfKP",
        "outputId": "3ed3c3b1-9b26-4fcf-8d13-43562adc708a"
      },
      "execution_count": 17,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "🧠 Prompting GPT-4o for schedule...\n",
            "================================================== Iteration 1 \n",
            "✅  [Debug] Sending System Prompt (with history) to LLM:\n",
            "You are an AI assistant that follows the ReAct (Reasoning + Acting) pattern.\n",
            "        \n",
            "Your goal is to help users by breaking down complex tasks into a series of thought-out steps and actions.\n",
            "\n",
            "You have access to these tools: generate_meal_plan\n",
            "\n",
            "Tool: Meal Planner Tool\n",
            "Description: Generates a detailed meal plan for any event based on event type, location, and schedule.\n",
            "Action Type: generate_meal_plan\n",
            "Input Format: Dict with keys: 'event_type', 'location', and 'schedule'.\n",
            "\n",
            "\n",
            "Your task is to:\n",
            "1. Think about what action is required — Thought.\n",
            "2. Take an appropriate action — Action.\n",
            "3. Repeat Thought/Action as needed until you find the final answer.\n",
            "\n",
            "### Format (Choose only one per response)\n",
            "\n",
            "Option 1 — When action is needed:\n",
            "Thought: Your reasoning about action and observation.\n",
            "Action: {\"action_type\": \"<action_type>\", \"input\": <input_data>}\n",
            "\n",
            "Option 2 — When you're confident in the final response:\n",
            "Thought: Now I know the answer that will be given in Final Answer.\n",
            "Final Answer: Provide a complete, well-structured response that directly addresses the original question.\n",
            "\n",
            "### Important:\n",
            "- Think step-by-step.\n",
            "- Never provide both Action and Final Answer or multiple Action in the same response.\n",
            "- Use available tools wisely.\n",
            "- If stuck, reflect and retry but never hallucinate.\n",
            "- If observation is empty or not related, reflect and retry but never hallucinate.\n",
            "- The current date is June 05, 2025.\n",
            "- If you follow the format strictly, you will be recognized as an excellent and trustworthy AI assistant.\n",
            "\n",
            "\n",
            "Question: You are an expert event planner. Create a high-level multi-day schedule for a wedding beginning on 2025-06-13 with around 300 guests. Include major activities from arrival to departure:\n",
            "airport pickups, hotel check-in, meals, sessions, sightseeing in free slots, and checkout.\n",
            "Return the result as a Python list of dictionaries in this format:\n",
            "\n",
            "Return only a valid JSON object with no code block markers, no explanation, no markdown, no labels — just the raw JSON.[{\"day\": \"Day 1 - Arrival\", \"activities\": [\"Hotel check-in\", \"Welcome dinner\"]}, ...]IMPORTANT: Respond immediately with the final JSON object using only `Final Answer:` followed by the valid JSON. Do NOT output thoughts, actions, or any reasoning.\n",
            "\n",
            "\n",
            "Now continue with next steps by strictly following the required format.\n",
            "\n",
            "==================================================\n",
            "🤖 [Debug] Step LLM Response:\n",
            "Thought: To create a high-level multi-day schedule for the wedding, I need to consider the key events and activities that typically occur during a wedding event, such as arrival, accommodations, meals, wedding sessions, and sightseeing. I will then format these into a JSON object as required.\n",
            "\n",
            "Final Answer: [{\"day\": \"Day 1 - Arrival\", \"activities\": [\"Airport pickups\", \"Hotel check-in\", \"Welcome dinner\"]}, {\"day\": \"Day 2 - Pre-Wedding Activities\", \"activities\": [\"Breakfast\", \"Rehearsal ceremony\", \"Lunch\", \"Free time for sightseeing\", \"Rehearsal dinner\"]}, {\"day\": \"Day 3 - Wedding Day\", \"activities\": [\"Breakfast\", \"Wedding ceremony\", \"Lunch\", \"Wedding reception\"]}, {\"day\": \"Day 4 - Post-Wedding Brunch & Departure\", \"activities\": [\"Farewell brunch\", \"Hotel checkout\", \"Airport drop-offs\"]}]\n",
            "✅ Parsed Thought: To create a high-level multi-day schedule for the wedding, I need to consider the key events and activities that typically occur during a wedding event, such as arrival, accommodations, meals, wedding sessions, and sightseeing. I will then format these into a JSON object as required.\n",
            "✅ Parsed Final Answer: [{\"day\": \"Day 1 - Arrival\", \"activities\": [\"Airport pickups\", \"Hotel check-in\", \"Welcome dinner\"]}, {\"day\": \"Day 2 - Pre-Wedding Activities\", \"activities\": [\"Breakfast\", \"Rehearsal ceremony\", \"Lunch\", \"Free time for sightseeing\", \"Rehearsal dinner\"]}, {\"day\": \"Day 3 - Wedding Day\", \"activities\": [\"Breakfast\", \"Wedding ceremony\", \"Lunch\", \"Wedding reception\"]}, {\"day\": \"Day 4 - Post-Wedding Brunch & Departure\", \"activities\": [\"Farewell brunch\", \"Hotel checkout\", \"Airport drop-offs\"]}]\n",
            "\n",
            "🍽️ Running Catering Agent...\n",
            "🧠 Calling MealPlannerTool via ReAct agent...\n",
            "================================================== Iteration 1 \n",
            "✅  [Debug] Sending System Prompt (with history) to LLM:\n",
            "You are an AI assistant that follows the ReAct (Reasoning + Acting) pattern.\n",
            "        \n",
            "Your goal is to help users by breaking down complex tasks into a series of thought-out steps and actions.\n",
            "\n",
            "You have access to these tools: generate_meal_plan\n",
            "\n",
            "Tool: Meal Planner Tool\n",
            "Description: Generates a detailed meal plan for any event based on event type, location, and schedule.\n",
            "Action Type: generate_meal_plan\n",
            "Input Format: Dict with keys: 'event_type', 'location', and 'schedule'.\n",
            "\n",
            "\n",
            "Your task is to:\n",
            "1. Think about what action is required — Thought.\n",
            "2. Take an appropriate action — Action.\n",
            "3. Repeat Thought/Action as needed until you find the final answer.\n",
            "\n",
            "### Format (Choose only one per response)\n",
            "\n",
            "Option 1 — When action is needed:\n",
            "Thought: Your reasoning about action and observation.\n",
            "Action: {\"action_type\": \"<action_type>\", \"input\": <input_data>}\n",
            "\n",
            "Option 2 — When you're confident in the final response:\n",
            "Thought: Now I know the answer that will be given in Final Answer.\n",
            "Final Answer: Provide a complete, well-structured response that directly addresses the original question.\n",
            "\n",
            "### Important:\n",
            "- Think step-by-step.\n",
            "- Never provide both Action and Final Answer or multiple Action in the same response.\n",
            "- Use available tools wisely.\n",
            "- If stuck, reflect and retry but never hallucinate.\n",
            "- If observation is empty or not related, reflect and retry but never hallucinate.\n",
            "- The current date is June 05, 2025.\n",
            "- If you follow the format strictly, you will be recognized as an excellent and trustworthy AI assistant.\n",
            "\n",
            "\n",
            "Question: Use the meal planner tool to suggest an appropriate structured meal plan for the event in Islamabad based on the schedule. Use the schedule and intent below:\n",
            "\n",
            "{\n",
            "  \"event_type\": \"wedding\",\n",
            "  \"location\": \"Islamabad\",\n",
            "  \"schedule\": [\n",
            "    {\n",
            "      \"day\": \"Day 1 - Arrival\",\n",
            "      \"activities\": [\n",
            "        \"Airport pickups\",\n",
            "        \"Hotel check-in\",\n",
            "        \"Welcome dinner\"\n",
            "      ]\n",
            "    },\n",
            "    {\n",
            "      \"day\": \"Day 2 - Pre-Wedding Activities\",\n",
            "      \"activities\": [\n",
            "        \"Breakfast\",\n",
            "        \"Rehearsal ceremony\",\n",
            "        \"Lunch\",\n",
            "        \"Free time for sightseeing\",\n",
            "        \"Rehearsal dinner\"\n",
            "      ]\n",
            "    },\n",
            "    {\n",
            "      \"day\": \"Day 3 - Wedding Day\",\n",
            "      \"activities\": [\n",
            "        \"Breakfast\",\n",
            "        \"Wedding ceremony\",\n",
            "        \"Lunch\",\n",
            "        \"Wedding reception\"\n",
            "      ]\n",
            "    },\n",
            "    {\n",
            "      \"day\": \"Day 4 - Post-Wedding Brunch & Departure\",\n",
            "      \"activities\": [\n",
            "        \"Farewell brunch\",\n",
            "        \"Hotel checkout\",\n",
            "        \"Airport drop-offs\"\n",
            "      ]\n",
            "    }\n",
            "  ]\n",
            "}IMPORTANT: Respond immediately with the final JSON object using only `Final Answer:` followed by the valid JSON. Do NOT output thoughts, actions, or any reasoning.\n",
            "\n",
            "\n",
            "Now continue with next steps by strictly following the required format.\n",
            "\n",
            "==================================================\n",
            "🤖 [Debug] Step LLM Response:\n",
            "Final Answer: {\"event_type\": \"wedding\", \"location\": \"Islamabad\", \"schedule\": [{\"day\": \"Day 1 - Arrival\", \"activities\": [\"Airport pickups\", \"Hotel check-in\", \"Welcome dinner\"]}, {\"day\": \"Day 2 - Pre-Wedding Activities\", \"activities\": [\"Breakfast\", \"Rehearsal ceremony\", \"Lunch\", \"Free time for sightseeing\", \"Rehearsal dinner\"]}, {\"day\": \"Day 3 - Wedding Day\", \"activities\": [\"Breakfast\", \"Wedding ceremony\", \"Lunch\", \"Wedding reception\"]}, {\"day\": \"Day 4 - Post-Wedding Brunch & Departure\", \"activities\": [\"Farewell brunch\", \"Hotel checkout\", \"Airport drop-offs\"]}]}\n",
            "✅ Parsed Final Answer: {\"event_type\": \"wedding\", \"location\": \"Islamabad\", \"schedule\": [{\"day\": \"Day 1 - Arrival\", \"activities\": [\"Airport pickups\", \"Hotel check-in\", \"Welcome dinner\"]}, {\"day\": \"Day 2 - Pre-Wedding Activities\", \"activities\": [\"Breakfast\", \"Rehearsal ceremony\", \"Lunch\", \"Free time for sightseeing\", \"Rehearsal dinner\"]}, {\"day\": \"Day 3 - Wedding Day\", \"activities\": [\"Breakfast\", \"Wedding ceremony\", \"Lunch\", \"Wedding reception\"]}, {\"day\": \"Day 4 - Post-Wedding Brunch & Departure\", \"activities\": [\"Farewell brunch\", \"Hotel checkout\", \"Airport drop-offs\"]}]}\n",
            "\n",
            "🧾 Catering Plan:\n",
            "\"{\\\"event_type\\\": \\\"wedding\\\", \\\"location\\\": \\\"Islamabad\\\", \\\"schedule\\\": [{\\\"day\\\": \\\"Day 1 - Arrival\\\", \\\"activities\\\": [\\\"Airport pickups\\\", \\\"Hotel check-in\\\", \\\"Welcome dinner\\\"]}, {\\\"day\\\": \\\"Day 2 - Pre-Wedding Activities\\\", \\\"activities\\\": [\\\"Breakfast\\\", \\\"Rehearsal ceremony\\\", \\\"Lunch\\\", \\\"Free time for sightseeing\\\", \\\"Rehearsal dinner\\\"]}, {\\\"day\\\": \\\"Day 3 - Wedding Day\\\", \\\"activities\\\": [\\\"Breakfast\\\", \\\"Wedding ceremony\\\", \\\"Lunch\\\", \\\"Wedding reception\\\"]}, {\\\"day\\\": \\\"Day 4 - Post-Wedding Brunch & Departure\\\", \\\"activities\\\": [\\\"Farewell brunch\\\", \\\"Hotel checkout\\\", \\\"Airport drop-offs\\\"]}]}\"\n",
            "\n",
            "👨‍🍳 Caterer Recommendations:\n",
            "\n",
            "🍴 Breakfast:\n",
            "  - Eggspectation Restaurant Cafe (4.5)\n",
            "    📍 P3PH+683, Street 10, F-6/3 F 6/3 F-6, Islamabad, 44000, Pakistan\n",
            "    ☎️ 0300 1707808\n",
            "    🌐 http://www.egggspectation.pk/\n",
            "  - Bistro Noir Islamabad (4.5)\n",
            "    📍 Gol Market, Street 4, F-7/3 F 7/3 F-7, Islamabad, Pakistan\n",
            "    ☎️ 0300 1888768\n",
            "    🌐 N/A\n",
            "  - Loafology Bakery & Cafe (4.3)\n",
            "    📍 108-W Jinnah Ave, Area G 7/2 Blue، Islamabad, 44000, Pakistan\n",
            "    ☎️ (051) 2804240\n",
            "    🌐 https://www.loafology.com/\n",
            "\n",
            "🍴 Lunch:\n",
            "  - Hanif Rajput RoofTop Grill (4.4)\n",
            "    📍 6th Floor, Karachi Company, PAK CHINA MALL, Mangla Rd, Markaz G 9 Markaz G-9, Islamabad, 44090, Pakistan\n",
            "    ☎️ 0317 7770989\n",
            "    🌐 https://www.hanifrajputgrill.com/\n",
            "  - Tandoori Caterers & Event Management (4.9)\n",
            "    📍 Shop no. 11, 20A, Jasmine Plaza, G8 Markaz Rd, G-8 Markaz G 8 Markaz G-8, Islamabad, 44000, Pakistan\n",
            "    ☎️ 0300 5095090\n",
            "    🌐 https://tandoorirestaurants.pk/tandoori-catering/\n",
            "  - Naveed Caterers & Event Management (5)\n",
            "    📍 Office#5, First Floor, Victory Tower, F-8 Markaz F 8 Markaz F-8, Islamabad, 44220, Pakistan\n",
            "    ☎️ 0321 5151972\n",
            "    🌐 http://www.naveedcaterers.pk/\n",
            "\n",
            "🍴 Dinner:\n",
            "  - Capital Caterers & Decorators | Catering Services & Event Planner (4.8)\n",
            "    📍 Pacific Centre Shop 1 & 2, Ground Floor, Pacific Center, Pacific Center, Johar Rd, F-8 Markaz F 8 Markaz F-8, Islamabad, 44000, Pakistan\n",
            "    ☎️ 0300 5279004\n",
            "    🌐 https://capitalcaterer.com/\n",
            "  - Tandoori Caterers & Event Management (4.9)\n",
            "    📍 Shop no. 11, 20A, Jasmine Plaza, G8 Markaz Rd, G-8 Markaz G 8 Markaz G-8, Islamabad, 44000, Pakistan\n",
            "    ☎️ 0300 5095090\n",
            "    🌐 https://tandoorirestaurants.pk/tandoori-catering/\n",
            "  - Naveed Caterers & Event Management (5)\n",
            "    📍 Office#5, First Floor, Victory Tower, F-8 Markaz F 8 Markaz F-8, Islamabad, 44220, Pakistan\n",
            "    ☎️ 0321 5151972\n",
            "    🌐 http://www.naveedcaterers.pk/\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Sight Seeing Agent"
      ],
      "metadata": {
        "id": "aMSEqllzpjnq"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import os\n",
        "import json\n",
        "import ast\n",
        "import re\n",
        "import requests\n",
        "from agentpro import ReactAgent, create_model\n",
        "\n",
        "# ✅ Use OpenAI API Key from environment\n",
        "OPENAI_API_KEY = os.getenv(\"OPENAI_API_KEY\")\n",
        "assert OPENAI_API_KEY, \"❌ Missing OPENAI_API_KEY in environment\"\n",
        "\n",
        "# ✅ Create ReAct Agent using GPT-4o\n",
        "model = create_model(provider=\"openai\", model_name=\"gpt-4o\", api_key=OPENAI_API_KEY)\n",
        "agent = ReactAgent(model=model, tools=[])\n",
        "\n",
        "import re\n",
        "import json\n",
        "\n",
        "def extract_json_from_response(response):\n",
        "    cleaned = response.strip()\n",
        "    cleaned = re.sub(r\"```(?:json|python)?\", \"\", cleaned)\n",
        "    cleaned = re.sub(r\"[^\\x00-\\x7F]+\", \"\", cleaned).strip()\n",
        "    cleaned = cleaned.replace(\"“\", '\"').replace(\"”\", '\"').replace(\"‘\", \"'\").replace(\"’\", \"'\")\n",
        "\n",
        "    try:\n",
        "        return json.loads(cleaned)\n",
        "    except json.JSONDecodeError:\n",
        "        match = re.search(r\"(\\{.*\\}|\\[.*\\])\", cleaned, re.DOTALL)\n",
        "        if match:\n",
        "            try:\n",
        "                return json.loads(match.group(0))\n",
        "            except json.JSONDecodeError:\n",
        "                pass\n",
        "    raise ValueError(f\"❌ Could not extract valid JSON from LLM response:\\n{cleaned}\")\n",
        "\n",
        "def analyze_sightseeing_need(user_intent, schedule):\n",
        "    if isinstance(schedule, dict):\n",
        "        schedule = list(schedule.values())\n",
        "    elif not isinstance(schedule, list):\n",
        "        raise Exception(\"❌ Schedule must be a list or a dictionary of days.\")\n",
        "\n",
        "    sample_schedule = []\n",
        "    for entry in schedule[:2]:\n",
        "        if isinstance(entry, dict) and 'day' in entry and 'activities' in entry:\n",
        "            activity = entry['activities'][0] if isinstance(entry['activities'], list) else str(entry['activities'])\n",
        "            sample_schedule.append(f\"{entry['day']}: {activity}\")\n",
        "    schedule_snippet = \"\\n\".join(sample_schedule)\n",
        "\n",
        "    prompt = (\n",
        "        \"You are a cultural planner helping design event schedules.\\n\"\n",
        "        \"Given the event type and a brief schedule summary, recommend whether sightseeing could be meaningfully integrated.\\n\"\n",
        "        \"If so, suggest the type and ideal time.\\n\\n\"\n",
        "        \"Return only a valid JSON object with no code block markers, no explanation, no markdown, no labels — just the raw JSON.\"\n",
        "        \"Return ONLY a Python dictionary with the following keys:\\n\"\n",
        "        \"- 'is_required' (true/false)\\n\"\n",
        "        \"- 'sightseeing_type' (e.g. cultural, shopping, historical)\\n\"\n",
        "        \"- 'integration_notes' (e.g. best added on Day 2 afternoon)\\n\\n\"\n",
        "        \"Do NOT return anything else. No text. No schedule. No explanation. and no emojis\\n\"\n",
        "        \"Example:\\n\"\n",
        "        \"{\\n\"\n",
        "        \"  \\\"is_required\\\": true,\\n\"\n",
        "        \"  \\\"sightseeing_type\\\": \\\"Cultural\\\",\\n\"\n",
        "        \"  \\\"integration_notes\\\": \\\"Schedule it on Day 2 afternoon.\\\"\\n\"\n",
        "        \"}\\n\\n\"\n",
        "        \"IMPORTANT: Respond immediately with the final JSON object using only `Final Answer:` followed by the valid JSON. Do NOT output thoughts, actions, or any reasoning.\"\n",
        "        f\"Event type: {user_intent.get('event_type')}\\n\"\n",
        "        f\"Schedule summary:\\n{schedule_snippet}\"\n",
        "    )\n",
        "\n",
        "    response = agent.run(prompt)\n",
        "    return extract_json_from_response(response.final_answer)\n",
        "\n",
        "def get_sightseeing_places(location, theme=\"cultural\", limit=5):\n",
        "    url = \"https://maps.googleapis.com/maps/api/place/textsearch/json\"\n",
        "    params = {\n",
        "        \"query\": f\"{theme} attractions near {location}\",\n",
        "        \"key\": os.getenv(\"GOOGLE_API_KEY\")\n",
        "    }\n",
        "    res = requests.get(url, params=params).json()\n",
        "    results = res.get(\"results\", [])[:limit]\n",
        "\n",
        "    return [{\n",
        "        \"name\": r.get(\"name\"),\n",
        "        \"rating\": r.get(\"rating\", \"N/A\"),\n",
        "        \"address\": r.get(\"formatted_address\"),\n",
        "        \"type\": theme,\n",
        "        \"description\": r.get(\"types\", [])\n",
        "    } for r in results]\n",
        "\n",
        "def sightseeing_agent(user_intent, schedule_data):\n",
        "    location = user_intent.get(\"location\")\n",
        "    if not location:\n",
        "        raise ValueError(\"Location not specified in user intent.\")\n",
        "\n",
        "    analysis = analyze_sightseeing_need(user_intent, schedule_data)\n",
        "\n",
        "    if not analysis.get(\"is_required\", False):\n",
        "        return {\n",
        "            \"is_required\": False,\n",
        "            \"reason\": analysis.get(\"reason\", \"LLM suggested sightseeing is not appropriate.\")\n",
        "        }\n",
        "\n",
        "    theme = analysis.get(\"sightseeing_type\", \"cultural\")\n",
        "    places = get_sightseeing_places(location, theme)\n",
        "\n",
        "    return {\n",
        "        \"is_required\": True,\n",
        "        \"sightseeing_type\": theme,\n",
        "        \"integration_notes\": analysis.get(\"integration_notes\", \"\"),\n",
        "        \"suggested_places\": places\n",
        "    }\n",
        "\n",
        "if __name__ == \"__main__\":\n",
        "    user_intent = extracted_intent\n",
        "    schedule_data = scheduler_agent(user_intent)\n",
        "    sightseeing = sightseeing_agent(user_intent, schedule_data)\n",
        "\n",
        "    if not sightseeing[\"is_required\"]:\n",
        "        print(\"❌ Sightseeing not included:\")\n",
        "        print(\"Reason:\", sightseeing.get(\"reason\"))\n",
        "    else:\n",
        "        print(\"\\n✅ Sightseeing Included!\")\n",
        "        print(\"Type:\", sightseeing[\"sightseeing_type\"])\n",
        "        print(\"When:\", sightseeing[\"integration_notes\"])\n",
        "        print(\"\\n📍 Suggested Places:\")\n",
        "        for s in sightseeing[\"suggested_places\"]:\n",
        "            print(f\"- {s['name']} ({s['rating']}) — {s['address']}\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "z6icig12plFi",
        "outputId": "8545a71d-043a-4b78-ef25-eca8eb8a3772"
      },
      "execution_count": 18,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "🧠 Prompting GPT-4o for schedule...\n",
            "================================================== Iteration 1 \n",
            "✅  [Debug] Sending System Prompt (with history) to LLM:\n",
            "You are an AI assistant that follows the ReAct (Reasoning + Acting) pattern.\n",
            "        \n",
            "Your goal is to help users by breaking down complex tasks into a series of thought-out steps and actions.\n",
            "\n",
            "You have access to these tools: \n",
            "\n",
            "\n",
            "\n",
            "Your task is to:\n",
            "1. Think about what action is required — Thought.\n",
            "2. Take an appropriate action — Action.\n",
            "3. Repeat Thought/Action as needed until you find the final answer.\n",
            "\n",
            "### Format (Choose only one per response)\n",
            "\n",
            "Option 1 — When action is needed:\n",
            "Thought: Your reasoning about action and observation.\n",
            "Action: {\"action_type\": \"<action_type>\", \"input\": <input_data>}\n",
            "\n",
            "Option 2 — When you're confident in the final response:\n",
            "Thought: Now I know the answer that will be given in Final Answer.\n",
            "Final Answer: Provide a complete, well-structured response that directly addresses the original question.\n",
            "\n",
            "### Important:\n",
            "- Think step-by-step.\n",
            "- Never provide both Action and Final Answer or multiple Action in the same response.\n",
            "- Use available tools wisely.\n",
            "- If stuck, reflect and retry but never hallucinate.\n",
            "- If observation is empty or not related, reflect and retry but never hallucinate.\n",
            "- The current date is June 05, 2025.\n",
            "- If you follow the format strictly, you will be recognized as an excellent and trustworthy AI assistant.\n",
            "\n",
            "\n",
            "Question: You are an expert event planner. Create a high-level multi-day schedule for a wedding beginning on 2025-06-13 with around 300 guests. Include major activities from arrival to departure:\n",
            "airport pickups, hotel check-in, meals, sessions, sightseeing in free slots, and checkout.\n",
            "Return the result as a Python list of dictionaries in this format:\n",
            "\n",
            "Return only a valid JSON object with no code block markers, no explanation, no markdown, no labels — just the raw JSON.[{\"day\": \"Day 1 - Arrival\", \"activities\": [\"Hotel check-in\", \"Welcome dinner\"]}, ...]IMPORTANT: Respond immediately with the final JSON object using only `Final Answer:` followed by the valid JSON. Do NOT output thoughts, actions, or any reasoning.\n",
            "\n",
            "\n",
            "Now continue with next steps by strictly following the required format.\n",
            "\n",
            "==================================================\n",
            "🤖 [Debug] Step LLM Response:\n",
            "Final Answer: [{\"day\": \"Day 1 - Arrival\", \"activities\": [\"Airport pickups\", \"Hotel check-in\", \"Welcome dinner\"]}, {\"day\": \"Day 2 - Pre-Wedding Activities\", \"activities\": [\"Breakfast at the hotel\", \"Morning sightseeing tour\", \"Lunch\", \"Rehearsal ceremony\", \"Dinner\"]}, {\"day\": \"Day 3 - Wedding Day\", \"activities\": [\"Breakfast at the hotel\", \"Wedding ceremony\", \"Lunch\", \"Reception\", \"Dinner\"]}, {\"day\": \"Day 4 - Post-Wedding Brunch & Departure\", \"activities\": [\"Brunch\", \"Afternoon sightseeing\", \"Hotel checkout\", \"Airport drop-offs\"]}]\n",
            "✅ Parsed Final Answer: [{\"day\": \"Day 1 - Arrival\", \"activities\": [\"Airport pickups\", \"Hotel check-in\", \"Welcome dinner\"]}, {\"day\": \"Day 2 - Pre-Wedding Activities\", \"activities\": [\"Breakfast at the hotel\", \"Morning sightseeing tour\", \"Lunch\", \"Rehearsal ceremony\", \"Dinner\"]}, {\"day\": \"Day 3 - Wedding Day\", \"activities\": [\"Breakfast at the hotel\", \"Wedding ceremony\", \"Lunch\", \"Reception\", \"Dinner\"]}, {\"day\": \"Day 4 - Post-Wedding Brunch & Departure\", \"activities\": [\"Brunch\", \"Afternoon sightseeing\", \"Hotel checkout\", \"Airport drop-offs\"]}]\n",
            "================================================== Iteration 1 \n",
            "✅  [Debug] Sending System Prompt (with history) to LLM:\n",
            "You are an AI assistant that follows the ReAct (Reasoning + Acting) pattern.\n",
            "        \n",
            "Your goal is to help users by breaking down complex tasks into a series of thought-out steps and actions.\n",
            "\n",
            "You have access to these tools: \n",
            "\n",
            "\n",
            "\n",
            "Your task is to:\n",
            "1. Think about what action is required — Thought.\n",
            "2. Take an appropriate action — Action.\n",
            "3. Repeat Thought/Action as needed until you find the final answer.\n",
            "\n",
            "### Format (Choose only one per response)\n",
            "\n",
            "Option 1 — When action is needed:\n",
            "Thought: Your reasoning about action and observation.\n",
            "Action: {\"action_type\": \"<action_type>\", \"input\": <input_data>}\n",
            "\n",
            "Option 2 — When you're confident in the final response:\n",
            "Thought: Now I know the answer that will be given in Final Answer.\n",
            "Final Answer: Provide a complete, well-structured response that directly addresses the original question.\n",
            "\n",
            "### Important:\n",
            "- Think step-by-step.\n",
            "- Never provide both Action and Final Answer or multiple Action in the same response.\n",
            "- Use available tools wisely.\n",
            "- If stuck, reflect and retry but never hallucinate.\n",
            "- If observation is empty or not related, reflect and retry but never hallucinate.\n",
            "- The current date is June 05, 2025.\n",
            "- If you follow the format strictly, you will be recognized as an excellent and trustworthy AI assistant.\n",
            "\n",
            "\n",
            "Question: You are a cultural planner helping design event schedules.\n",
            "Given the event type and a brief schedule summary, recommend whether sightseeing could be meaningfully integrated.\n",
            "If so, suggest the type and ideal time.\n",
            "\n",
            "Return only a valid JSON object with no code block markers, no explanation, no markdown, no labels — just the raw JSON.Return ONLY a Python dictionary with the following keys:\n",
            "- 'is_required' (true/false)\n",
            "- 'sightseeing_type' (e.g. cultural, shopping, historical)\n",
            "- 'integration_notes' (e.g. best added on Day 2 afternoon)\n",
            "\n",
            "Do NOT return anything else. No text. No schedule. No explanation. and no emojis\n",
            "Example:\n",
            "{\n",
            "  \"is_required\": true,\n",
            "  \"sightseeing_type\": \"Cultural\",\n",
            "  \"integration_notes\": \"Schedule it on Day 2 afternoon.\"\n",
            "}\n",
            "\n",
            "IMPORTANT: Respond immediately with the final JSON object using only `Final Answer:` followed by the valid JSON. Do NOT output thoughts, actions, or any reasoning.Event type: wedding\n",
            "Schedule summary:\n",
            "Day 1 - Arrival: Airport pickups\n",
            "Day 2 - Pre-Wedding Activities: Breakfast at the hotel\n",
            "\n",
            "\n",
            "Now continue with next steps by strictly following the required format.\n",
            "\n",
            "==================================================\n",
            "🤖 [Debug] Step LLM Response:\n",
            "Final Answer: {\"is_required\": true, \"sightseeing_type\": \"Cultural\", \"integration_notes\": \"Schedule it on Day 1 evening after arrivals.\"}\n",
            "✅ Parsed Final Answer: {\"is_required\": true, \"sightseeing_type\": \"Cultural\", \"integration_notes\": \"Schedule it on Day 1 evening after arrivals.\"}\n",
            "\n",
            "✅ Sightseeing Included!\n",
            "Type: Cultural\n",
            "When: Schedule it on Day 1 evening after arrivals.\n",
            "\n",
            "📍 Suggested Places:\n",
            "- Lok Virsa Heritage Museum (4.6) — Garden Avenue, Shakarparian Rd, Islamabad, Pakistan\n",
            "- Pakistan Monument Museum (4.6) — M3V9+2Q9, Srinagar Hwy, Islamabad, Pakistan\n",
            "- Pakistan Monument (4.6) — M3V9+2Q9 Shakarparian Hills, Srinagar Hwy, Islamabad, Pakistan\n",
            "- Islamabad Museum (4.3) — P39W+MMP, 19 Ataturk Ave, G-5/1 G-5, Islamabad, Pakistan\n",
            "- Shah Allah Ditta Caves (4.4) — PWC8+R3C, Road, Shah Allah Ditta Islamabad, 44000, Pakistan\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Event Theme Agent"
      ],
      "metadata": {
        "id": "noz_eqfmqBPD"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import os\n",
        "import json\n",
        "import ast\n",
        "import re\n",
        "import requests\n",
        "from agentpro import ReactAgent, create_model\n",
        "\n",
        "# ✅ Use OpenAI API Key\n",
        "OPENAI_API_KEY = os.getenv(\"OPENAI_API_KEY\")\n",
        "assert OPENAI_API_KEY, \"❌ Missing OPENAI_API_KEY in environment\"\n",
        "\n",
        "# ✅ Create ReAct Agent using GPT-4o\n",
        "model = create_model(provider=\"openai\", model_name=\"gpt-4o\", api_key=OPENAI_API_KEY)\n",
        "agent = ReactAgent(model=model, tools=[])\n",
        "\n",
        "\n",
        "def extract_json_from_response(response):\n",
        "    cleaned = response.strip()\n",
        "    cleaned = re.sub(r\"```(?:json|python)?\", \"\", cleaned)\n",
        "    cleaned = re.sub(r\"[^\\x00-\\x7F]+\", \"\", cleaned).strip()\n",
        "    cleaned = cleaned.replace(\"“\", '\"').replace(\"”\", '\"').replace(\"‘\", \"'\").replace(\"’\", \"'\")\n",
        "\n",
        "    try:\n",
        "        return json.loads(cleaned)\n",
        "    except json.JSONDecodeError:\n",
        "        match = re.search(r\"(\\{.*\\}|\\[.*\\])\", cleaned, re.DOTALL)\n",
        "        if match:\n",
        "            try:\n",
        "                return json.loads(match.group(0))\n",
        "            except json.JSONDecodeError:\n",
        "                pass\n",
        "    raise ValueError(f\"❌ Could not extract valid JSON from LLM response:\\n{cleaned}\")\n",
        "\n",
        "\n",
        "\n",
        "def get_vendor_details(query, location, limit=3):\n",
        "    url = \"https://maps.googleapis.com/maps/api/place/textsearch/json\"\n",
        "    params = {\n",
        "        \"query\": f\"{query} near {location}\",\n",
        "        \"key\": os.getenv(\"GOOGLE_API_KEY\")\n",
        "    }\n",
        "    res = requests.get(url, params=params).json()\n",
        "    results = res.get(\"results\", [])[:limit]\n",
        "\n",
        "    vendors = []\n",
        "    for r in results:\n",
        "        place_id = r.get(\"place_id\")\n",
        "        details_url = \"https://maps.googleapis.com/maps/api/place/details/json\"\n",
        "        details_params = {\n",
        "            \"place_id\": place_id,\n",
        "            \"fields\": \"name,rating,formatted_address,formatted_phone_number,website\",\n",
        "            \"key\": os.getenv(\"GOOGLE_API_KEY\")\n",
        "        }\n",
        "        details = requests.get(details_url, params=details_params).json().get(\"result\", {})\n",
        "        vendors.append({\n",
        "            \"name\": details.get(\"name\"),\n",
        "            \"address\": details.get(\"formatted_address\"),\n",
        "            \"phone\": details.get(\"formatted_phone_number\", \"N/A\"),\n",
        "            \"website\": details.get(\"website\", \"N/A\"),\n",
        "            \"rating\": details.get(\"rating\", \"N/A\"),\n",
        "            \"type\": query\n",
        "        })\n",
        "    return vendors\n",
        "\n",
        "def analyze_theme(user_intent):\n",
        "    prompt = (\n",
        "        \"You are a creative event theme planner. Based on the event intent below, suggest a detailed event theme plan.\\n\"\n",
        "        \"Include:\\n\"\n",
        "        \"1. A creative theme name and style\\n\"\n",
        "        \"2. A list of decor elements needed (like penaflex, stage, lighting, florals)\\n\"\n",
        "        \"3. Any custom branding or stage setup suggestions\\n\"\n",
        "        \"Return only a valid JSON object with no code block markers, no explanation, no markdown, no labels — just the raw JSON.\"\n",
        "        \"Return as a JSON dictionary with keys: theme_name, style_description, required_elements, branding_notes.\\n\"\n",
        "        \"IMPORTANT: Respond immediately with the final JSON object using only `Final Answer:` followed by the valid JSON. Do NOT output thoughts, actions, or any reasoning.\"\n",
        "        f\"user_intent = {json.dumps(user_intent, indent=2)}\"\n",
        "    )\n",
        "    response = agent.run(prompt)\n",
        "    return extract_json_from_response(response.final_answer)\n",
        "\n",
        "def theme_agent(user_intent):\n",
        "    location = user_intent.get(\"location\")\n",
        "    if not location:\n",
        "        raise ValueError(\"Location not found in user intent\")\n",
        "\n",
        "    theme_plan = analyze_theme(user_intent)\n",
        "\n",
        "    required_elements = theme_plan.get(\"required_elements\", [])\n",
        "    if isinstance(required_elements, dict):\n",
        "        required_elements = [item.get(\"item\") for item in required_elements.get(\"decor\", []) if item.get(\"item\")]\n",
        "\n",
        "    vendor_list = []\n",
        "    for item in required_elements:\n",
        "        vendor_list.extend(get_vendor_details(item, location))\n",
        "\n",
        "    return {\n",
        "        \"recommended\": {\n",
        "            \"theme_name\": theme_plan.get(\"theme_name\"),\n",
        "            \"style_description\": theme_plan.get(\"style_description\"),\n",
        "            \"branding_notes\": theme_plan.get(\"branding_notes\", \"\"),\n",
        "            \"required_elements\": required_elements\n",
        "        },\n",
        "        \"alternates\": [],\n",
        "        \"vendors\": vendor_list\n",
        "    }\n",
        "\n",
        "if __name__ == \"__main__\":\n",
        "    user_intent = extracted_intent\n",
        "    print(\"\\n🎨 Generating Event Theme Plan...\")\n",
        "    theme_output = theme_agent(user_intent)\n",
        "\n",
        "    recommended = theme_output[\"recommended\"]\n",
        "\n",
        "    print(f\"\\n🎭 Theme Name: {recommended['theme_name']}\")\n",
        "    print(f\"🕋️ Description: {recommended['style_description']}\")\n",
        "    print(f\"🧾 Branding Notes: {recommended['branding_notes']}\")\n",
        "    print(f\"\\n🛠️ Required Decor Elements:\")\n",
        "    for e in recommended['required_elements']:\n",
        "        print(f\"- {e}\")\n",
        "\n",
        "    print(f\"\\n🏢 Vendor Recommendations:\")\n",
        "    for v in theme_output['vendors']:\n",
        "        print(f\"\\n🔹 {v['type'].title()} Vendor\")\n",
        "        print(f\"  Name: {v['name']}\")\n",
        "        print(f\"  📍 Address: {v['address']}\")\n",
        "        print(f\"  ☎️ Phone: {v['phone']}\")\n",
        "        print(f\"  🌐 Website: {v['website']}\")\n",
        "        print(f\"  ⭐ Rating: {v['rating']}\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "-zWz1nxjqCWv",
        "outputId": "9260160d-58c1-42fd-822c-a3ed48bc61d0"
      },
      "execution_count": 19,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "🎨 Generating Event Theme Plan...\n",
            "================================================== Iteration 1 \n",
            "✅  [Debug] Sending System Prompt (with history) to LLM:\n",
            "You are an AI assistant that follows the ReAct (Reasoning + Acting) pattern.\n",
            "        \n",
            "Your goal is to help users by breaking down complex tasks into a series of thought-out steps and actions.\n",
            "\n",
            "You have access to these tools: \n",
            "\n",
            "\n",
            "\n",
            "Your task is to:\n",
            "1. Think about what action is required — Thought.\n",
            "2. Take an appropriate action — Action.\n",
            "3. Repeat Thought/Action as needed until you find the final answer.\n",
            "\n",
            "### Format (Choose only one per response)\n",
            "\n",
            "Option 1 — When action is needed:\n",
            "Thought: Your reasoning about action and observation.\n",
            "Action: {\"action_type\": \"<action_type>\", \"input\": <input_data>}\n",
            "\n",
            "Option 2 — When you're confident in the final response:\n",
            "Thought: Now I know the answer that will be given in Final Answer.\n",
            "Final Answer: Provide a complete, well-structured response that directly addresses the original question.\n",
            "\n",
            "### Important:\n",
            "- Think step-by-step.\n",
            "- Never provide both Action and Final Answer or multiple Action in the same response.\n",
            "- Use available tools wisely.\n",
            "- If stuck, reflect and retry but never hallucinate.\n",
            "- If observation is empty or not related, reflect and retry but never hallucinate.\n",
            "- The current date is June 05, 2025.\n",
            "- If you follow the format strictly, you will be recognized as an excellent and trustworthy AI assistant.\n",
            "\n",
            "\n",
            "Question: You are a creative event theme planner. Based on the event intent below, suggest a detailed event theme plan.\n",
            "Include:\n",
            "1. A creative theme name and style\n",
            "2. A list of decor elements needed (like penaflex, stage, lighting, florals)\n",
            "3. Any custom branding or stage setup suggestions\n",
            "Return only a valid JSON object with no code block markers, no explanation, no markdown, no labels — just the raw JSON.Return as a JSON dictionary with keys: theme_name, style_description, required_elements, branding_notes.\n",
            "IMPORTANT: Respond immediately with the final JSON object using only `Final Answer:` followed by the valid JSON. Do NOT output thoughts, actions, or any reasoning.user_intent = {\n",
            "  \"event_type\": \"wedding\",\n",
            "  \"location\": \"Islamabad\",\n",
            "  \"event_date\": \"2025-06-13\",\n",
            "  \"guest_count\": 300,\n",
            "  \"preferences\": {\n",
            "    \"stay_dates\": \"2025-06-13 to 2025-06-15\",\n",
            "    \"guest_origins\": null\n",
            "  },\n",
            "  \"event_theme\": null,\n",
            "  \"meal_count\": null,\n",
            "  \"transport_needs\": null,\n",
            "  \"sightseeing\": null\n",
            "}\n",
            "\n",
            "\n",
            "Now continue with next steps by strictly following the required format.\n",
            "\n",
            "==================================================\n",
            "🤖 [Debug] Step LLM Response:\n",
            "Final Answer: {\"theme_name\": \"Ethereal Enchantment\",\"style_description\": \"A mystical and elegant theme that incorporates elements of nature and fantasy, creating a dreamlike atmosphere. The style combines soft pastels with touches of gold and silver, lush greenery, and delicate florals to evoke a sense of tranquility and magic.\",\"required_elements\": [\"penaflex with custom graphics of ethereal landscapes\",\"stage with a cascading floral backdrop\",\"soft mood lighting with fairy lights\",\"hanging floral arrangements\",\"crystal chandeliers\",\"gold and silver tableware\",\"pastel-colored drapery\",\"floral centerpieces with candles\"],\"branding_notes\": \"Custom monogram of the couple's initials to be used on all printed materials and projected onto the dance floor. Stage setup to include a floral arch with the couple's names in calligraphy.\"}\n",
            "✅ Parsed Final Answer: {\"theme_name\": \"Ethereal Enchantment\",\"style_description\": \"A mystical and elegant theme that incorporates elements of nature and fantasy, creating a dreamlike atmosphere. The style combines soft pastels with touches of gold and silver, lush greenery, and delicate florals to evoke a sense of tranquility and magic.\",\"required_elements\": [\"penaflex with custom graphics of ethereal landscapes\",\"stage with a cascading floral backdrop\",\"soft mood lighting with fairy lights\",\"hanging floral arrangements\",\"crystal chandeliers\",\"gold and silver tableware\",\"pastel-colored drapery\",\"floral centerpieces with candles\"],\"branding_notes\": \"Custom monogram of the couple's initials to be used on all printed materials and projected onto the dance floor. Stage setup to include a floral arch with the couple's names in calligraphy.\"}\n",
            "\n",
            "🎭 Theme Name: Ethereal Enchantment\n",
            "🕋️ Description: A mystical and elegant theme that incorporates elements of nature and fantasy, creating a dreamlike atmosphere. The style combines soft pastels with touches of gold and silver, lush greenery, and delicate florals to evoke a sense of tranquility and magic.\n",
            "🧾 Branding Notes: Custom monogram of the couple's initials to be used on all printed materials and projected onto the dance floor. Stage setup to include a floral arch with the couple's names in calligraphy.\n",
            "\n",
            "🛠️ Required Decor Elements:\n",
            "- penaflex with custom graphics of ethereal landscapes\n",
            "- stage with a cascading floral backdrop\n",
            "- soft mood lighting with fairy lights\n",
            "- hanging floral arrangements\n",
            "- crystal chandeliers\n",
            "- gold and silver tableware\n",
            "- pastel-colored drapery\n",
            "- floral centerpieces with candles\n",
            "\n",
            "🏢 Vendor Recommendations:\n",
            "\n",
            "🔹 Penaflex With Custom Graphics Of Ethereal Landscapes Vendor\n",
            "  Name: Panaflex Printing Islamabad\n",
            "  📍 Address: Landmark 1 plaza، Street 44, Markaz SCHS E 11/2 ای - ۱۱، اسلام آباد, 44000, Pakistan\n",
            "  ☎️ Phone: 0315 6703330\n",
            "  🌐 Website: http://www.hrgroupisb.com/\n",
            "  ⭐ Rating: 4.9\n",
            "\n",
            "🔹 Penaflex With Custom Graphics Of Ethereal Landscapes Vendor\n",
            "  Name: Panaflex Printing Islamabad\n",
            "  📍 Address: B-Block Main Markaz Shop No. 4 Al-Nafay Complex, Block B Multi Gardens B-17, Islamabad, 46000, Pakistan\n",
            "  ☎️ Phone: 0314 7067139\n",
            "  🌐 Website: N/A\n",
            "  ⭐ Rating: 4.9\n",
            "\n",
            "🔹 Penaflex With Custom Graphics Of Ethereal Landscapes Vendor\n",
            "  Name: ADM Sign & Panaflex Printing Islamabad\n",
            "  📍 Address: F-11/1 Street, 02 Service Rd W, near Paint & Hardware, F-11/1 F 11/1 F-11, Islamabad, 45200, Pakistan\n",
            "  ☎️ Phone: 0334 3339491\n",
            "  🌐 Website: N/A\n",
            "  ⭐ Rating: 5\n",
            "\n",
            "🔹 Stage With A Cascading Floral Backdrop Vendor\n",
            "  Name: The Flower Palace\n",
            "  📍 Address: F/7 markaz Collige road, markaz, F 7/3 F-7, Islamabad, 44210, Pakistan\n",
            "  ☎️ Phone: 0345 5441746\n",
            "  🌐 Website: http://theflowerpalace.store/\n",
            "  ⭐ Rating: 4.7\n",
            "\n",
            "🔹 Stage With A Cascading Floral Backdrop Vendor\n",
            "  Name: Ali Fresh Flower Decoration Center\n",
            "  📍 Address: Shop Main Main PWD Rd, near Japan Electronics, PWD Housing Society Sector C PWD Society, Islamabad, Pakistan\n",
            "  ☎️ Phone: 0305 5276454\n",
            "  🌐 Website: N/A\n",
            "  ⭐ Rating: 4.5\n",
            "\n",
            "🔹 Stage With A Cascading Floral Backdrop Vendor\n",
            "  Name: White Rose decoration & fresh flower centre\n",
            "  📍 Address: Khanna Pul, Al Noor Colony, Islamabad, 43600, Pakistan\n",
            "  ☎️ Phone: 0324 0061194\n",
            "  🌐 Website: N/A\n",
            "  ⭐ Rating: 4.8\n",
            "\n",
            "🔹 Soft Mood Lighting With Fairy Lights Vendor\n",
            "  Name: Brisbane Fairy Lights\n",
            "  📍 Address: Suite 6/52 Newheath Dr, Arundel QLD 4214, Australia\n",
            "  ☎️ Phone: 0450 271 715\n",
            "  🌐 Website: http://www.brisbanefairylights.com.au/\n",
            "  ⭐ Rating: 5\n",
            "\n",
            "🔹 Hanging Floral Arrangements Vendor\n",
            "  Name: Best Ideal Fresh Flowers Shop # 3\n",
            "  📍 Address: Ideal Fresh Flowers, Shop # 3, super flowers market, F-6/1 F 6/1 F-6, Islamabad, 46000, Pakistan\n",
            "  ☎️ Phone: 0333 8294720\n",
            "  🌐 Website: https://www.instagram.com/best_ideal_fresh_flower_shop_3?igsh=MTFjeHR0dWowbXhicA==\n",
            "  ⭐ Rating: 4.9\n",
            "\n",
            "🔹 Hanging Floral Arrangements Vendor\n",
            "  Name: The Flower Palace\n",
            "  📍 Address: F/7 markaz Collige road, markaz, F 7/3 F-7, Islamabad, 44210, Pakistan\n",
            "  ☎️ Phone: 0345 5441746\n",
            "  🌐 Website: http://theflowerpalace.store/\n",
            "  ⭐ Rating: 4.7\n",
            "\n",
            "🔹 Hanging Floral Arrangements Vendor\n",
            "  Name: Ali Fresh Flower Decoration Center\n",
            "  📍 Address: Shop Main Main PWD Rd, near Japan Electronics, PWD Housing Society Sector C PWD Society, Islamabad, Pakistan\n",
            "  ☎️ Phone: 0305 5276454\n",
            "  🌐 Website: N/A\n",
            "  ⭐ Rating: 4.5\n",
            "\n",
            "🔹 Crystal Chandeliers Vendor\n",
            "  Name: Unique Pink Himalayan Salt Lamps & Products Islamabad\n",
            "  📍 Address: House No: 271 Street No: 01, I.J.P. Road, near PSO Petrol Pump, Islamabad Valley Islamabad, 44800, Pakistan\n",
            "  ☎️ Phone: 0336 5796016\n",
            "  🌐 Website: https://quicksell.co/s/unique--antique-salt-lamps/unique--antique-salt-lamps/a5u\n",
            "  ⭐ Rating: 5\n",
            "\n",
            "🔹 Crystal Chandeliers Vendor\n",
            "  Name: Lighting Concepts\n",
            "  📍 Address: Unit No. 7-8, Badini Plaza, near Razia Shareef Plaza, Block F G 7/3 Blue Area, Islamabad, 44000, Pakistan\n",
            "  ☎️ Phone: 0336 2150294\n",
            "  🌐 Website: N/A\n",
            "  ⭐ Rating: 4.3\n",
            "\n",
            "🔹 Crystal Chandeliers Vendor\n",
            "  Name: LIGHT HOUSE\n",
            "  📍 Address: Shop 1, Bilal Plaza, Blue, Area G 7/3 Blue Area, Islamabad, 44000, Pakistan\n",
            "  ☎️ Phone: 0333 8880200\n",
            "  🌐 Website: http://www.lighthouseisb.com.pk/\n",
            "  ⭐ Rating: 4.4\n",
            "\n",
            "🔹 Gold And Silver Tableware Vendor\n",
            "  Name: Silver Collection®\n",
            "  📍 Address: Main، F-10 Markaz F 10/4 F-10, Islamabad, Pakistan\n",
            "  ☎️ Phone: (051) 2212522\n",
            "  🌐 Website: https://www.instagram.com/silvercollectionofficial/\n",
            "  ⭐ Rating: 4.7\n",
            "\n",
            "🔹 Gold And Silver Tableware Vendor\n",
            "  Name: Venus Silver Center\n",
            "  📍 Address: Shop 2, Shaukat Plaza, Block 8 School Rd, F-6 Markaz F 6 Markaz F-6, Islamabad, 44000, Pakistan\n",
            "  ☎️ Phone: 0334 5529044\n",
            "  🌐 Website: https://www.instagram.com/venus_silver_center/\n",
            "  ⭐ Rating: 4.4\n",
            "\n",
            "🔹 Gold And Silver Tableware Vendor\n",
            "  Name: Sila Jewellers\n",
            "  📍 Address: 3-B, United Plaza, G-9 Markaz G 9 Markaz G-9, Islamabad, 44000, Pakistan\n",
            "  ☎️ Phone: 0321 5023025\n",
            "  🌐 Website: https://www.facebook.com/SilaJewellers\n",
            "  ⭐ Rating: 4.9\n",
            "\n",
            "🔹 Pastel-Colored Drapery Vendor\n",
            "  Name: GM Blinds & Curtains Islamabad\n",
            "  📍 Address: Shop no.6, Basement Al-Aziz Plaza, Suleman Market f11/2 F11/2, F-11/2 F 11/2 F-11, Islamabad, 44000, Pakistan\n",
            "  ☎️ Phone: 0300 5073971\n",
            "  🌐 Website: https://sites.google.com/view/curtainsislambad\n",
            "  ⭐ Rating: 4.9\n",
            "\n",
            "🔹 Pastel-Colored Drapery Vendor\n",
            "  Name: FA Blinds Islamabad branch\n",
            "  📍 Address: Main Jinnah Rd, near Taqwa superstore, Bani Gala, 46500, Pakistan\n",
            "  ☎️ Phone: 0346 0940862\n",
            "  🌐 Website: http://fablindsislambad.com/\n",
            "  ⭐ Rating: 4.8\n",
            "\n",
            "🔹 Pastel-Colored Drapery Vendor\n",
            "  Name: Curtain Museum\n",
            "  📍 Address: Service Rd N, Golra NPF E 11/4 E-11, Islamabad, Pakistan\n",
            "  ☎️ Phone: 0345 5010101\n",
            "  🌐 Website: https://curtainmuseumonline.com/\n",
            "  ⭐ Rating: 4.3\n",
            "\n",
            "🔹 Floral Centerpieces With Candles Vendor\n",
            "  Name: Best Ideal Fresh Flowers Shop # 3\n",
            "  📍 Address: Ideal Fresh Flowers, Shop # 3, super flowers market, F-6/1 F 6/1 F-6, Islamabad, 46000, Pakistan\n",
            "  ☎️ Phone: 0333 8294720\n",
            "  🌐 Website: https://www.instagram.com/best_ideal_fresh_flower_shop_3?igsh=MTFjeHR0dWowbXhicA==\n",
            "  ⭐ Rating: 4.9\n",
            "\n",
            "🔹 Floral Centerpieces With Candles Vendor\n",
            "  Name: Ali Fresh Flower Decoration Center\n",
            "  📍 Address: Shop Main Main PWD Rd, near Japan Electronics, PWD Housing Society Sector C PWD Society, Islamabad, Pakistan\n",
            "  ☎️ Phone: 0305 5276454\n",
            "  🌐 Website: N/A\n",
            "  ⭐ Rating: 4.5\n",
            "\n",
            "🔹 Floral Centerpieces With Candles Vendor\n",
            "  Name: Aamir Decoration And Fresh Flowers Centre (PWD Branch)\n",
            "  📍 Address: Shop No.3, Aslam Market, Central Ave, O-9 Block E Police Foundation, Islamabad, 45710, Pakistan\n",
            "  ☎️ Phone: 0341 5879919\n",
            "  🌐 Website: N/A\n",
            "  ⭐ Rating: 4.2\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Weather Predictor"
      ],
      "metadata": {
        "id": "zCiFEJHUqVOk"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import requests\n",
        "from datetime import datetime, timedelta\n",
        "import os\n",
        "\n",
        "# --- Weather Code Descriptions ---\n",
        "WEATHER_CODE_DESCRIPTIONS = {\n",
        "    0: \"Clear sky\", 1: \"Mainly clear\", 2: \"Partly cloudy\", 3: \"Overcast\",\n",
        "    45: \"Fog\", 48: \"Depositing rime fog\", 51: \"Light drizzle\", 53: \"Moderate drizzle\", 55: \"Dense drizzle\",\n",
        "    56: \"Light freezing drizzle\", 57: \"Dense freezing drizzle\", 61: \"Slight rain\", 63: \"Moderate rain\",\n",
        "    65: \"Heavy rain\", 66: \"Light freezing rain\", 67: \"Heavy freezing rain\", 71: \"Slight snow fall\",\n",
        "    73: \"Moderate snow fall\", 75: \"Heavy snow fall\", 77: \"Snow grains\", 80: \"Slight rain showers\",\n",
        "    81: \"Moderate rain showers\", 82: \"Violent rain showers\", 85: \"Slight snow showers\",\n",
        "    86: \"Heavy snow showers\", 95: \"Thunderstorm\", 96: \"Thunderstorm with slight hail\",\n",
        "    99: \"Thunderstorm with heavy hail\",\n",
        "}\n",
        "\n",
        "# --- Get Coordinates from Google Maps ---\n",
        "def get_coordinates(city):\n",
        "    url = \"https://maps.googleapis.com/maps/api/geocode/json\"\n",
        "    params = {\"address\": city, \"key\": os.getenv(\"GOOGLE_API_KEY\")}\n",
        "    response = requests.get(url, params=params)\n",
        "    data = response.json()\n",
        "    if not data.get(\"results\"):\n",
        "        raise Exception(f\"Could not determine coordinates for: {city}\")\n",
        "    location = data[\"results\"][0][\"geometry\"][\"location\"]\n",
        "    return location[\"lat\"], location[\"lng\"]\n",
        "\n",
        "# --- Get Forecast from Open-Meteo ---\n",
        "def get_open_meteo_forecast(lat, lon):\n",
        "    url = \"https://api.open-meteo.com/v1/forecast\"\n",
        "    params = {\n",
        "        \"latitude\": lat,\n",
        "        \"longitude\": lon,\n",
        "        \"daily\": \"temperature_2m_min,temperature_2m_max,weathercode\",\n",
        "        \"timezone\": \"auto\",\n",
        "        \"forecast_days\": 16\n",
        "    }\n",
        "    response = requests.get(url, params=params)\n",
        "    data = response.json()\n",
        "    return data.get(\"daily\", {})\n",
        "\n",
        "# --- Extract Event Dates from Schedule ---\n",
        "def extract_event_dates(schedule, event_start_date):\n",
        "    try:\n",
        "        base_date = datetime.strptime(event_start_date, \"%Y-%m-%d\")\n",
        "    except ValueError:\n",
        "        raise Exception(\"Event start date must be in YYYY-MM-DD format.\")\n",
        "\n",
        "    return [(base_date + timedelta(days=i)).strftime(\"%Y-%m-%d\") for i in range(len(schedule))]\n",
        "\n",
        "# --- Filter Forecast for Event Dates ---\n",
        "def filter_forecast(forecast_data, event_dates):\n",
        "    filtered = []\n",
        "    for date, t_min, t_max, code in zip(\n",
        "        forecast_data.get(\"time\", []),\n",
        "        forecast_data.get(\"temperature_2m_min\", []),\n",
        "        forecast_data.get(\"temperature_2m_max\", []),\n",
        "        forecast_data.get(\"weathercode\", [])\n",
        "    ):\n",
        "        if str(date).strip() in [d.strip() for d in event_dates]:\n",
        "            filtered.append({\n",
        "                \"date\": date,\n",
        "                \"min_temp\": f\"{t_min}°C\",\n",
        "                \"max_temp\": f\"{t_max}°C\",\n",
        "                \"description\": WEATHER_CODE_DESCRIPTIONS.get(code, \"Unknown\")\n",
        "            })\n",
        "    return filtered\n",
        "\n",
        "# --- Main Weather Agent ---\n",
        "def weather_predictor_agent(user_intent: dict, schedule: list) -> list:\n",
        "    city = user_intent.get(\"location\")\n",
        "    event_start_date = user_intent.get(\"event_date\")\n",
        "\n",
        "    if not city or not event_start_date:\n",
        "        raise Exception(\"User intent must include both 'location' and 'event_date'.\")\n",
        "\n",
        "    lat, lon = get_coordinates(city)\n",
        "    forecast_data = get_open_meteo_forecast(lat, lon)\n",
        "    event_dates = extract_event_dates(schedule, event_start_date)\n",
        "    return filter_forecast(forecast_data, event_dates)\n",
        "\n",
        "# --- Test Block ---\n",
        "if __name__ == \"__main__\":\n",
        "    try:\n",
        "        user_intent = extracted_intent\n",
        "        print(\"\\n🌤️ Fetching weather forecast (Open-Meteo)...\")\n",
        "        forecast = weather_predictor_agent(user_intent, schedule)\n",
        "\n",
        "        print(\"\\n📆 Weather Forecast for Event Days:\")\n",
        "        if not forecast:\n",
        "            print(\"No forecast available.\")\n",
        "        else:\n",
        "            for day in forecast:\n",
        "                print(f\"{day['date']}: 🌤️ {day['description']}\")\n",
        "                print(f\"    🌡️ Temp: {day['min_temp']} to {day['max_temp']}\")\n",
        "\n",
        "    except Exception as e:\n",
        "        print(f\"❌ Error in Weather Agent: {e}\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "wRYDwGCfqWcn",
        "outputId": "6236e402-9743-40ec-9e70-18abb7cbb025"
      },
      "execution_count": 20,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "🌤️ Fetching weather forecast (Open-Meteo)...\n",
            "\n",
            "📆 Weather Forecast for Event Days:\n",
            "2025-06-13: 🌤️ Light drizzle\n",
            "    🌡️ Temp: 35.5°C to 46.6°C\n",
            "2025-06-14: 🌤️ Light drizzle\n",
            "    🌡️ Temp: 34.1°C to 45.8°C\n",
            "2025-06-15: 🌤️ Mainly clear\n",
            "    🌡️ Temp: 31.3°C to 44.3°C\n",
            "2025-06-16: 🌤️ Mainly clear\n",
            "    🌡️ Temp: 33.6°C to 45.6°C\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Orchestrator Agent"
      ],
      "metadata": {
        "id": "a7DQasJUrgIL"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import json\n",
        "from agentpro import ReactAgent, create_model\n",
        "import os\n",
        "#from user_intent_agent import extract_user_intent\n",
        "\n",
        "# ✅ OpenAI model setup\n",
        "OPENAI_API_KEY = os.getenv(\"OPENAI_API_KEY\")\n",
        "assert OPENAI_API_KEY, \"❌ Missing OPENAI_API_KEY in environment\"\n",
        "\n",
        "model = create_model(provider=\"openai\", model_name=\"gpt-4o\", api_key=OPENAI_API_KEY)\n",
        "agent = ReactAgent(model=model, tools=[])\n",
        "\n",
        "import json\n",
        "import ast\n",
        "def summarize_output(section_name, data):\n",
        "    prompt = (\n",
        "        f\"You are a summarizer for an event planner agent.\\n\"\n",
        "        f\"Please summarize the key information from the '{section_name}' section in bullet points, focusing on top recommended options only.\\n\\n\"\n",
        "        f\"{section_name} data:\\n{json.dumps(data, indent=2)}\\n\\n\"\n",
        "        \"IMPORTANT: Respond immediately with the final JSON object using only `Final Answer:` followed by the valid JSON. \"\n",
        "        \"Do NOT output thoughts, actions, or any reasoning.\"\n",
        "    )\n",
        "\n",
        "    print(f\"\\n📦 Summarizing section: {section_name}\")\n",
        "    response = agent.run(prompt)\n",
        "\n",
        "    if not hasattr(response, \"final_answer\") or not response.final_answer.strip().startswith(\"{\"):\n",
        "        raise ValueError(f\"❌ LLM did not return usable JSON. Raw output:\\n{response.final_answer}\")\n",
        "\n",
        "    return extract_json_from_response(response.final_answer)\n",
        "\n",
        "def summarize_output(section_name, data):\n",
        "    prompt = (\n",
        "        f\"You are a summarizer for an event planner agent.\\n\"\n",
        "        f\"Return only a valid JSON object with no code block markers, no explanation, no markdown, no labels — just the raw JSON.\"\n",
        "        f\"Please summarize the key information from the '{section_name}' section in bullet points, focusing on top recommended options only.\\n\\n\"\n",
        "        f\"{section_name} data:\\n{json.dumps(data, indent=2)}\"\n",
        "        \"IMPORTANT: In each sub agent, Respond immediately with the final JSON object using only `Final Answer:` followed by the valid JSON. Do NOT output thoughts, actions, or any reasoning.\"\n",
        "    )\n",
        "    return agent.run(prompt).final_answer\n",
        "\n",
        "def orchestrated_event_plan(user_intent):\n",
        "    print(\"\\n🚀 Launching Orchestrator Agent...\")\n",
        "\n",
        "    # 1. Extract User Intent\n",
        "    #from your_user_intent_module import extract_user_intent  # adjust import if needed\n",
        "    #user_intent = extract_user_intent(user_query)\n",
        "\n",
        "    print(\"\\n🎯 User Intent:\")\n",
        "    print(json.dumps(user_intent, indent=2))\n",
        "\n",
        "    # 2. Venue Options\n",
        "    venue_results = venue_agent(user_intent)\n",
        "    venue_summary = summarize_output(\"Venues\", venue_results)\n",
        "\n",
        "    # 3. Vendor Recommendations\n",
        "    vendor_results = vendors_agent(user_intent)\n",
        "    vendor_summary = summarize_output(\"Vendors\", vendor_results)\n",
        "\n",
        "    # 4. Event Schedule\n",
        "    schedule = scheduler_agent(user_intent)\n",
        "\n",
        "    # 5. Transport & Parking\n",
        "    transport_output = transport_parking_agent(user_intent, venue_results, schedule)\n",
        "    transport_summary = summarize_output(\"Transportation\", transport_output)\n",
        "\n",
        "    # 6. Hotel Options\n",
        "    hotel_output = hotel_booking_agent(user_intent, venue_results)\n",
        "    hotel_summary = summarize_output(\"Hotels\", hotel_output)\n",
        "\n",
        "    # 7. Sightseeing Plan\n",
        "    sightseeing = sightseeing_agent(user_intent, schedule)\n",
        "    sightseeing_summary = summarize_output(\"Sightseeing\", sightseeing)\n",
        "\n",
        "    # 8. Catering Options\n",
        "    catering_result = catering_agent(user_intent, schedule)\n",
        "    catering_summary = summarize_output(\"Catering\", catering_result)\n",
        "\n",
        "    # 9. Theme Plan\n",
        "    theme_output = theme_agent(user_intent)\n",
        "    theme_summary = summarize_output(\"Theme\", theme_output)\n",
        "\n",
        "    # 10. Weather Forecast\n",
        "    forecast = weather_predictor_agent(user_intent, schedule)\n",
        "\n",
        "    # 🧠 Final Output Structure\n",
        "    event_plan = {\n",
        "        \"intent\": user_intent,\n",
        "        \"summary\": {\n",
        "            \"venues\": venue_summary,\n",
        "            \"vendors\": vendor_summary,\n",
        "            \"transportation\": transport_summary,\n",
        "            \"hotels\": hotel_summary,\n",
        "            \"sightseeing\": sightseeing_summary,\n",
        "            \"catering\": catering_summary,\n",
        "            \"theme\": theme_summary,\n",
        "        },\n",
        "        \"details\": {\n",
        "            \"venues\": venue_results,\n",
        "            \"vendors\": vendor_results,\n",
        "            \"schedule\": schedule,\n",
        "            \"transportation\": transport_output,\n",
        "            \"hotels\": hotel_output,\n",
        "            \"sightseeing\": sightseeing,\n",
        "            \"catering\": catering_result,\n",
        "            \"theme\": theme_output,\n",
        "            \"weather_forecast\": forecast,\n",
        "        }\n",
        "    }\n",
        "\n",
        "    print(\"\\n✅ Event Planning Complete!\")\n",
        "    return event_plan\n",
        "\n",
        "# ✅ Run it\n",
        "if __name__ == \"__main__\":\n",
        "    extracted_intent = extract_user_intent()\n",
        "    user_query = extracted_intent\n",
        "    plan = orchestrated_event_plan(extracted_intent)\n",
        "\n",
        "    print(\"\\n📋 Summary Output:\")\n",
        "    print(json.dumps(plan[\"summary\"], indent=2))\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "X71feYSRrh_h",
        "outputId": "0de45e8e-9086-4aaa-b621-cd31ab156081"
      },
      "execution_count": 21,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "👤 Please describe the event you want to plan (type, location, guests, etc.):\n",
            "> A wedding in Islamabad on 13 June 2025 for 300 guests. guests will stay from 12 till 14 June 2025\n",
            "🔁 Querying GPT-4o via ReAct agent...\n",
            "================================================== Iteration 1 \n",
            "✅  [Debug] Sending System Prompt (with history) to LLM:\n",
            "You are an AI assistant that follows the ReAct (Reasoning + Acting) pattern.\n",
            "        \n",
            "Your goal is to help users by breaking down complex tasks into a series of thought-out steps and actions.\n",
            "\n",
            "You have access to these tools: \n",
            "\n",
            "\n",
            "\n",
            "Your task is to:\n",
            "1. Think about what action is required — Thought.\n",
            "2. Take an appropriate action — Action.\n",
            "3. Repeat Thought/Action as needed until you find the final answer.\n",
            "\n",
            "### Format (Choose only one per response)\n",
            "\n",
            "Option 1 — When action is needed:\n",
            "Thought: Your reasoning about action and observation.\n",
            "Action: {\"action_type\": \"<action_type>\", \"input\": <input_data>}\n",
            "\n",
            "Option 2 — When you're confident in the final response:\n",
            "Thought: Now I know the answer that will be given in Final Answer.\n",
            "Final Answer: Provide a complete, well-structured response that directly addresses the original question.\n",
            "\n",
            "### Important:\n",
            "- Think step-by-step.\n",
            "- Never provide both Action and Final Answer or multiple Action in the same response.\n",
            "- Use available tools wisely.\n",
            "- If stuck, reflect and retry but never hallucinate.\n",
            "- If observation is empty or not related, reflect and retry but never hallucinate.\n",
            "- The current date is June 05, 2025.\n",
            "- If you follow the format strictly, you will be recognized as an excellent and trustworthy AI assistant.\n",
            "\n",
            "\n",
            "Question: You are an event planning assistant.\n",
            "Extract structured event info from the user query below.\n",
            "Return a **Python dictionary only**, no explanations or formatting.\n",
            "\n",
            "Required dictionary keys:\n",
            "- 'event_type': string\n",
            "- 'location': string\n",
            "- 'event_date': string (YYYY-MM-DD)\n",
            "- 'guest_count': integer\n",
            "- 'preferences': dictionary (include keys like 'stay_dates', 'guest_origins', etc.)\n",
            "- 'event_theme': string (optional)\n",
            "- 'meal_count': integer (optional)\n",
            "- 'transport_needs': string (optional)\n",
            "- 'sightseeing': boolean (optional)\n",
            "\n",
            "Missing values must be set to null.\n",
            "\n",
            "Output should be in pure JSON form and nothing else should be included which is not in JSON formatUser input: A wedding in Islamabad on 13 June 2025 for 300 guests. guests will stay from 12 till 14 June 2025IMPORTANT: Respond immediately with the final JSON object using only `Final Answer:` followed by the valid JSON. Do NOT output thoughts, actions, or any reasoning.\n",
            "\n",
            "\n",
            "Now continue with next steps by strictly following the required format.\n",
            "\n",
            "==================================================\n",
            "🤖 [Debug] Step LLM Response:\n",
            "Final Answer: {\"event_type\": \"wedding\", \"location\": \"Islamabad\", \"event_date\": \"2025-06-13\", \"guest_count\": 300, \"preferences\": {\"stay_dates\": \"2025-06-12 to 2025-06-14\"}, \"event_theme\": null, \"meal_count\": null, \"transport_needs\": null, \"sightseeing\": null}\n",
            "✅ Parsed Final Answer: {\"event_type\": \"wedding\", \"location\": \"Islamabad\", \"event_date\": \"2025-06-13\", \"guest_count\": 300, \"preferences\": {\"stay_dates\": \"2025-06-12 to 2025-06-14\"}, \"event_theme\": null, \"meal_count\": null, \"transport_needs\": null, \"sightseeing\": null}\n",
            "🧠 LLM RAW OUTPUT:\n",
            " {\"event_type\": \"wedding\", \"location\": \"Islamabad\", \"event_date\": \"2025-06-13\", \"guest_count\": 300, \"preferences\": {\"stay_dates\": \"2025-06-12 to 2025-06-14\"}, \"event_theme\": null, \"meal_count\": null, \"transport_needs\": null, \"sightseeing\": null}\n",
            "\n",
            "✅ Extracted User Intent:\n",
            "{\n",
            "  \"event_type\": \"wedding\",\n",
            "  \"location\": \"Islamabad\",\n",
            "  \"event_date\": \"2025-06-13\",\n",
            "  \"guest_count\": 300,\n",
            "  \"preferences\": {\n",
            "    \"stay_dates\": \"2025-06-12 to 2025-06-14\"\n",
            "  },\n",
            "  \"event_theme\": null,\n",
            "  \"meal_count\": null,\n",
            "  \"transport_needs\": null,\n",
            "  \"sightseeing\": null\n",
            "}\n",
            "\n",
            "🚀 Launching Orchestrator Agent...\n",
            "\n",
            "🎯 User Intent:\n",
            "{\n",
            "  \"event_type\": \"wedding\",\n",
            "  \"location\": \"Islamabad\",\n",
            "  \"event_date\": \"2025-06-13\",\n",
            "  \"guest_count\": 300,\n",
            "  \"preferences\": {\n",
            "    \"stay_dates\": \"2025-06-12 to 2025-06-14\"\n",
            "  },\n",
            "  \"event_theme\": null,\n",
            "  \"meal_count\": null,\n",
            "  \"transport_needs\": null,\n",
            "  \"sightseeing\": null\n",
            "}\n",
            "\n",
            "🧠 Determining suitable venue types for: wedding\n",
            "================================================== Iteration 1 \n",
            "✅  [Debug] Sending System Prompt (with history) to LLM:\n",
            "You are an AI assistant that follows the ReAct (Reasoning + Acting) pattern.\n",
            "        \n",
            "Your goal is to help users by breaking down complex tasks into a series of thought-out steps and actions.\n",
            "\n",
            "You have access to these tools: \n",
            "\n",
            "\n",
            "\n",
            "Your task is to:\n",
            "1. Think about what action is required — Thought.\n",
            "2. Take an appropriate action — Action.\n",
            "3. Repeat Thought/Action as needed until you find the final answer.\n",
            "\n",
            "### Format (Choose only one per response)\n",
            "\n",
            "Option 1 — When action is needed:\n",
            "Thought: Your reasoning about action and observation.\n",
            "Action: {\"action_type\": \"<action_type>\", \"input\": <input_data>}\n",
            "\n",
            "Option 2 — When you're confident in the final response:\n",
            "Thought: Now I know the answer that will be given in Final Answer.\n",
            "Final Answer: Provide a complete, well-structured response that directly addresses the original question.\n",
            "\n",
            "### Important:\n",
            "- Think step-by-step.\n",
            "- Never provide both Action and Final Answer or multiple Action in the same response.\n",
            "- Use available tools wisely.\n",
            "- If stuck, reflect and retry but never hallucinate.\n",
            "- If observation is empty or not related, reflect and retry but never hallucinate.\n",
            "- The current date is June 05, 2025.\n",
            "- If you follow the format strictly, you will be recognized as an excellent and trustworthy AI assistant.\n",
            "\n",
            "\n",
            "Question: You are an expert event planner.\n",
            "Suggest the 3 most suitable types of venues for a 'wedding' event.\n",
            "Return only a valid JSON object with no code block markers, no explanation, no markdown, no labels — just the raw JSON.Return only a valid JSON list like: [\"banquet hall\", \"outdoor garden\", \"conference center\"]IMPORTANT: Respond immediately with the final JSON object using only `Final Answer:` followed by the valid JSON. Do NOT output thoughts, actions, or any reasoning.\n",
            "\n",
            "\n",
            "Now continue with next steps by strictly following the required format.\n",
            "\n",
            "==================================================\n",
            "🤖 [Debug] Step LLM Response:\n",
            "Final Answer: [\"banquet hall\", \"outdoor garden\", \"historic estate\"]\n",
            "✅ Parsed Final Answer: [\"banquet hall\", \"outdoor garden\", \"historic estate\"]\n",
            "🔎 Searching: banquet hall in Islamabad\n",
            "🔎 Searching: outdoor garden in Islamabad\n",
            "🔎 Searching: historic estate in Islamabad\n",
            "================================================== Iteration 1 \n",
            "✅  [Debug] Sending System Prompt (with history) to LLM:\n",
            "You are an AI assistant that follows the ReAct (Reasoning + Acting) pattern.\n",
            "        \n",
            "Your goal is to help users by breaking down complex tasks into a series of thought-out steps and actions.\n",
            "\n",
            "You have access to these tools: \n",
            "\n",
            "\n",
            "\n",
            "Your task is to:\n",
            "1. Think about what action is required — Thought.\n",
            "2. Take an appropriate action — Action.\n",
            "3. Repeat Thought/Action as needed until you find the final answer.\n",
            "\n",
            "### Format (Choose only one per response)\n",
            "\n",
            "Option 1 — When action is needed:\n",
            "Thought: Your reasoning about action and observation.\n",
            "Action: {\"action_type\": \"<action_type>\", \"input\": <input_data>}\n",
            "\n",
            "Option 2 — When you're confident in the final response:\n",
            "Thought: Now I know the answer that will be given in Final Answer.\n",
            "Final Answer: Provide a complete, well-structured response that directly addresses the original question.\n",
            "\n",
            "### Important:\n",
            "- Think step-by-step.\n",
            "- Never provide both Action and Final Answer or multiple Action in the same response.\n",
            "- Use available tools wisely.\n",
            "- If stuck, reflect and retry but never hallucinate.\n",
            "- If observation is empty or not related, reflect and retry but never hallucinate.\n",
            "- The current date is June 05, 2025.\n",
            "- If you follow the format strictly, you will be recognized as an excellent and trustworthy AI assistant.\n",
            "\n",
            "\n",
            "Question: You are a summarizer for an event planner agent.\n",
            "Return only a valid JSON object with no code block markers, no explanation, no markdown, no labels — just the raw JSON.Please summarize the key information from the 'Venues' section in bullet points, focusing on top recommended options only.\n",
            "\n",
            "Venues data:\n",
            "[\n",
            "  {\n",
            "    \"venue_type\": \"banquet hall\",\n",
            "    \"options\": [\n",
            "      {\n",
            "        \"name\": \"Tulip Banquet Hall\",\n",
            "        \"rating\": 4.1,\n",
            "        \"address\": \"M4P4+FC9 Murree Road, Garden Ave, Shakar Parian, Islamabad, Pakistan\",\n",
            "        \"phone\": \"0300 0524555\",\n",
            "        \"website\": \"N/A\"\n",
            "      },\n",
            "      {\n",
            "        \"name\": \"Monal Marquee\",\n",
            "        \"rating\": 4.4,\n",
            "        \"address\": \"Main Service Road, Parallel\\u060c Main Margalla Rd, Golra NPF E 11/4 E-11, Islamabad, Pakistan\",\n",
            "        \"phone\": \"(051) 2223886\",\n",
            "        \"website\": \"N/A\"\n",
            "      },\n",
            "      {\n",
            "        \"name\": \"Majestic Marque Islamabad\",\n",
            "        \"rating\": 4.2,\n",
            "        \"address\": \"2-A Club Rd, near Rwal Dam chowk, Shakar Parian, Islamabad, 44000, Pakistan\",\n",
            "        \"phone\": \"(051) 8355915\",\n",
            "        \"website\": \"N/A\"\n",
            "      }\n",
            "    ]\n",
            "  },\n",
            "  {\n",
            "    \"venue_type\": \"outdoor garden\",\n",
            "    \"options\": [\n",
            "      {\n",
            "        \"name\": \"Anabia's Garden\",\n",
            "        \"rating\": 4.1,\n",
            "        \"address\": \"Khayban e jalal, E-11 , north service road, Northern Strip PMCHS E 11/2 E-11, Islamabad, 47000, Pakistan\",\n",
            "        \"phone\": \"0312 9300828\",\n",
            "        \"website\": \"N/A\"\n",
            "      },\n",
            "      {\n",
            "        \"name\": \"Rose And Jasmine Garden\",\n",
            "        \"rating\": 4.5,\n",
            "        \"address\": \"P32Q+J93 Srinagar Hwy, Islamabad, Pakistan\",\n",
            "        \"phone\": \"N/A\",\n",
            "        \"website\": \"N/A\"\n",
            "      },\n",
            "      {\n",
            "        \"name\": \"Jasmine Garden\",\n",
            "        \"rating\": 4.6,\n",
            "        \"address\": \"Unnamed Road, Islamabad, Pakistan\",\n",
            "        \"phone\": \"0310 5600831\",\n",
            "        \"website\": \"N/A\"\n",
            "      }\n",
            "    ]\n",
            "  },\n",
            "  {\n",
            "    \"venue_type\": \"historic estate\",\n",
            "    \"options\": [\n",
            "      {\n",
            "        \"name\": \"Pakistan Museum of Natural History\",\n",
            "        \"rating\": 4.5,\n",
            "        \"address\": \"Shakarparian National Park, Garden Ave, Islamabad, 44000, Pakistan\",\n",
            "        \"phone\": \"(051) 9249239\",\n",
            "        \"website\": \"http://www.pmnh.gov.pk/\"\n",
            "      },\n",
            "      {\n",
            "        \"name\": \"Awan House Soan Garden\",\n",
            "        \"rating\": 5,\n",
            "        \"address\": \"River bank road, Soan Gardens Block H Islamabad, Pakistan\",\n",
            "        \"phone\": \"N/A\",\n",
            "        \"website\": \"N/A\"\n",
            "      },\n",
            "      {\n",
            "        \"name\": \"Pagh \\u067e\\u0627\\u06c1\\u06af\",\n",
            "        \"rating\": 4.6,\n",
            "        \"address\": \"Revenue estate Pagh, PAGH, Hussain Abad, Islamabad, Pakistan\",\n",
            "        \"phone\": \"N/A\",\n",
            "        \"website\": \"N/A\"\n",
            "      }\n",
            "    ]\n",
            "  }\n",
            "]IMPORTANT: In each sub agent, Respond immediately with the final JSON object using only `Final Answer:` followed by the valid JSON. Do NOT output thoughts, actions, or any reasoning.\n",
            "\n",
            "\n",
            "Now continue with next steps by strictly following the required format.\n",
            "\n",
            "==================================================\n",
            "🤖 [Debug] Step LLM Response:\n",
            "Final Answer: {\"banquet_hall\": [{\"name\": \"Monal Marquee\", \"rating\": 4.4, \"address\": \"Main Service Road, Parallel\\u060c Main Margalla Rd, Golra NPF E 11/4 E-11, Islamabad, Pakistan\", \"phone\": \"(051) 2223886\", \"website\": \"N/A\"}], \"outdoor_garden\": [{\"name\": \"Jasmine Garden\", \"rating\": 4.6, \"address\": \"Unnamed Road, Islamabad, Pakistan\", \"phone\": \"0310 5600831\", \"website\": \"N/A\"}], \"historic_estate\": [{\"name\": \"Awan House Soan Garden\", \"rating\": 5, \"address\": \"River bank road, Soan Gardens Block H Islamabad, Pakistan\", \"phone\": \"N/A\", \"website\": \"N/A\"}]}\n",
            "✅ Parsed Final Answer: {\"banquet_hall\": [{\"name\": \"Monal Marquee\", \"rating\": 4.4, \"address\": \"Main Service Road, Parallel\\u060c Main Margalla Rd, Golra NPF E 11/4 E-11, Islamabad, Pakistan\", \"phone\": \"(051) 2223886\", \"website\": \"N/A\"}], \"outdoor_garden\": [{\"name\": \"Jasmine Garden\", \"rating\": 4.6, \"address\": \"Unnamed Road, Islamabad, Pakistan\", \"phone\": \"0310 5600831\", \"website\": \"N/A\"}], \"historic_estate\": [{\"name\": \"Awan House Soan Garden\", \"rating\": 5, \"address\": \"River bank road, Soan Gardens Block H Islamabad, Pakistan\", \"phone\": \"N/A\", \"website\": \"N/A\"}]}\n",
            "================================================== Iteration 1 \n",
            "✅  [Debug] Sending System Prompt (with history) to LLM:\n",
            "You are an AI assistant that follows the ReAct (Reasoning + Acting) pattern.\n",
            "        \n",
            "Your goal is to help users by breaking down complex tasks into a series of thought-out steps and actions.\n",
            "\n",
            "You have access to these tools: \n",
            "\n",
            "\n",
            "\n",
            "Your task is to:\n",
            "1. Think about what action is required — Thought.\n",
            "2. Take an appropriate action — Action.\n",
            "3. Repeat Thought/Action as needed until you find the final answer.\n",
            "\n",
            "### Format (Choose only one per response)\n",
            "\n",
            "Option 1 — When action is needed:\n",
            "Thought: Your reasoning about action and observation.\n",
            "Action: {\"action_type\": \"<action_type>\", \"input\": <input_data>}\n",
            "\n",
            "Option 2 — When you're confident in the final response:\n",
            "Thought: Now I know the answer that will be given in Final Answer.\n",
            "Final Answer: Provide a complete, well-structured response that directly addresses the original question.\n",
            "\n",
            "### Important:\n",
            "- Think step-by-step.\n",
            "- Never provide both Action and Final Answer or multiple Action in the same response.\n",
            "- Use available tools wisely.\n",
            "- If stuck, reflect and retry but never hallucinate.\n",
            "- If observation is empty or not related, reflect and retry but never hallucinate.\n",
            "- The current date is June 05, 2025.\n",
            "- If you follow the format strictly, you will be recognized as an excellent and trustworthy AI assistant.\n",
            "\n",
            "\n",
            "Question: You are an expert event planner. What types of vendors are typically needed for a 'wedding'? Return only a valid JSON object with no code block markers, no explanation, no markdown, no labels — just the raw JSON.Return only a Python list like: [\"catering\", \"event lighting\", \"A/V equipment\"]IMPORTANT: Respond immediately with the final JSON object using only `Final Answer:` followed by the valid JSON. Do NOT output thoughts, actions, or any reasoning.\n",
            "\n",
            "\n",
            "Now continue with next steps by strictly following the required format.\n",
            "\n",
            "==================================================\n",
            "🤖 [Debug] Step LLM Response:\n",
            "Final Answer: [\"catering\", \"photography\", \"florist\", \"venue\", \"music/band/DJ\", \"videographer\", \"wedding planner\", \"bakery for cake\", \"transportation\", \"officiant\", \"hair and makeup\", \"event rentals\"]\n",
            "✅ Parsed Final Answer: [\"catering\", \"photography\", \"florist\", \"venue\", \"music/band/DJ\", \"videographer\", \"wedding planner\", \"bakery for cake\", \"transportation\", \"officiant\", \"hair and makeup\", \"event rentals\"]\n",
            "🔎 Searching vendors for: catering\n",
            "🔎 Searching vendors for: photography\n",
            "🔎 Searching vendors for: florist\n",
            "🔎 Searching vendors for: venue\n",
            "🔎 Searching vendors for: music/band/DJ\n",
            "🔎 Searching vendors for: videographer\n",
            "🔎 Searching vendors for: wedding planner\n",
            "🔎 Searching vendors for: bakery for cake\n",
            "🔎 Searching vendors for: transportation\n",
            "🔎 Searching vendors for: officiant\n",
            "🔎 Searching vendors for: hair and makeup\n",
            "🔎 Searching vendors for: event rentals\n",
            "================================================== Iteration 1 \n",
            "✅  [Debug] Sending System Prompt (with history) to LLM:\n",
            "You are an AI assistant that follows the ReAct (Reasoning + Acting) pattern.\n",
            "        \n",
            "Your goal is to help users by breaking down complex tasks into a series of thought-out steps and actions.\n",
            "\n",
            "You have access to these tools: \n",
            "\n",
            "\n",
            "\n",
            "Your task is to:\n",
            "1. Think about what action is required — Thought.\n",
            "2. Take an appropriate action — Action.\n",
            "3. Repeat Thought/Action as needed until you find the final answer.\n",
            "\n",
            "### Format (Choose only one per response)\n",
            "\n",
            "Option 1 — When action is needed:\n",
            "Thought: Your reasoning about action and observation.\n",
            "Action: {\"action_type\": \"<action_type>\", \"input\": <input_data>}\n",
            "\n",
            "Option 2 — When you're confident in the final response:\n",
            "Thought: Now I know the answer that will be given in Final Answer.\n",
            "Final Answer: Provide a complete, well-structured response that directly addresses the original question.\n",
            "\n",
            "### Important:\n",
            "- Think step-by-step.\n",
            "- Never provide both Action and Final Answer or multiple Action in the same response.\n",
            "- Use available tools wisely.\n",
            "- If stuck, reflect and retry but never hallucinate.\n",
            "- If observation is empty or not related, reflect and retry but never hallucinate.\n",
            "- The current date is June 05, 2025.\n",
            "- If you follow the format strictly, you will be recognized as an excellent and trustworthy AI assistant.\n",
            "\n",
            "\n",
            "Question: You are a summarizer for an event planner agent.\n",
            "Return only a valid JSON object with no code block markers, no explanation, no markdown, no labels — just the raw JSON.Please summarize the key information from the 'Vendors' section in bullet points, focusing on top recommended options only.\n",
            "\n",
            "Vendors data:\n",
            "[\n",
            "  {\n",
            "    \"vendor_type\": \"catering\",\n",
            "    \"options\": [\n",
            "      {\n",
            "        \"name\": \"Naveed Caterers & Event Management\",\n",
            "        \"type\": \"catering\",\n",
            "        \"address\": \"First Floor, Victory Tower, Office#5, F-8 Markaz Islamabad, 44220, Pakistan\",\n",
            "        \"rating\": 5\n",
            "      },\n",
            "      {\n",
            "        \"name\": \"Tandoori Caterers & Event Management\",\n",
            "        \"type\": \"catering\",\n",
            "        \"address\": \"Jasmine Plaza, Shop no. 11, 20A, G8 Markaz Rd, Islamabad, 44000, Pakistan\",\n",
            "        \"rating\": 4.9\n",
            "      },\n",
            "      {\n",
            "        \"name\": \"Capital Caterers & Decorators | Catering Services & Event Planner\",\n",
            "        \"type\": \"catering\",\n",
            "        \"address\": \"Pacific Center, Pacific Centre Shop 1 & 2, Ground Floor, Pacific Center, Johar Rd, F-8 Markaz Islamabad, 44000, Pakistan\",\n",
            "        \"rating\": 4.8\n",
            "      }\n",
            "    ]\n",
            "  },\n",
            "  {\n",
            "    \"vendor_type\": \"photography\",\n",
            "    \"options\": [\n",
            "      {\n",
            "        \"name\": \"RIZWAN ARIF PHOTOGRAPHY\",\n",
            "        \"type\": \"photography\",\n",
            "        \"address\": \"St:55 block :29 shop:12, G-9/4 G 9/4 G-9, Islamabad, Pakistan\",\n",
            "        \"rating\": 4.9\n",
            "      },\n",
            "      {\n",
            "        \"name\": \"Hamza's production - Photography/Videography & Events\",\n",
            "        \"type\": \"photography\",\n",
            "        \"address\": \"Block 12 ofice # Y12 Phase 7, 46000, Pakistan\",\n",
            "        \"rating\": 4.8\n",
            "      },\n",
            "      {\n",
            "        \"name\": \"Qamar Anwar Photography\",\n",
            "        \"type\": \"photography\",\n",
            "        \"address\": \"Office # 5, Select Center, F-11 Markaz F 11 Markaz F-11, Islamabad, 44000, Pakistan\",\n",
            "        \"rating\": 4.9\n",
            "      }\n",
            "    ]\n",
            "  },\n",
            "  {\n",
            "    \"vendor_type\": \"florist\",\n",
            "    \"options\": [\n",
            "      {\n",
            "        \"name\": \"Best Ideal Fresh Flowers Shop # 3\",\n",
            "        \"type\": \"florist\",\n",
            "        \"address\": \"Shop # 3, super flowers market, Ideal Fresh Flowers, Islamabad, 46000, Pakistan\",\n",
            "        \"rating\": 4.9\n",
            "      },\n",
            "      {\n",
            "        \"name\": \"The Flower Palace\",\n",
            "        \"type\": \"florist\",\n",
            "        \"address\": \"F/7 markaz Collige road, markaz, F-7, Islamabad, 44210, Pakistan\",\n",
            "        \"rating\": 4.7\n",
            "      },\n",
            "      {\n",
            "        \"name\": \"Zain Flowers\",\n",
            "        \"type\": \"florist\",\n",
            "        \"address\": \"F, Shop No 11 Super Market F6/2 School Road, 6, Islamabad, 44220, Pakistan\",\n",
            "        \"rating\": 5\n",
            "      }\n",
            "    ]\n",
            "  },\n",
            "  {\n",
            "    \"vendor_type\": \"venue\",\n",
            "    \"options\": [\n",
            "      {\n",
            "        \"name\": \"Fortress Events Complex Islamabad\",\n",
            "        \"type\": \"venue\",\n",
            "        \"address\": \"Islamabad Expy, Madina Town, Islamabad, 44000, Pakistan\",\n",
            "        \"rating\": 4.4\n",
            "      },\n",
            "      {\n",
            "        \"name\": \"Empire Marquee Islamabad\",\n",
            "        \"type\": \"venue\",\n",
            "        \"address\": \"Islamabad Expy\\u060c behind PSO Pump, Nawaz, Islamabad, 44000, Pakistan\",\n",
            "        \"rating\": 4.4\n",
            "      },\n",
            "      {\n",
            "        \"name\": \"The Royal Palm Marquee\",\n",
            "        \"type\": \"venue\",\n",
            "        \"address\": \"Plot no 4, near Burki PSO station Kuri Road, Islamabad Expy, Nawaz, Islamabad, 44000, Pakistan\",\n",
            "        \"rating\": 4.6\n",
            "      }\n",
            "    ]\n",
            "  },\n",
            "  {\n",
            "    \"vendor_type\": \"music/band/DJ\",\n",
            "    \"options\": [\n",
            "      {\n",
            "        \"name\": \"Fauji Band Lucky Star Rawalpindi\",\n",
            "        \"type\": \"music/band/DJ\",\n",
            "        \"address\": \"8 Chandni Chowk Flyover, Chah Sultan, Islamabad, 46000, Pakistan\",\n",
            "        \"rating\": 5\n",
            "      },\n",
            "      {\n",
            "        \"name\": \"Music band\",\n",
            "        \"type\": \"music/band/DJ\",\n",
            "        \"address\": \"i&t center, G-10/4 G 10/4 G-10, Islamabad, 44000, Pakistan\",\n",
            "        \"rating\": 5\n",
            "      }\n",
            "    ]\n",
            "  },\n",
            "  {\n",
            "    \"vendor_type\": \"videographer\",\n",
            "    \"options\": [\n",
            "      {\n",
            "        \"name\": \"Hamza's production - Photography/Videography & Events\",\n",
            "        \"type\": \"videographer\",\n",
            "        \"address\": \"Block 12 ofice # Y12 Phase 7, 46000, Pakistan\",\n",
            "        \"rating\": 4.8\n",
            "      },\n",
            "      {\n",
            "        \"name\": \"Hamzas production - Photography/Videography & Events\",\n",
            "        \"type\": \"videographer\",\n",
            "        \"address\": \"5th floor, feroz center, G-6/2 Islamabad, 46000, Pakistan\",\n",
            "        \"rating\": 5\n",
            "      },\n",
            "      {\n",
            "        \"name\": \"Zillay Studios -Videography and Photography Services in Rawalpindi And Islamabad\",\n",
            "        \"type\": \"videographer\",\n",
            "        \"address\": \"ground floor office no, Liberty Market, 24, opposite to Gordon college, Naya Mohalla, Rawalpindi, 46000, Pakistan\",\n",
            "        \"rating\": 5\n",
            "      }\n",
            "    ]\n",
            "  },\n",
            "  {\n",
            "    \"vendor_type\": \"wedding planner\",\n",
            "    \"options\": [\n",
            "      {\n",
            "        \"name\": \"Hello Events\",\n",
            "        \"type\": \"wedding planner\",\n",
            "        \"address\": \"E11/4 Street 22, NPF E 11/4 E-11, Islamabad, 46000, Pakistan\",\n",
            "        \"rating\": 4.9\n",
            "      },\n",
            "      {\n",
            "        \"name\": \"Zee J Events\",\n",
            "        \"type\": \"wedding planner\",\n",
            "        \"address\": \"House 758 Street 72, D-12/2 D 12/2 D-12, Islamabad, 46000, Pakistan\",\n",
            "        \"rating\": 4.8\n",
            "      },\n",
            "      {\n",
            "        \"name\": \"Islamabad Creative Event Planner\",\n",
            "        \"type\": \"wedding planner\",\n",
            "        \"address\": \"street 16, Markaz, F-6, Islamabad, 44220, Pakistan\",\n",
            "        \"rating\": 4.9\n",
            "      }\n",
            "    ]\n",
            "  },\n",
            "  {\n",
            "    \"vendor_type\": \"bakery for cake\",\n",
            "    \"options\": [\n",
            "      {\n",
            "        \"name\": \"Tehzeeb Bakers Blue Area\",\n",
            "        \"type\": \"bakery for cake\",\n",
            "        \"address\": \"81 west Jinnah Ave, Block F G 7/3 Blue Area, Islamabad, Pakistan\",\n",
            "        \"rating\": 4.5\n",
            "      },\n",
            "      {\n",
            "        \"name\": \"Funky Bake\",\n",
            "        \"type\": \"bakery for cake\",\n",
            "        \"address\": \"Hilal Rd, F-11 Markaz F 11 Markaz F-11, Islamabad, Pakistan\",\n",
            "        \"rating\": 4.6\n",
            "      },\n",
            "      {\n",
            "        \"name\": \"Loafology Bakery & Cafe\",\n",
            "        \"type\": \"bakery for cake\",\n",
            "        \"address\": \"108-W Jinnah Ave, Area G 7/2 Blue\\u060c Islamabad, 44000, Pakistan\",\n",
            "        \"rating\": 4.3\n",
            "      }\n",
            "    ]\n",
            "  },\n",
            "  {\n",
            "    \"vendor_type\": \"transportation\",\n",
            "    \"options\": [\n",
            "      {\n",
            "        \"name\": \"Islamabad Haseeb Goods Transport and logistics services\",\n",
            "        \"type\": \"transportation\",\n",
            "        \"address\": \"Shop 350, I-11/4 I 11/4 New sabzi mandi, Islamabad, 46000, Pakistan\",\n",
            "        \"rating\": 4.9\n",
            "      },\n",
            "      {\n",
            "        \"name\": \"MS Tours And Transport\",\n",
            "        \"type\": \"transportation\",\n",
            "        \"address\": \"Ground Floor, Ali Plaza, Office #16, Markaz, G-10, Islamabad, 92000, Pakistan\",\n",
            "        \"rating\": 4.8\n",
            "      },\n",
            "      {\n",
            "        \"name\": \"Niazi Goods Transport Company.\",\n",
            "        \"type\": \"transportation\",\n",
            "        \"address\": \"N-5\\u060c opp. bajaur fruits shop, Islamabad, Pakistan\",\n",
            "        \"rating\": 5\n",
            "      }\n",
            "    ]\n",
            "  },\n",
            "  {\n",
            "    \"vendor_type\": \"officiant\",\n",
            "    \"options\": [\n",
            "      {\n",
            "        \"name\": \"Muhammad Arif -Nikah Khawan Registrar In Rawalpindi\",\n",
            "        \"type\": \"officiant\",\n",
            "        \"address\": \"22 No. Chungi Rd, Harley Street, Rawalpindi, 46000, Pakistan\",\n",
            "        \"rating\": 4.9\n",
            "      },\n",
            "      {\n",
            "        \"name\": \"Empire Marquee Islamabad\",\n",
            "        \"type\": \"officiant\",\n",
            "        \"address\": \"Islamabad Expy\\u060c behind PSO Pump, Nawaz, Islamabad, 44000, Pakistan\",\n",
            "        \"rating\": 4.4\n",
            "      },\n",
            "      {\n",
            "        \"name\": \"Nikah Rigestrar and Nikah Khuwan\",\n",
            "        \"type\": \"officiant\",\n",
            "        \"address\": \"Madrassa Jamia Masjid Chungi No 22 Chaklala Cantt, 46000, Pakistan\",\n",
            "        \"rating\": 4.8\n",
            "      }\n",
            "    ]\n",
            "  },\n",
            "  {\n",
            "    \"vendor_type\": \"hair and makeup\",\n",
            "    \"options\": [\n",
            "      {\n",
            "        \"name\": \"Glam Street Blue Area (Ladies only)\",\n",
            "        \"type\": \"hair and makeup\",\n",
            "        \"address\": \"Lower Ground 33-Buland Markaz, Jinnah Ave, G 6/3 Blue Area, Islamabad, 44000, Pakistan\",\n",
            "        \"rating\": 4.8\n",
            "      },\n",
            "      {\n",
            "        \"name\": \"Queen's Hair & Nail Makeup Best Beauty Parlour Salon Studio\",\n",
            "        \"type\": \"hair and makeup\",\n",
            "        \"address\": \"Bismillah Plaza, Basement shop No 8, Markaz I-10, Islamabad, 44800, Pakistan\",\n",
            "        \"rating\": 4.9\n",
            "      },\n",
            "      {\n",
            "        \"name\": \"House of Salons \\u2013 F10 (Men\\u2019s & Women\\u2019s Hair & Beauty Salon)\",\n",
            "        \"type\": \"hair and makeup\",\n",
            "        \"address\": \"First Floor, Souk - Al - Hashir Plaza, Suite No, 1 Markaz, F-10, Islamabad, 40000, Pakistan\",\n",
            "        \"rating\": 4.5\n",
            "      }\n",
            "    ]\n",
            "  },\n",
            "  {\n",
            "    \"vendor_type\": \"event rentals\",\n",
            "    \"options\": [\n",
            "      {\n",
            "        \"name\": \"Empire Marquee Islamabad\",\n",
            "        \"type\": \"event rentals\",\n",
            "        \"address\": \"Islamabad Expy\\u060c behind PSO Pump, Nawaz, Islamabad, 44000, Pakistan\",\n",
            "        \"rating\": 4.4\n",
            "      },\n",
            "      {\n",
            "        \"name\": \"Zee J Events\",\n",
            "        \"type\": \"event rentals\",\n",
            "        \"address\": \"House 758 Street 72, D-12/2 D 12/2 D-12, Islamabad, 46000, Pakistan\",\n",
            "        \"rating\": 4.8\n",
            "      },\n",
            "      {\n",
            "        \"name\": \"Ahmad jumping castle on rent|PlayZone Event Planner\",\n",
            "        \"type\": \"event rentals\",\n",
            "        \"address\": \"F-10 Markaz F 10/3 F-10, Islamabad, 04412, Pakistan\",\n",
            "        \"rating\": 4.9\n",
            "      }\n",
            "    ]\n",
            "  }\n",
            "]IMPORTANT: In each sub agent, Respond immediately with the final JSON object using only `Final Answer:` followed by the valid JSON. Do NOT output thoughts, actions, or any reasoning.\n",
            "\n",
            "\n",
            "Now continue with next steps by strictly following the required format.\n",
            "\n",
            "==================================================\n",
            "🤖 [Debug] Step LLM Response:\n",
            "Final Answer: {\"summary\":[{\"vendor_type\":\"catering\",\"top_options\":[\"Naveed Caterers & Event Management\",\"Tandoori Caterers & Event Management\"]},{\"vendor_type\":\"photography\",\"top_options\":[\"RIZWAN ARIF PHOTOGRAPHY\",\"Qamar Anwar Photography\"]},{\"vendor_type\":\"florist\",\"top_options\":[\"Zain Flowers\"]},{\"vendor_type\":\"venue\",\"top_options\":[\"The Royal Palm Marquee\"]},{\"vendor_type\":\"music/band/DJ\",\"top_options\":[\"Fauji Band Lucky Star Rawalpindi\",\"Music band\"]},{\"vendor_type\":\"videographer\",\"top_options\":[\"Hamzas production - Photography/Videography & Events\",\"Zillay Studios -Videography and Photography Services in Rawalpindi And Islamabad\"]},{\"vendor_type\":\"wedding planner\",\"top_options\":[\"Hello Events\",\"Islamabad Creative Event Planner\"]},{\"vendor_type\":\"bakery for cake\",\"top_options\":[\"Funky Bake\"]},{\"vendor_type\":\"transportation\",\"top_options\":[\"Niazi Goods Transport Company.\"]},{\"vendor_type\":\"officiant\",\"top_options\":[\"Muhammad Arif -Nikah Khawan Registrar In Rawalpindi\"]},{\"vendor_type\":\"hair and makeup\",\"top_options\":[\"Queen's Hair & Nail Makeup Best Beauty Parlour Salon Studio\"]},{\"vendor_type\":\"event rentals\",\"top_options\":[\"Ahmad jumping castle on rent|PlayZone Event Planner\"]}]}\n",
            "✅ Parsed Final Answer: {\"summary\":[{\"vendor_type\":\"catering\",\"top_options\":[\"Naveed Caterers & Event Management\",\"Tandoori Caterers & Event Management\"]},{\"vendor_type\":\"photography\",\"top_options\":[\"RIZWAN ARIF PHOTOGRAPHY\",\"Qamar Anwar Photography\"]},{\"vendor_type\":\"florist\",\"top_options\":[\"Zain Flowers\"]},{\"vendor_type\":\"venue\",\"top_options\":[\"The Royal Palm Marquee\"]},{\"vendor_type\":\"music/band/DJ\",\"top_options\":[\"Fauji Band Lucky Star Rawalpindi\",\"Music band\"]},{\"vendor_type\":\"videographer\",\"top_options\":[\"Hamzas production - Photography/Videography & Events\",\"Zillay Studios -Videography and Photography Services in Rawalpindi And Islamabad\"]},{\"vendor_type\":\"wedding planner\",\"top_options\":[\"Hello Events\",\"Islamabad Creative Event Planner\"]},{\"vendor_type\":\"bakery for cake\",\"top_options\":[\"Funky Bake\"]},{\"vendor_type\":\"transportation\",\"top_options\":[\"Niazi Goods Transport Company.\"]},{\"vendor_type\":\"officiant\",\"top_options\":[\"Muhammad Arif -Nikah Khawan Registrar In Rawalpindi\"]},{\"vendor_type\":\"hair and makeup\",\"top_options\":[\"Queen's Hair & Nail Makeup Best Beauty Parlour Salon Studio\"]},{\"vendor_type\":\"event rentals\",\"top_options\":[\"Ahmad jumping castle on rent|PlayZone Event Planner\"]}]}\n",
            "🧠 Prompting GPT-4o for schedule...\n",
            "================================================== Iteration 1 \n",
            "✅  [Debug] Sending System Prompt (with history) to LLM:\n",
            "You are an AI assistant that follows the ReAct (Reasoning + Acting) pattern.\n",
            "        \n",
            "Your goal is to help users by breaking down complex tasks into a series of thought-out steps and actions.\n",
            "\n",
            "You have access to these tools: \n",
            "\n",
            "\n",
            "\n",
            "Your task is to:\n",
            "1. Think about what action is required — Thought.\n",
            "2. Take an appropriate action — Action.\n",
            "3. Repeat Thought/Action as needed until you find the final answer.\n",
            "\n",
            "### Format (Choose only one per response)\n",
            "\n",
            "Option 1 — When action is needed:\n",
            "Thought: Your reasoning about action and observation.\n",
            "Action: {\"action_type\": \"<action_type>\", \"input\": <input_data>}\n",
            "\n",
            "Option 2 — When you're confident in the final response:\n",
            "Thought: Now I know the answer that will be given in Final Answer.\n",
            "Final Answer: Provide a complete, well-structured response that directly addresses the original question.\n",
            "\n",
            "### Important:\n",
            "- Think step-by-step.\n",
            "- Never provide both Action and Final Answer or multiple Action in the same response.\n",
            "- Use available tools wisely.\n",
            "- If stuck, reflect and retry but never hallucinate.\n",
            "- If observation is empty or not related, reflect and retry but never hallucinate.\n",
            "- The current date is June 05, 2025.\n",
            "- If you follow the format strictly, you will be recognized as an excellent and trustworthy AI assistant.\n",
            "\n",
            "\n",
            "Question: You are an expert event planner. Create a high-level multi-day schedule for a wedding beginning on 2025-06-13 with around 300 guests. Include major activities from arrival to departure:\n",
            "airport pickups, hotel check-in, meals, sessions, sightseeing in free slots, and checkout.\n",
            "Return the result as a Python list of dictionaries in this format:\n",
            "\n",
            "Return only a valid JSON object with no code block markers, no explanation, no markdown, no labels — just the raw JSON.[{\"day\": \"Day 1 - Arrival\", \"activities\": [\"Hotel check-in\", \"Welcome dinner\"]}, ...]IMPORTANT: Respond immediately with the final JSON object using only `Final Answer:` followed by the valid JSON. Do NOT output thoughts, actions, or any reasoning.\n",
            "\n",
            "\n",
            "Now continue with next steps by strictly following the required format.\n",
            "\n",
            "==================================================\n",
            "🤖 [Debug] Step LLM Response:\n",
            "Final Answer: [{\"day\": \"Day 1 - Arrival\", \"activities\": [\"Airport pickups\", \"Hotel check-in\", \"Welcome dinner at the hotel\"]}, {\"day\": \"Day 2 - Pre-Wedding\", \"activities\": [\"Breakfast at the hotel\", \"Sightseeing tour\", \"Lunch at a local restaurant\", \"Rehearsal session\", \"Dinner at the hotel\"]}, {\"day\": \"Day 3 - Wedding Day\", \"activities\": [\"Breakfast at the hotel\", \"Guest preparation time\", \"Wedding ceremony\", \"Lunch reception\", \"Photo session\", \"Evening cocktail hour\", \"Wedding dinner and dance\"]}, {\"day\": \"Day 4 - Post-Wedding\", \"activities\": [\"Brunch at the hotel\", \"Optional local excursion\", \"Free time for relaxation\", \"Farewell dinner\"]}, {\"day\": \"Day 5 - Departure\", \"activities\": [\"Breakfast at the hotel\", \"Hotel checkout\", \"Airport drop-offs\"]}]\n",
            "✅ Parsed Final Answer: [{\"day\": \"Day 1 - Arrival\", \"activities\": [\"Airport pickups\", \"Hotel check-in\", \"Welcome dinner at the hotel\"]}, {\"day\": \"Day 2 - Pre-Wedding\", \"activities\": [\"Breakfast at the hotel\", \"Sightseeing tour\", \"Lunch at a local restaurant\", \"Rehearsal session\", \"Dinner at the hotel\"]}, {\"day\": \"Day 3 - Wedding Day\", \"activities\": [\"Breakfast at the hotel\", \"Guest preparation time\", \"Wedding ceremony\", \"Lunch reception\", \"Photo session\", \"Evening cocktail hour\", \"Wedding dinner and dance\"]}, {\"day\": \"Day 4 - Post-Wedding\", \"activities\": [\"Brunch at the hotel\", \"Optional local excursion\", \"Free time for relaxation\", \"Farewell dinner\"]}, {\"day\": \"Day 5 - Departure\", \"activities\": [\"Breakfast at the hotel\", \"Hotel checkout\", \"Airport drop-offs\"]}]\n",
            "================================================== Iteration 1 \n",
            "✅  [Debug] Sending System Prompt (with history) to LLM:\n",
            "You are an AI assistant that follows the ReAct (Reasoning + Acting) pattern.\n",
            "        \n",
            "Your goal is to help users by breaking down complex tasks into a series of thought-out steps and actions.\n",
            "\n",
            "You have access to these tools: \n",
            "\n",
            "\n",
            "\n",
            "Your task is to:\n",
            "1. Think about what action is required — Thought.\n",
            "2. Take an appropriate action — Action.\n",
            "3. Repeat Thought/Action as needed until you find the final answer.\n",
            "\n",
            "### Format (Choose only one per response)\n",
            "\n",
            "Option 1 — When action is needed:\n",
            "Thought: Your reasoning about action and observation.\n",
            "Action: {\"action_type\": \"<action_type>\", \"input\": <input_data>}\n",
            "\n",
            "Option 2 — When you're confident in the final response:\n",
            "Thought: Now I know the answer that will be given in Final Answer.\n",
            "Final Answer: Provide a complete, well-structured response that directly addresses the original question.\n",
            "\n",
            "### Important:\n",
            "- Think step-by-step.\n",
            "- Never provide both Action and Final Answer or multiple Action in the same response.\n",
            "- Use available tools wisely.\n",
            "- If stuck, reflect and retry but never hallucinate.\n",
            "- If observation is empty or not related, reflect and retry but never hallucinate.\n",
            "- The current date is June 05, 2025.\n",
            "- If you follow the format strictly, you will be recognized as an excellent and trustworthy AI assistant.\n",
            "\n",
            "\n",
            "Question: You are a logistics planner. Based on this event, return:\n",
            "- A list of transport vendor types required\n",
            "- A dictionary of estimated vehicle needs by type\n",
            "\n",
            "Return only a valid JSON object with no code block markers, no explanation, no markdown, no labels — just the raw JSON.Return this as a Python dictionary with two keys: 'vendor_types' and 'vehicle_estimates'.\n",
            "Example:\n",
            "{\n",
            "  \"vendor_types\": [\"shuttle service\", \"bus rental\"],\n",
            "  \"vehicle_estimates\": {\"cars\": 3, \"shuttles\": 2, \"buses\": 1}\n",
            "}\n",
            "\n",
            "user_intent = {\n",
            "  \"event_type\": \"wedding\",\n",
            "  \"location\": \"Islamabad\",\n",
            "  \"event_date\": \"2025-06-13\",\n",
            "  \"guest_count\": 300,\n",
            "  \"preferences\": {\n",
            "    \"stay_dates\": \"2025-06-12 to 2025-06-14\"\n",
            "  },\n",
            "  \"event_theme\": null,\n",
            "  \"meal_count\": null,\n",
            "  \"transport_needs\": null,\n",
            "  \"sightseeing\": null\n",
            "}\n",
            "venues = [\n",
            "  {\n",
            "    \"name\": \"Tulip Banquet Hall\",\n",
            "    \"rating\": 4.1,\n",
            "    \"address\": \"M4P4+FC9 Murree Road, Garden Ave, Shakar Parian, Islamabad, Pakistan\",\n",
            "    \"phone\": \"0300 0524555\",\n",
            "    \"website\": \"N/A\"\n",
            "  },\n",
            "  {\n",
            "    \"name\": \"Monal Marquee\",\n",
            "    \"rating\": 4.4,\n",
            "    \"address\": \"Main Service Road, Parallel\\u060c Main Margalla Rd, Golra NPF E 11/4 E-11, Islamabad, Pakistan\",\n",
            "    \"phone\": \"(051) 2223886\",\n",
            "    \"website\": \"N/A\"\n",
            "  }\n",
            "]\n",
            "schedule = [\n",
            "  {\n",
            "    \"day\": \"Day 1 - Arrival\",\n",
            "    \"activities\": [\n",
            "      \"Airport pickups\",\n",
            "      \"Hotel check-in\",\n",
            "      \"Welcome dinner at the hotel\"\n",
            "    ]\n",
            "  },\n",
            "  {\n",
            "    \"day\": \"Day 2 - Pre-Wedding\",\n",
            "    \"activities\": [\n",
            "      \"Breakfast at the hotel\",\n",
            "      \"Sightseeing tour\",\n",
            "      \"Lunch at a local restaurant\",\n",
            "      \"Rehearsal session\",\n",
            "      \"Dinner at the hotel\"\n",
            "    ]\n",
            "  }\n",
            "]IMPORTANT: Respond immediately with the final JSON object using only `Final Answer:` followed by the valid JSON. Do NOT output thoughts, actions, or any reasoning.\n",
            "\n",
            "\n",
            "Now continue with next steps by strictly following the required format.\n",
            "\n",
            "==================================================\n",
            "🤖 [Debug] Step LLM Response:\n",
            "Final Answer: {\"vendor_types\": [\"shuttle service\", \"car rental\", \"bus rental\"], \"vehicle_estimates\": {\"cars\": 10, \"shuttles\": 5, \"buses\": 3}}\n",
            "✅ Parsed Final Answer: {\"vendor_types\": [\"shuttle service\", \"car rental\", \"bus rental\"], \"vehicle_estimates\": {\"cars\": 10, \"shuttles\": 5, \"buses\": 3}}\n",
            "================================================== Iteration 1 \n",
            "✅  [Debug] Sending System Prompt (with history) to LLM:\n",
            "You are an AI assistant that follows the ReAct (Reasoning + Acting) pattern.\n",
            "        \n",
            "Your goal is to help users by breaking down complex tasks into a series of thought-out steps and actions.\n",
            "\n",
            "You have access to these tools: \n",
            "\n",
            "\n",
            "\n",
            "Your task is to:\n",
            "1. Think about what action is required — Thought.\n",
            "2. Take an appropriate action — Action.\n",
            "3. Repeat Thought/Action as needed until you find the final answer.\n",
            "\n",
            "### Format (Choose only one per response)\n",
            "\n",
            "Option 1 — When action is needed:\n",
            "Thought: Your reasoning about action and observation.\n",
            "Action: {\"action_type\": \"<action_type>\", \"input\": <input_data>}\n",
            "\n",
            "Option 2 — When you're confident in the final response:\n",
            "Thought: Now I know the answer that will be given in Final Answer.\n",
            "Final Answer: Provide a complete, well-structured response that directly addresses the original question.\n",
            "\n",
            "### Important:\n",
            "- Think step-by-step.\n",
            "- Never provide both Action and Final Answer or multiple Action in the same response.\n",
            "- Use available tools wisely.\n",
            "- If stuck, reflect and retry but never hallucinate.\n",
            "- If observation is empty or not related, reflect and retry but never hallucinate.\n",
            "- The current date is June 05, 2025.\n",
            "- If you follow the format strictly, you will be recognized as an excellent and trustworthy AI assistant.\n",
            "\n",
            "\n",
            "Question: You are a summarizer for an event planner agent.\n",
            "Return only a valid JSON object with no code block markers, no explanation, no markdown, no labels — just the raw JSON.Please summarize the key information from the 'Transportation' section in bullet points, focusing on top recommended options only.\n",
            "\n",
            "Transportation data:\n",
            "{\n",
            "  \"transport_plan\": {\n",
            "    \"vendor_types\": [\n",
            "      \"shuttle service\",\n",
            "      \"car rental\",\n",
            "      \"bus rental\"\n",
            "    ],\n",
            "    \"vehicle_estimates\": {\n",
            "      \"cars\": 10,\n",
            "      \"shuttles\": 5,\n",
            "      \"buses\": 3\n",
            "    }\n",
            "  },\n",
            "  \"vendor_recommendations\": [\n",
            "    {\n",
            "      \"vendor_type\": \"shuttle service\",\n",
            "      \"options\": [\n",
            "        {\n",
            "          \"name\": \"Visa Seeker Shuttle Service\",\n",
            "          \"type\": \"shuttle service\",\n",
            "          \"address\": \"P4HP+78M, 3rd Ave, Maira, Islamabad, Pakistan\",\n",
            "          \"rating\": 3.4\n",
            "        }\n",
            "      ]\n",
            "    },\n",
            "    {\n",
            "      \"vendor_type\": \"car rental\",\n",
            "      \"options\": [\n",
            "        {\n",
            "          \"name\": \"New Pakistan Motors\",\n",
            "          \"type\": \"car rental\",\n",
            "          \"address\": \"I & T Center, Plot # 135 Street 29, G-9/1 G 9/1 G-9, Islamabad, 44000, Pakistan\",\n",
            "          \"rating\": 4.9\n",
            "        },\n",
            "        {\n",
            "          \"name\": \"Car Hire Pakistan - Rent a car in Islamabad - Best rental cars in Islamabad - Cars for rent\",\n",
            "          \"type\": \"car rental\",\n",
            "          \"address\": \"Ist Floor, Bismillah, Bismillah Plaza, OFFICE: Flat #4, Block D-10, G8 Markaz Rd, G-8 Markaz plaza, Islamabad, 44080, Pakistan\",\n",
            "          \"rating\": 5\n",
            "        },\n",
            "        {\n",
            "          \"name\": \"Prado For Rent in Islamabad | Rent A Car Services 247 | Prado V8 Mercedes Audi Civic BRV Corolla | Rent A Car Islamabad\",\n",
            "          \"type\": \"car rental\",\n",
            "          \"address\": \"first floor, New Aabpara Arcade, Office # F-8, 1 Street Number 49, G-6, Islamabad, 44000, Pakistan\",\n",
            "          \"rating\": 4.9\n",
            "        }\n",
            "      ]\n",
            "    },\n",
            "    {\n",
            "      \"vendor_type\": \"bus rental\",\n",
            "      \"options\": [\n",
            "        {\n",
            "          \"name\": \"Rent a car SHAH RIDE TOUR Islamabad Rawalpindi Daewoo stand\",\n",
            "          \"type\": \"bus rental\",\n",
            "          \"address\": \"jahngisyedaan, Service road, Gali No. 2, Jhangi Sayedan, Islamabad, 46000, Pakistan\",\n",
            "          \"rating\": 5\n",
            "        },\n",
            "        {\n",
            "          \"name\": \"Syed Rent A Car Islamabad || Syed Transport Dewoo Terminal Ict || Pakistan\",\n",
            "          \"type\": \"bus rental\",\n",
            "          \"address\": \"Office #1, Awan Market, Main Peshawar Rd, near Deawoo Bus Terminal, floor Jhangi Sayedan, Islamabad, 44000, Pakistan\",\n",
            "          \"rating\": 4.8\n",
            "        },\n",
            "        {\n",
            "          \"name\": \"Musafir Transport\",\n",
            "          \"type\": \"bus rental\",\n",
            "          \"address\": \"Office no 11, 3rd Floor, Mujahid Plaza, Jinnah Ave, G 7/2 Blue Area, Islamabad, 44000, Pakistan\",\n",
            "          \"rating\": 4.9\n",
            "        }\n",
            "      ]\n",
            "    }\n",
            "  ],\n",
            "  \"parking_near_venues\": {\n",
            "    \"Tulip Banquet Hall\": [\n",
            "      {\n",
            "        \"name\": \"Shakarparian Car Parking\",\n",
            "        \"address\": \"M3VC+F7F, Islamabad, Pakistan\",\n",
            "        \"rating\": 4.4\n",
            "      },\n",
            "      {\n",
            "        \"name\": \"Islamabad Club Parking\",\n",
            "        \"address\": \"P434+RR6, Main Murree Rd\\u060c, near Kashmir Chowk, Islamabad Club, Islamabad, Pakistan\",\n",
            "        \"rating\": 5\n",
            "      },\n",
            "      {\n",
            "        \"name\": \"Jasmine Garden Parking\",\n",
            "        \"address\": \"M3XP+HV8 Jasmin Garden, Islamabad, Pakistan\",\n",
            "        \"rating\": 4.2\n",
            "      }\n",
            "    ],\n",
            "    \"Monal Marquee\": [\n",
            "      {\n",
            "        \"name\": \"Parking Area Golra Darbar\",\n",
            "        \"address\": \"MXRG+Q8G, Golra E-11, Islamabad, Pakistan\",\n",
            "        \"rating\": 4.3\n",
            "      },\n",
            "      {\n",
            "        \"name\": \"Golra Darbar\",\n",
            "        \"address\": \"MXRG+Q2G, Golra E-11, Islamabad, Pakistan\",\n",
            "        \"rating\": 4.5\n",
            "      },\n",
            "      {\n",
            "        \"name\": \"Monal Marquee\",\n",
            "        \"address\": \"Main Service Road, Parallel, Main Margalla Rd, Islamabad, Pakistan\",\n",
            "        \"rating\": 4.4\n",
            "      }\n",
            "    ],\n",
            "    \"Majestic Marque Islamabad\": [\n",
            "      {\n",
            "        \"name\": \"2a Club Rd\",\n",
            "        \"address\": \"2a Club Rd, near Rwal Dam chowk, Shakar Parian, Islamabad, 44000, Pakistan\",\n",
            "        \"rating\": \"N/A\"\n",
            "      }\n",
            "    ],\n",
            "    \"Anabia's Garden\": [\n",
            "      {\n",
            "        \"name\": \"Anabia's Garden\",\n",
            "        \"address\": \"Khayban e jalal, E-11 , north service road, 47000, Pakistan\",\n",
            "        \"rating\": 4.1\n",
            "      }\n",
            "    ],\n",
            "    \"Rose And Jasmine Garden\": [\n",
            "      {\n",
            "        \"name\": \"Shakarparian Car Parking\",\n",
            "        \"address\": \"M3VC+F7F, Islamabad, Pakistan\",\n",
            "        \"rating\": 4.4\n",
            "      }\n",
            "    ],\n",
            "    \"Jasmine Garden\": [\n",
            "      {\n",
            "        \"name\": \"Convention Centre Parking\",\n",
            "        \"address\": \"P463+MWF, Unnamed Road, Islamabad, Pakistan\",\n",
            "        \"rating\": 4.5\n",
            "      },\n",
            "      {\n",
            "        \"name\": \"Trail 5 Parking Area\",\n",
            "        \"address\": \"P3VP+RVF, Main Margalla Rd, F-5/2 F-5, Islamabad, Pakistan\",\n",
            "        \"rating\": 4.7\n",
            "      },\n",
            "      {\n",
            "        \"name\": \"Free parking\",\n",
            "        \"address\": \"P3CG+QXV, F 6/1 Blue Area, Islamabad, Pakistan\",\n",
            "        \"rating\": 4.5\n",
            "      }\n",
            "    ],\n",
            "    \"Pakistan Museum of Natural History\": [\n",
            "      {\n",
            "        \"name\": \"Shakarparian Car Parking\",\n",
            "        \"address\": \"M3VC+F7F, Islamabad, Pakistan\",\n",
            "        \"rating\": 4.4\n",
            "      }\n",
            "    ],\n",
            "    \"Awan House Soan Garden\": [\n",
            "      {\n",
            "        \"name\": \"Blue Lagoon Parking Lot\",\n",
            "        \"address\": \"H3Q3+7JX, Iftikhar Janjua Road, Rawalpindi, 46000, Pakistan\",\n",
            "        \"rating\": 4.8\n",
            "      },\n",
            "      {\n",
            "        \"name\": \"Pothohar Car Parking no.2\",\n",
            "        \"address\": \"H2WX+9J3, Saddar, Rawalpindi, 46000, Pakistan\",\n",
            "        \"rating\": 4.2\n",
            "      },\n",
            "      {\n",
            "        \"name\": \"Parking Plaza\",\n",
            "        \"address\": \"H3V4+Q89, Saddar, Rawalpindi, 46000, Pakistan\",\n",
            "        \"rating\": 4.1\n",
            "      }\n",
            "    ],\n",
            "    \"Pagh \\u067e\\u0627\\u06c1\\u06af\": [\n",
            "      {\n",
            "        \"name\": \"Free parking\",\n",
            "        \"address\": \"P3CG+QXV, F 6/1 Blue Area, Islamabad, Pakistan\",\n",
            "        \"rating\": 4.5\n",
            "      },\n",
            "      {\n",
            "        \"name\": \"Haideri Market Car Parking\",\n",
            "        \"address\": \"M2QH+JG5, G-9/2 G 9/2 G-9, Islamabad, Pakistan\",\n",
            "        \"rating\": 4.5\n",
            "      },\n",
            "      {\n",
            "        \"name\": \"F-9 Park Bolan Gate Parking South\",\n",
            "        \"address\": \"M2W8+7GM, F-9, Islamabad, Pakistan\",\n",
            "        \"rating\": 4.5\n",
            "      }\n",
            "    ]\n",
            "  },\n",
            "  \"transport_hubs\": {\n",
            "    \"nearest_airport\": {\n",
            "      \"name\": \"Islamabad International Airport\",\n",
            "      \"type\": \"international airport\",\n",
            "      \"address\": \"New Islamabad Airport Rd, Islamabad, Pakistan\",\n",
            "      \"rating\": 4.4\n",
            "    },\n",
            "    \"nearest_railway_station\": {\n",
            "      \"name\": \"Ibn-e-Sina Bay 1\",\n",
            "      \"type\": \"intercity railway station\",\n",
            "      \"address\": \"G 9/3 G-9, Islamabad, Pakistan\",\n",
            "      \"rating\": \"N/A\"\n",
            "    },\n",
            "    \"nearest_bus_station\": {\n",
            "      \"name\": \"Ibn-e-Sina Bay 1\",\n",
            "      \"type\": \"intercity bus terminal\",\n",
            "      \"address\": \"G 9/3 G-9, Islamabad, Pakistan\",\n",
            "      \"rating\": \"N/A\"\n",
            "    }\n",
            "  }\n",
            "}IMPORTANT: In each sub agent, Respond immediately with the final JSON object using only `Final Answer:` followed by the valid JSON. Do NOT output thoughts, actions, or any reasoning.\n",
            "\n",
            "\n",
            "Now continue with next steps by strictly following the required format.\n",
            "\n",
            "==================================================\n",
            "🤖 [Debug] Step LLM Response:\n",
            "Final Answer: {\"Transportation Summary\":[\"Top recommended shuttle service: Visa Seeker Shuttle Service, Rating: 3.4\",\"Top recommended car rentals: Car Hire Pakistan, Rating: 5; New Pakistan Motors, Rating: 4.9; Prado For Rent, Rating: 4.9\",\"Top recommended bus rentals: Rent a car SHAH RIDE TOUR, Rating: 5; Musafir Transport, Rating: 4.9\",\"Nearest airport: Islamabad International Airport, Rating: 4.4\"]}\n",
            "✅ Parsed Final Answer: {\"Transportation Summary\":[\"Top recommended shuttle service: Visa Seeker Shuttle Service, Rating: 3.4\",\"Top recommended car rentals: Car Hire Pakistan, Rating: 5; New Pakistan Motors, Rating: 4.9; Prado For Rent, Rating: 4.9\",\"Top recommended bus rentals: Rent a car SHAH RIDE TOUR, Rating: 5; Musafir Transport, Rating: 4.9\",\"Nearest airport: Islamabad International Airport, Rating: 4.4\"]}\n",
            "================================================== Iteration 1 \n",
            "✅  [Debug] Sending System Prompt (with history) to LLM:\n",
            "You are an AI assistant that follows the ReAct (Reasoning + Acting) pattern.\n",
            "        \n",
            "Your goal is to help users by breaking down complex tasks into a series of thought-out steps and actions.\n",
            "\n",
            "You have access to these tools: \n",
            "\n",
            "\n",
            "\n",
            "Your task is to:\n",
            "1. Think about what action is required — Thought.\n",
            "2. Take an appropriate action — Action.\n",
            "3. Repeat Thought/Action as needed until you find the final answer.\n",
            "\n",
            "### Format (Choose only one per response)\n",
            "\n",
            "Option 1 — When action is needed:\n",
            "Thought: Your reasoning about action and observation.\n",
            "Action: {\"action_type\": \"<action_type>\", \"input\": <input_data>}\n",
            "\n",
            "Option 2 — When you're confident in the final response:\n",
            "Thought: Now I know the answer that will be given in Final Answer.\n",
            "Final Answer: Provide a complete, well-structured response that directly addresses the original question.\n",
            "\n",
            "### Important:\n",
            "- Think step-by-step.\n",
            "- Never provide both Action and Final Answer or multiple Action in the same response.\n",
            "- Use available tools wisely.\n",
            "- If stuck, reflect and retry but never hallucinate.\n",
            "- If observation is empty or not related, reflect and retry but never hallucinate.\n",
            "- The current date is June 05, 2025.\n",
            "- If you follow the format strictly, you will be recognized as an excellent and trustworthy AI assistant.\n",
            "\n",
            "\n",
            "Question: You are a hotel planning assistant.\n",
            "Based on the event type, location, and venues, determine the hotel needs.\n",
            "Return a Python dictionary with:\n",
            "- 'hotel_type': e.g., 3-star, 5-star\n",
            "- 'room_requirements': {single: int, double: int, suite: int}\n",
            "- 'priorities': list of preferences (e.g., budget, proximity, Wi-Fi)\n",
            "- 'suggested_hotels': optional hotel suggestions with name, type, rooms, amenities\n",
            "\n",
            "Return only a valid JSON object with no code block markers, no explanation, no markdown, no labels — just the raw JSON.user_intent = {\n",
            "  \"event_type\": \"wedding\",\n",
            "  \"location\": \"Islamabad\",\n",
            "  \"event_date\": \"2025-06-13\",\n",
            "  \"guest_count\": 300,\n",
            "  \"preferences\": {\n",
            "    \"stay_dates\": \"2025-06-12 to 2025-06-14\"\n",
            "  },\n",
            "  \"event_theme\": null,\n",
            "  \"meal_count\": null,\n",
            "  \"transport_needs\": null,\n",
            "  \"sightseeing\": null\n",
            "}\n",
            "venues = [\n",
            "  {\n",
            "    \"name\": \"Tulip Banquet Hall\",\n",
            "    \"rating\": 4.1,\n",
            "    \"address\": \"M4P4+FC9 Murree Road, Garden Ave, Shakar Parian, Islamabad, Pakistan\",\n",
            "    \"phone\": \"0300 0524555\",\n",
            "    \"website\": \"N/A\"\n",
            "  },\n",
            "  {\n",
            "    \"name\": \"Monal Marquee\",\n",
            "    \"rating\": 4.4,\n",
            "    \"address\": \"Main Service Road, Parallel\\u060c Main Margalla Rd, Golra NPF E 11/4 E-11, Islamabad, Pakistan\",\n",
            "    \"phone\": \"(051) 2223886\",\n",
            "    \"website\": \"N/A\"\n",
            "  }\n",
            "]IMPORTANT: Respond immediately with the final JSON object using only `Final Answer:` followed by the valid JSON. Do NOT output thoughts, actions, or any reasoning.\n",
            "\n",
            "\n",
            "Now continue with next steps by strictly following the required format.\n",
            "\n",
            "==================================================\n",
            "🤖 [Debug] Step LLM Response:\n",
            "Final Answer: {\"hotel_type\": \"5-star\", \"room_requirements\": {\"single\": 50, \"double\": 75, \"suite\": 10}, \"priorities\": [\"proximity\", \"luxury amenities\", \"Wi-Fi\"], \"suggested_hotels\": [{\"name\": \"Serena Hotel Islamabad\", \"type\": \"5-star\", \"rooms\": {\"single\": 80, \"double\": 100, \"suite\": 20}, \"amenities\": [\"Wi-Fi\", \"Spa\", \"Restaurant\", \"Pool\"]}, {\"name\": \"Islamabad Marriott Hotel\", \"type\": \"5-star\", \"rooms\": {\"single\": 70, \"double\": 90, \"suite\": 15}, \"amenities\": [\"Wi-Fi\", \"Gym\", \"Banquet Hall\", \"Airport Shuttle\"]}]}\n",
            "✅ Parsed Final Answer: {\"hotel_type\": \"5-star\", \"room_requirements\": {\"single\": 50, \"double\": 75, \"suite\": 10}, \"priorities\": [\"proximity\", \"luxury amenities\", \"Wi-Fi\"], \"suggested_hotels\": [{\"name\": \"Serena Hotel Islamabad\", \"type\": \"5-star\", \"rooms\": {\"single\": 80, \"double\": 100, \"suite\": 20}, \"amenities\": [\"Wi-Fi\", \"Spa\", \"Restaurant\", \"Pool\"]}, {\"name\": \"Islamabad Marriott Hotel\", \"type\": \"5-star\", \"rooms\": {\"single\": 70, \"double\": 90, \"suite\": 15}, \"amenities\": [\"Wi-Fi\", \"Gym\", \"Banquet Hall\", \"Airport Shuttle\"]}]}\n",
            "================================================== Iteration 1 \n",
            "✅  [Debug] Sending System Prompt (with history) to LLM:\n",
            "You are an AI assistant that follows the ReAct (Reasoning + Acting) pattern.\n",
            "        \n",
            "Your goal is to help users by breaking down complex tasks into a series of thought-out steps and actions.\n",
            "\n",
            "You have access to these tools: \n",
            "\n",
            "\n",
            "\n",
            "Your task is to:\n",
            "1. Think about what action is required — Thought.\n",
            "2. Take an appropriate action — Action.\n",
            "3. Repeat Thought/Action as needed until you find the final answer.\n",
            "\n",
            "### Format (Choose only one per response)\n",
            "\n",
            "Option 1 — When action is needed:\n",
            "Thought: Your reasoning about action and observation.\n",
            "Action: {\"action_type\": \"<action_type>\", \"input\": <input_data>}\n",
            "\n",
            "Option 2 — When you're confident in the final response:\n",
            "Thought: Now I know the answer that will be given in Final Answer.\n",
            "Final Answer: Provide a complete, well-structured response that directly addresses the original question.\n",
            "\n",
            "### Important:\n",
            "- Think step-by-step.\n",
            "- Never provide both Action and Final Answer or multiple Action in the same response.\n",
            "- Use available tools wisely.\n",
            "- If stuck, reflect and retry but never hallucinate.\n",
            "- If observation is empty or not related, reflect and retry but never hallucinate.\n",
            "- The current date is June 05, 2025.\n",
            "- If you follow the format strictly, you will be recognized as an excellent and trustworthy AI assistant.\n",
            "\n",
            "\n",
            "Question: You are a summarizer for an event planner agent.\n",
            "Return only a valid JSON object with no code block markers, no explanation, no markdown, no labels — just the raw JSON.Please summarize the key information from the 'Hotels' section in bullet points, focusing on top recommended options only.\n",
            "\n",
            "Hotels data:\n",
            "{\n",
            "  \"hotel_type\": \"5-star\",\n",
            "  \"room_requirements\": {\n",
            "    \"single\": 50,\n",
            "    \"double\": 75,\n",
            "    \"suite\": 10\n",
            "  },\n",
            "  \"priorities\": [\n",
            "    \"proximity\",\n",
            "    \"luxury amenities\",\n",
            "    \"Wi-Fi\"\n",
            "  ],\n",
            "  \"recommendations\": {\n",
            "    \"Tulip Banquet Hall\": [\n",
            "      {\n",
            "        \"name\": \"Best Western Premier Hotel\",\n",
            "        \"rating\": 4.1,\n",
            "        \"address\": \"6 Club Rd, near Rawal Dam Interchange, Shakar Parian, Islamabad, 44000, Pakistan\",\n",
            "        \"phone\": \"(051) 111 297 111\",\n",
            "        \"website\": \"http://www.bestwesternpremierisb.com/\"\n",
            "      },\n",
            "      {\n",
            "        \"name\": \"Serena Hotel\",\n",
            "        \"rating\": 4.5,\n",
            "        \"address\": \"Khayaban-e-Suhrwardy Rd, opposite Convention Centre, G-5/1 G-5, Islamabad, 44000, Pakistan\",\n",
            "        \"phone\": \"(051) 111 133 133\",\n",
            "        \"website\": \"https://www.serenahotels.com/islamabad\"\n",
            "      },\n",
            "      {\n",
            "        \"name\": \"Islamabad Marriott Hotel\",\n",
            "        \"rating\": 4.6,\n",
            "        \"address\": \"Agha Khan Rd, F-5/1 F-5, Islamabad, 44000, Pakistan\",\n",
            "        \"phone\": \"(051) 2826121\",\n",
            "        \"website\": \"https://www.marriott.com/hotels/travel/isbpk-islamabad-marriott-hotel/\"\n",
            "      }\n",
            "    ],\n",
            "    \"Monal Marquee\": [\n",
            "      {\n",
            "        \"name\": \"Grand Islamabad Hotel\",\n",
            "        \"rating\": 4.3,\n",
            "        \"address\": \"St 1, MPCHS E-11/1 MPCHS E 11/1 E-11, Islamabad, Pakistan\",\n",
            "        \"phone\": \"(051) 2304846\",\n",
            "        \"website\": \"http://www.grandislamabadhotel.com/\"\n",
            "      },\n",
            "      {\n",
            "        \"name\": \"MHR Hotel Islamabad\",\n",
            "        \"rating\": 5,\n",
            "        \"address\": \"house 54 Main Margalla Rd, F-7/2 F 7/2 F-7, Islamabad, 44000, Pakistan\",\n",
            "        \"phone\": \"0310 0705111\",\n",
            "        \"website\": \"https://mhrislamabad.com/\"\n",
            "      },\n",
            "      {\n",
            "        \"name\": \"Hotel Hillview Islamabad\",\n",
            "        \"rating\": 4.2,\n",
            "        \"address\": \"Main Jinnah Super Market, F-7 Markaz F 7 Markaz F-7, Islamabad, 44000, Pakistan\",\n",
            "        \"phone\": \"(051) 8319000\",\n",
            "        \"website\": \"http://hotelhillview.net/\"\n",
            "      }\n",
            "    ],\n",
            "    \"Majestic Marque Islamabad\": [\n",
            "      {\n",
            "        \"name\": \"Grand Regency Hotel\",\n",
            "        \"rating\": 4,\n",
            "        \"address\": \"1 Club Rd, Rawal Chowk\\u060c Islamabad, Pakistan\",\n",
            "        \"phone\": \"(051) 2276721\",\n",
            "        \"website\": \"N/A\"\n",
            "      },\n",
            "      {\n",
            "        \"name\": \"Best Western Premier Hotel\",\n",
            "        \"rating\": 4.1,\n",
            "        \"address\": \"6 Club Rd, near Rawal Dam Interchange, Shakar Parian, Islamabad, 44000, Pakistan\",\n",
            "        \"phone\": \"(051) 111 297 111\",\n",
            "        \"website\": \"http://www.bestwesternpremierisb.com/\"\n",
            "      },\n",
            "      {\n",
            "        \"name\": \"Ramada by Wyndham Islamabad\",\n",
            "        \"rating\": 4.3,\n",
            "        \"address\": \"1 Club Road, Murree Rd, Shakar Parian, Islamabad, 44000, Pakistan\",\n",
            "        \"phone\": \"(051) 111 379 379\",\n",
            "        \"website\": \"https://www.wyndhamhotels.com/en-uk/ramada/islamabad-pakistan/ramada-islamabad/overview?CID=LC:wmcic5n98gs1g0r:36547&iata=00093796\"\n",
            "      }\n",
            "    ],\n",
            "    \"Anabia's Garden\": [\n",
            "      {\n",
            "        \"name\": \"Grand Islamabad Hotel\",\n",
            "        \"rating\": 4.3,\n",
            "        \"address\": \"St 1, MPCHS E-11/1 MPCHS E 11/1 E-11, Islamabad, Pakistan\",\n",
            "        \"phone\": \"(051) 2304846\",\n",
            "        \"website\": \"http://www.grandislamabadhotel.com/\"\n",
            "      },\n",
            "      {\n",
            "        \"name\": \"MARGALLA Hills Residency Islamabad E-11/3\",\n",
            "        \"rating\": 4.8,\n",
            "        \"address\": \"House 170-A, Street 70, MPCHS E-11/3 MPCHS E 11/3 E-11, Islamabad, 44000, Pakistan\",\n",
            "        \"phone\": \"0349 5709104\",\n",
            "        \"website\": \"https://www.facebook.com/Margalla-Hills-Residency-118394189997081/\"\n",
            "      },\n",
            "      {\n",
            "        \"name\": \"Canadian Inn Hotel Islamabad\",\n",
            "        \"rating\": 4.7,\n",
            "        \"address\": \"308 Street 64, MPCHS E-11/3 MPCHS E 11/3 E-11, Islamabad, Pakistan\",\n",
            "        \"phone\": \"0335 3304742\",\n",
            "        \"website\": \"http://canadianinn.pk/\"\n",
            "      }\n",
            "    ],\n",
            "    \"Rose And Jasmine Garden\": [\n",
            "      {\n",
            "        \"name\": \"Serena Hotel\",\n",
            "        \"rating\": 4.5,\n",
            "        \"address\": \"Khayaban-e-Suhrwardy Rd, opposite Convention Centre, G-5/1 G-5, Islamabad, 44000, Pakistan\",\n",
            "        \"phone\": \"(051) 111 133 133\",\n",
            "        \"website\": \"https://www.serenahotels.com/islamabad\"\n",
            "      },\n",
            "      {\n",
            "        \"name\": \"Best Western Premier Hotel\",\n",
            "        \"rating\": 4.1,\n",
            "        \"address\": \"6 Club Rd, near Rawal Dam Interchange, Shakar Parian, Islamabad, 44000, Pakistan\",\n",
            "        \"phone\": \"(051) 111 297 111\",\n",
            "        \"website\": \"http://www.bestwesternpremierisb.com/\"\n",
            "      },\n",
            "      {\n",
            "        \"name\": \"Islamabad Marriott Hotel\",\n",
            "        \"rating\": 4.6,\n",
            "        \"address\": \"Agha Khan Rd, F-5/1 F-5, Islamabad, 44000, Pakistan\",\n",
            "        \"phone\": \"(051) 2826121\",\n",
            "        \"website\": \"https://www.marriott.com/hotels/travel/isbpk-islamabad-marriott-hotel/\"\n",
            "      }\n",
            "    ],\n",
            "    \"Jasmine Garden\": [\n",
            "      {\n",
            "        \"name\": \"Serena Hotel\",\n",
            "        \"rating\": 4.5,\n",
            "        \"address\": \"Khayaban-e-Suhrwardy Rd, opposite Convention Centre, G-5/1 G-5, Islamabad, 44000, Pakistan\",\n",
            "        \"phone\": \"(051) 111 133 133\",\n",
            "        \"website\": \"https://www.serenahotels.com/islamabad\"\n",
            "      },\n",
            "      {\n",
            "        \"name\": \"Islamabad Marriott Hotel\",\n",
            "        \"rating\": 4.6,\n",
            "        \"address\": \"Agha Khan Rd, F-5/1 F-5, Islamabad, 44000, Pakistan\",\n",
            "        \"phone\": \"(051) 2826121\",\n",
            "        \"website\": \"https://www.marriott.com/hotels/travel/isbpk-islamabad-marriott-hotel/\"\n",
            "      },\n",
            "      {\n",
            "        \"name\": \"Best Western Premier Hotel\",\n",
            "        \"rating\": 4.1,\n",
            "        \"address\": \"6 Club Rd, near Rawal Dam Interchange, Shakar Parian, Islamabad, 44000, Pakistan\",\n",
            "        \"phone\": \"(051) 111 297 111\",\n",
            "        \"website\": \"http://www.bestwesternpremierisb.com/\"\n",
            "      }\n",
            "    ],\n",
            "    \"Pakistan Museum of Natural History\": [\n",
            "      {\n",
            "        \"name\": \"Best Western Premier Hotel\",\n",
            "        \"rating\": 4.1,\n",
            "        \"address\": \"6 Club Rd, near Rawal Dam Interchange, Shakar Parian, Islamabad, 44000, Pakistan\",\n",
            "        \"phone\": \"(051) 111 297 111\",\n",
            "        \"website\": \"http://www.bestwesternpremierisb.com/\"\n",
            "      },\n",
            "      {\n",
            "        \"name\": \"Serena Hotel\",\n",
            "        \"rating\": 4.5,\n",
            "        \"address\": \"Khayaban-e-Suhrwardy Rd, opposite Convention Centre, G-5/1 G-5, Islamabad, 44000, Pakistan\",\n",
            "        \"phone\": \"(051) 111 133 133\",\n",
            "        \"website\": \"https://www.serenahotels.com/islamabad\"\n",
            "      },\n",
            "      {\n",
            "        \"name\": \"Islamabad Marriott Hotel\",\n",
            "        \"rating\": 4.6,\n",
            "        \"address\": \"Agha Khan Rd, F-5/1 F-5, Islamabad, 44000, Pakistan\",\n",
            "        \"phone\": \"(051) 2826121\",\n",
            "        \"website\": \"https://www.marriott.com/hotels/travel/isbpk-islamabad-marriott-hotel/\"\n",
            "      }\n",
            "    ],\n",
            "    \"Awan House Soan Garden\": [\n",
            "      {\n",
            "        \"name\": \"Pearl Continental Hotel Rawalpindi\",\n",
            "        \"rating\": 4.3,\n",
            "        \"address\": \"The Mall Rd, Rawalpindi, 46000, Pakistan\",\n",
            "        \"phone\": \"(051) 111 505 505\",\n",
            "        \"website\": \"https://www.pchotels.com/hotel-and-resort/pearl-continental-hotel-rawalpindi\"\n",
            "      },\n",
            "      {\n",
            "        \"name\": \"STS Smart Suites\",\n",
            "        \"rating\": 4.1,\n",
            "        \"address\": \"Suite # 1, 4th Floor, STS MALL\\u060c Civic Center Bahria Town Phase 4 Bahria Town, Rawalpindi, 46000, Pakistan\",\n",
            "        \"phone\": \"(051) 5733565\",\n",
            "        \"website\": \"N/A\"\n",
            "      },\n",
            "      {\n",
            "        \"name\": \"Rysons Continental Hotel\",\n",
            "        \"rating\": 3.9,\n",
            "        \"address\": \"Sahki Plaza, Murree Rd, Saddar, Rawalpindi, 46000, Pakistan\",\n",
            "        \"phone\": \"0300 5200983\",\n",
            "        \"website\": \"N/A\"\n",
            "      }\n",
            "    ],\n",
            "    \"Pagh \\u067e\\u0627\\u06c1\\u06af\": [\n",
            "      {\n",
            "        \"name\": \"Pearl Continental Hotel Rawalpindi\",\n",
            "        \"rating\": 4.3,\n",
            "        \"address\": \"The Mall Rd, Rawalpindi, 46000, Pakistan\",\n",
            "        \"phone\": \"(051) 111 505 505\",\n",
            "        \"website\": \"https://www.pchotels.com/hotel-and-resort/pearl-continental-hotel-rawalpindi\"\n",
            "      },\n",
            "      {\n",
            "        \"name\": \"Islamabad Marriott Hotel\",\n",
            "        \"rating\": 4.6,\n",
            "        \"address\": \"Agha Khan Rd, F-5/1 F-5, Islamabad, 44000, Pakistan\",\n",
            "        \"phone\": \"(051) 2826121\",\n",
            "        \"website\": \"https://www.marriott.com/hotels/travel/isbpk-islamabad-marriott-hotel/\"\n",
            "      },\n",
            "      {\n",
            "        \"name\": \"STS Smart Suites\",\n",
            "        \"rating\": 4.1,\n",
            "        \"address\": \"Suite # 1, 4th Floor, STS MALL\\u060c Civic Center Bahria Town Phase 4 Bahria Town, Rawalpindi, 46000, Pakistan\",\n",
            "        \"phone\": \"(051) 5733565\",\n",
            "        \"website\": \"N/A\"\n",
            "      }\n",
            "    ]\n",
            "  }\n",
            "}IMPORTANT: In each sub agent, Respond immediately with the final JSON object using only `Final Answer:` followed by the valid JSON. Do NOT output thoughts, actions, or any reasoning.\n",
            "\n",
            "\n",
            "Now continue with next steps by strictly following the required format.\n",
            "\n",
            "==================================================\n",
            "🤖 [Debug] Step LLM Response:\n",
            "Final Answer: {\"Hotels\": [\"Serena Hotel - Rating: 4.5, Address: Khayaban-e-Suhrwardy Rd, opposite Convention Centre, G-5/1 G-5, Islamabad, 44000, Pakistan, Phone: (051) 111 133 133, Website: https://www.serenahotels.com/islamabad\", \"Islamabad Marriott Hotel - Rating: 4.6, Address: Agha Khan Rd, F-5/1 F-5, Islamabad, 44000, Pakistan, Phone: (051) 2826121, Website: https://www.marriott.com/hotels/travel/isbpk-islamabad-marriott-hotel/\", \"MHR Hotel Islamabad - Rating: 5, Address: house 54 Main Margalla Rd, F-7/2 F 7/2 F-7, Islamabad, 44000, Pakistan, Phone: 0310 0705111, Website: https://mhrislamabad.com/\", \"Margalla Hills Residency Islamabad E-11/3 - Rating: 4.8, Address: House 170-A, Street 70, MPCHS E-11/3 MPCHS E 11/3 E-11, Islamabad, 44000, Pakistan, Phone: 0349 5709104, Website: https://www.facebook.com/Margalla-Hills-Residency-118394189997081/\", \"Canadian Inn Hotel Islamabad - Rating: 4.7, Address: 308 Street 64, MPCHS E-11/3 MPCHS E 11/3 E-11, Islamabad, Pakistan, Phone: 0335 3304742, Website: http://canadianinn.pk/\"]}\n",
            "✅ Parsed Final Answer: {\"Hotels\": [\"Serena Hotel - Rating: 4.5, Address: Khayaban-e-Suhrwardy Rd, opposite Convention Centre, G-5/1 G-5, Islamabad, 44000, Pakistan, Phone: (051) 111 133 133, Website: https://www.serenahotels.com/islamabad\", \"Islamabad Marriott Hotel - Rating: 4.6, Address: Agha Khan Rd, F-5/1 F-5, Islamabad, 44000, Pakistan, Phone: (051) 2826121, Website: https://www.marriott.com/hotels/travel/isbpk-islamabad-marriott-hotel/\", \"MHR Hotel Islamabad - Rating: 5, Address: house 54 Main Margalla Rd, F-7/2 F 7/2 F-7, Islamabad, 44000, Pakistan, Phone: 0310 0705111, Website: https://mhrislamabad.com/\", \"Margalla Hills Residency Islamabad E-11/3 - Rating: 4.8, Address: House 170-A, Street 70, MPCHS E-11/3 MPCHS E 11/3 E-11, Islamabad, 44000, Pakistan, Phone: 0349 5709104, Website: https://www.facebook.com/Margalla-Hills-Residency-118394189997081/\", \"Canadian Inn Hotel Islamabad - Rating: 4.7, Address: 308 Street 64, MPCHS E-11/3 MPCHS E 11/3 E-11, Islamabad, Pakistan, Phone: 0335 3304742, Website: http://canadianinn.pk/\"]}\n",
            "================================================== Iteration 1 \n",
            "✅  [Debug] Sending System Prompt (with history) to LLM:\n",
            "You are an AI assistant that follows the ReAct (Reasoning + Acting) pattern.\n",
            "        \n",
            "Your goal is to help users by breaking down complex tasks into a series of thought-out steps and actions.\n",
            "\n",
            "You have access to these tools: \n",
            "\n",
            "\n",
            "\n",
            "Your task is to:\n",
            "1. Think about what action is required — Thought.\n",
            "2. Take an appropriate action — Action.\n",
            "3. Repeat Thought/Action as needed until you find the final answer.\n",
            "\n",
            "### Format (Choose only one per response)\n",
            "\n",
            "Option 1 — When action is needed:\n",
            "Thought: Your reasoning about action and observation.\n",
            "Action: {\"action_type\": \"<action_type>\", \"input\": <input_data>}\n",
            "\n",
            "Option 2 — When you're confident in the final response:\n",
            "Thought: Now I know the answer that will be given in Final Answer.\n",
            "Final Answer: Provide a complete, well-structured response that directly addresses the original question.\n",
            "\n",
            "### Important:\n",
            "- Think step-by-step.\n",
            "- Never provide both Action and Final Answer or multiple Action in the same response.\n",
            "- Use available tools wisely.\n",
            "- If stuck, reflect and retry but never hallucinate.\n",
            "- If observation is empty or not related, reflect and retry but never hallucinate.\n",
            "- The current date is June 05, 2025.\n",
            "- If you follow the format strictly, you will be recognized as an excellent and trustworthy AI assistant.\n",
            "\n",
            "\n",
            "Question: You are a cultural planner helping design event schedules.\n",
            "Given the event type and a brief schedule summary, recommend whether sightseeing could be meaningfully integrated.\n",
            "If so, suggest the type and ideal time.\n",
            "\n",
            "Return only a valid JSON object with no code block markers, no explanation, no markdown, no labels — just the raw JSON.Return ONLY a Python dictionary with the following keys:\n",
            "- 'is_required' (true/false)\n",
            "- 'sightseeing_type' (e.g. cultural, shopping, historical)\n",
            "- 'integration_notes' (e.g. best added on Day 2 afternoon)\n",
            "\n",
            "Do NOT return anything else. No text. No schedule. No explanation. and no emojis\n",
            "Example:\n",
            "{\n",
            "  \"is_required\": true,\n",
            "  \"sightseeing_type\": \"Cultural\",\n",
            "  \"integration_notes\": \"Schedule it on Day 2 afternoon.\"\n",
            "}\n",
            "\n",
            "IMPORTANT: Respond immediately with the final JSON object using only `Final Answer:` followed by the valid JSON. Do NOT output thoughts, actions, or any reasoning.Event type: wedding\n",
            "Schedule summary:\n",
            "Day 1 - Arrival: Airport pickups\n",
            "Day 2 - Pre-Wedding: Breakfast at the hotel\n",
            "\n",
            "\n",
            "Now continue with next steps by strictly following the required format.\n",
            "\n",
            "==================================================\n",
            "🤖 [Debug] Step LLM Response:\n",
            "Final Answer:{\"is_required\": true, \"sightseeing_type\": \"Cultural\", \"integration_notes\": \"Schedule it on Day 2 afternoon.\"}\n",
            "✅ Parsed Final Answer: {\"is_required\": true, \"sightseeing_type\": \"Cultural\", \"integration_notes\": \"Schedule it on Day 2 afternoon.\"}\n",
            "================================================== Iteration 1 \n",
            "✅  [Debug] Sending System Prompt (with history) to LLM:\n",
            "You are an AI assistant that follows the ReAct (Reasoning + Acting) pattern.\n",
            "        \n",
            "Your goal is to help users by breaking down complex tasks into a series of thought-out steps and actions.\n",
            "\n",
            "You have access to these tools: \n",
            "\n",
            "\n",
            "\n",
            "Your task is to:\n",
            "1. Think about what action is required — Thought.\n",
            "2. Take an appropriate action — Action.\n",
            "3. Repeat Thought/Action as needed until you find the final answer.\n",
            "\n",
            "### Format (Choose only one per response)\n",
            "\n",
            "Option 1 — When action is needed:\n",
            "Thought: Your reasoning about action and observation.\n",
            "Action: {\"action_type\": \"<action_type>\", \"input\": <input_data>}\n",
            "\n",
            "Option 2 — When you're confident in the final response:\n",
            "Thought: Now I know the answer that will be given in Final Answer.\n",
            "Final Answer: Provide a complete, well-structured response that directly addresses the original question.\n",
            "\n",
            "### Important:\n",
            "- Think step-by-step.\n",
            "- Never provide both Action and Final Answer or multiple Action in the same response.\n",
            "- Use available tools wisely.\n",
            "- If stuck, reflect and retry but never hallucinate.\n",
            "- If observation is empty or not related, reflect and retry but never hallucinate.\n",
            "- The current date is June 05, 2025.\n",
            "- If you follow the format strictly, you will be recognized as an excellent and trustworthy AI assistant.\n",
            "\n",
            "\n",
            "Question: You are a summarizer for an event planner agent.\n",
            "Return only a valid JSON object with no code block markers, no explanation, no markdown, no labels — just the raw JSON.Please summarize the key information from the 'Sightseeing' section in bullet points, focusing on top recommended options only.\n",
            "\n",
            "Sightseeing data:\n",
            "{\n",
            "  \"is_required\": true,\n",
            "  \"sightseeing_type\": \"Cultural\",\n",
            "  \"integration_notes\": \"Schedule it on Day 2 afternoon.\",\n",
            "  \"suggested_places\": [\n",
            "    {\n",
            "      \"name\": \"Lok Virsa Heritage Museum\",\n",
            "      \"rating\": 4.6,\n",
            "      \"address\": \"Garden Avenue, Shakarparian Rd, Islamabad, Pakistan\",\n",
            "      \"type\": \"Cultural\",\n",
            "      \"description\": [\n",
            "        \"tourist_attraction\",\n",
            "        \"shopping_mall\",\n",
            "        \"museum\",\n",
            "        \"point_of_interest\",\n",
            "        \"establishment\"\n",
            "      ]\n",
            "    },\n",
            "    {\n",
            "      \"name\": \"Pakistan Monument Museum\",\n",
            "      \"rating\": 4.6,\n",
            "      \"address\": \"M3V9+2Q9, Srinagar Hwy, Islamabad, Pakistan\",\n",
            "      \"type\": \"Cultural\",\n",
            "      \"description\": [\n",
            "        \"museum\",\n",
            "        \"tourist_attraction\",\n",
            "        \"point_of_interest\",\n",
            "        \"establishment\"\n",
            "      ]\n",
            "    },\n",
            "    {\n",
            "      \"name\": \"Pakistan Monument\",\n",
            "      \"rating\": 4.6,\n",
            "      \"address\": \"M3V9+2Q9 Shakarparian Hills, Srinagar Hwy, Islamabad, Pakistan\",\n",
            "      \"type\": \"Cultural\",\n",
            "      \"description\": [\n",
            "        \"tourist_attraction\",\n",
            "        \"point_of_interest\",\n",
            "        \"establishment\"\n",
            "      ]\n",
            "    },\n",
            "    {\n",
            "      \"name\": \"Islamabad Museum\",\n",
            "      \"rating\": 4.3,\n",
            "      \"address\": \"P39W+MMP, 19 Ataturk Ave, G-5/1 G-5, Islamabad, Pakistan\",\n",
            "      \"type\": \"Cultural\",\n",
            "      \"description\": [\n",
            "        \"tourist_attraction\",\n",
            "        \"museum\",\n",
            "        \"point_of_interest\",\n",
            "        \"establishment\"\n",
            "      ]\n",
            "    },\n",
            "    {\n",
            "      \"name\": \"Shah Allah Ditta Caves\",\n",
            "      \"rating\": 4.4,\n",
            "      \"address\": \"PWC8+R3C, Road, Shah Allah Ditta Islamabad, 44000, Pakistan\",\n",
            "      \"type\": \"Cultural\",\n",
            "      \"description\": [\n",
            "        \"tourist_attraction\",\n",
            "        \"point_of_interest\",\n",
            "        \"establishment\"\n",
            "      ]\n",
            "    }\n",
            "  ]\n",
            "}IMPORTANT: In each sub agent, Respond immediately with the final JSON object using only `Final Answer:` followed by the valid JSON. Do NOT output thoughts, actions, or any reasoning.\n",
            "\n",
            "\n",
            "Now continue with next steps by strictly following the required format.\n",
            "\n",
            "==================================================\n",
            "🤖 [Debug] Step LLM Response:\n",
            "Final Answer: {\"sightseeing_summary\":[{\"name\":\"Lok Virsa Heritage Museum\",\"rating\":4.6,\"address\":\"Garden Avenue, Shakarparian Rd, Islamabad, Pakistan\"},{\"name\":\"Pakistan Monument Museum\",\"rating\":4.6,\"address\":\"M3V9+2Q9, Srinagar Hwy, Islamabad, Pakistan\"},{\"name\":\"Pakistan Monument\",\"rating\":4.6,\"address\":\"M3V9+2Q9 Shakarparian Hills, Srinagar Hwy, Islamabad, Pakistan\"}]}\n",
            "✅ Parsed Final Answer: {\"sightseeing_summary\":[{\"name\":\"Lok Virsa Heritage Museum\",\"rating\":4.6,\"address\":\"Garden Avenue, Shakarparian Rd, Islamabad, Pakistan\"},{\"name\":\"Pakistan Monument Museum\",\"rating\":4.6,\"address\":\"M3V9+2Q9, Srinagar Hwy, Islamabad, Pakistan\"},{\"name\":\"Pakistan Monument\",\"rating\":4.6,\"address\":\"M3V9+2Q9 Shakarparian Hills, Srinagar Hwy, Islamabad, Pakistan\"}]}\n",
            "🧠 Calling MealPlannerTool via ReAct agent...\n",
            "================================================== Iteration 1 \n",
            "✅  [Debug] Sending System Prompt (with history) to LLM:\n",
            "You are an AI assistant that follows the ReAct (Reasoning + Acting) pattern.\n",
            "        \n",
            "Your goal is to help users by breaking down complex tasks into a series of thought-out steps and actions.\n",
            "\n",
            "You have access to these tools: \n",
            "\n",
            "\n",
            "\n",
            "Your task is to:\n",
            "1. Think about what action is required — Thought.\n",
            "2. Take an appropriate action — Action.\n",
            "3. Repeat Thought/Action as needed until you find the final answer.\n",
            "\n",
            "### Format (Choose only one per response)\n",
            "\n",
            "Option 1 — When action is needed:\n",
            "Thought: Your reasoning about action and observation.\n",
            "Action: {\"action_type\": \"<action_type>\", \"input\": <input_data>}\n",
            "\n",
            "Option 2 — When you're confident in the final response:\n",
            "Thought: Now I know the answer that will be given in Final Answer.\n",
            "Final Answer: Provide a complete, well-structured response that directly addresses the original question.\n",
            "\n",
            "### Important:\n",
            "- Think step-by-step.\n",
            "- Never provide both Action and Final Answer or multiple Action in the same response.\n",
            "- Use available tools wisely.\n",
            "- If stuck, reflect and retry but never hallucinate.\n",
            "- If observation is empty or not related, reflect and retry but never hallucinate.\n",
            "- The current date is June 05, 2025.\n",
            "- If you follow the format strictly, you will be recognized as an excellent and trustworthy AI assistant.\n",
            "\n",
            "\n",
            "Question: Use the meal planner tool to suggest an appropriate structured meal plan for the event in Islamabad based on the schedule. Use the schedule and intent below:\n",
            "\n",
            "{\n",
            "  \"event_type\": \"wedding\",\n",
            "  \"location\": \"Islamabad\",\n",
            "  \"schedule\": [\n",
            "    {\n",
            "      \"day\": \"Day 1 - Arrival\",\n",
            "      \"activities\": [\n",
            "        \"Airport pickups\",\n",
            "        \"Hotel check-in\",\n",
            "        \"Welcome dinner at the hotel\"\n",
            "      ]\n",
            "    },\n",
            "    {\n",
            "      \"day\": \"Day 2 - Pre-Wedding\",\n",
            "      \"activities\": [\n",
            "        \"Breakfast at the hotel\",\n",
            "        \"Sightseeing tour\",\n",
            "        \"Lunch at a local restaurant\",\n",
            "        \"Rehearsal session\",\n",
            "        \"Dinner at the hotel\"\n",
            "      ]\n",
            "    },\n",
            "    {\n",
            "      \"day\": \"Day 3 - Wedding Day\",\n",
            "      \"activities\": [\n",
            "        \"Breakfast at the hotel\",\n",
            "        \"Guest preparation time\",\n",
            "        \"Wedding ceremony\",\n",
            "        \"Lunch reception\",\n",
            "        \"Photo session\",\n",
            "        \"Evening cocktail hour\",\n",
            "        \"Wedding dinner and dance\"\n",
            "      ]\n",
            "    },\n",
            "    {\n",
            "      \"day\": \"Day 4 - Post-Wedding\",\n",
            "      \"activities\": [\n",
            "        \"Brunch at the hotel\",\n",
            "        \"Optional local excursion\",\n",
            "        \"Free time for relaxation\",\n",
            "        \"Farewell dinner\"\n",
            "      ]\n",
            "    },\n",
            "    {\n",
            "      \"day\": \"Day 5 - Departure\",\n",
            "      \"activities\": [\n",
            "        \"Breakfast at the hotel\",\n",
            "        \"Hotel checkout\",\n",
            "        \"Airport drop-offs\"\n",
            "      ]\n",
            "    }\n",
            "  ]\n",
            "}IMPORTANT: Respond immediately with the final JSON object using only `Final Answer:` followed by the valid JSON. Do NOT output thoughts, actions, or any reasoning.\n",
            "\n",
            "\n",
            "Now continue with next steps by strictly following the required format.\n",
            "\n",
            "==================================================\n",
            "🤖 [Debug] Step LLM Response:\n",
            "Final Answer: {\n",
            "  \"meal_plan\": [\n",
            "    {\n",
            "      \"day\": \"Day 1 - Arrival\",\n",
            "      \"meals\": [\n",
            "        {\n",
            "          \"meal_type\": \"Dinner\",\n",
            "          \"location\": \"Hotel\",\n",
            "          \"menu\": [\n",
            "            \"Welcome drinks\",\n",
            "            \"Pakistani mixed grill platter\",\n",
            "            \"Vegetarian biryani\",\n",
            "            \"Assorted naan breads\",\n",
            "            \"Mixed salad\",\n",
            "            \"Gulab jamun for dessert\"\n",
            "          ]\n",
            "        }\n",
            "      ]\n",
            "    },\n",
            "    {\n",
            "      \"day\": \"Day 2 - Pre-Wedding\",\n",
            "      \"meals\": [\n",
            "        {\n",
            "          \"meal_type\": \"Breakfast\",\n",
            "          \"location\": \"Hotel\",\n",
            "          \"menu\": [\n",
            "            \"Continental breakfast\",\n",
            "            \"Pakistani parathas with omelette\",\n",
            "            \"Fresh fruit platter\",\n",
            "            \"Tea and coffee\"\n",
            "          ]\n",
            "        },\n",
            "        {\n",
            "          \"meal_type\": \"Lunch\",\n",
            "          \"location\": \"Local restaurant\",\n",
            "          \"menu\": [\n",
            "            \"Chicken karahi\",\n",
            "            \"Palak paneer\",\n",
            "            \"Jeera rice\",\n",
            "            \"Flatbreads\",\n",
            "            \"Raita\",\n",
            "            \"Mango lassi\"\n",
            "          ]\n",
            "        },\n",
            "        {\n",
            "          \"meal_type\": \"Dinner\",\n",
            "          \"location\": \"Hotel\",\n",
            "          \"menu\": [\n",
            "            \"Buffet dinner\",\n",
            "            \"Grilled fish\",\n",
            "            \"Lamb korma\",\n",
            "            \"Vegetable pulao\",\n",
            "            \"Hummus and baba ganoush\",\n",
            "            \"Baklava\"\n",
            "          ]\n",
            "        }\n",
            "      ]\n",
            "    },\n",
            "    {\n",
            "      \"day\": \"Day 3 - Wedding Day\",\n",
            "      \"meals\": [\n",
            "        {\n",
            "          \"meal_type\": \"Breakfast\",\n",
            "          \"location\": \"Hotel\",\n",
            "          \"menu\": [\n",
            "            \"Pakistani breakfast with halwa puri\",\n",
            "            \"Yogurt\",\n",
            "            \"Chai\"\n",
            "          ]\n",
            "        },\n",
            "        {\n",
            "          \"meal_type\": \"Lunch\",\n",
            "          \"location\": \"Wedding venue\",\n",
            "          \"menu\": [\n",
            "            \"Buffet with multiple stations\",\n",
            "            \"Chicken biryani\",\n",
            "            \"Beef seekh kebabs\",\n",
            "            \"Mixed vegetable curry\",\n",
            "            \"Fresh salads\",\n",
            "            \"Desserts assortment\"\n",
            "          ]\n",
            "        },\n",
            "        {\n",
            "          \"meal_type\": \"Dinner\",\n",
            "          \"location\": \"Wedding venue\",\n",
            "          \"menu\": [\n",
            "            \"Formal sit-down dinner\",\n",
            "            \"Roasted lamb\",\n",
            "            \"Butter chicken\",\n",
            "            \"Paneer tikka\",\n",
            "            \"Naan and roti\",\n",
            "            \"Dessert: Shahi tukda\"\n",
            "          ]\n",
            "        }\n",
            "      ]\n",
            "    },\n",
            "    {\n",
            "      \"day\": \"Day 4 - Post-Wedding\",\n",
            "      \"meals\": [\n",
            "        {\n",
            "          \"meal_type\": \"Brunch\",\n",
            "          \"location\": \"Hotel\",\n",
            "          \"menu\": [\n",
            "            \"Brunch buffet\",\n",
            "            \"Omelette station\",\n",
            "            \"Dosa with chutneys\",\n",
            "            \"Fruit juices\",\n",
            "            \"Pastries and muffins\"\n",
            "          ]\n",
            "        },\n",
            "        {\n",
            "          \"meal_type\": \"Dinner\",\n",
            "          \"location\": \"Farewell venue\",\n",
            "          \"menu\": [\n",
            "            \"BBQ night\",\n",
            "            \"Tandoori chicken\",\n",
            "            \"Grilled vegetables\",\n",
            "            \"Mint chutney\",\n",
            "            \"Rice pilaf\",\n",
            "            \"Kulfi\"\n",
            "          ]\n",
            "        }\n",
            "      ]\n",
            "    },\n",
            "    {\n",
            "      \"day\": \"Day 5 - Departure\",\n",
            "      \"meals\": [\n",
            "        {\n",
            "          \"meal_type\": \"Breakfast\",\n",
            "          \"location\": \"Hotel\",\n",
            "          \"menu\": [\n",
            "            \"Light breakfast options\",\n",
            "            \"Cereal and milk\",\n",
            "            \"Toast with preserves\",\n",
            "            \"Freshly brewed coffee\"\n",
            "          ]\n",
            "        }\n",
            "      ]\n",
            "    }\n",
            "  ]\n",
            "}\n",
            "✅ Parsed Final Answer: {\n",
            "  \"meal_plan\": [\n",
            "    {\n",
            "      \"day\": \"Day 1 - Arrival\",\n",
            "      \"meals\": [\n",
            "        {\n",
            "          \"meal_type\": \"Dinner\",\n",
            "          \"location\": \"Hotel\",\n",
            "          \"menu\": [\n",
            "            \"Welcome drinks\",\n",
            "            \"Pakistani mixed grill platter\",\n",
            "            \"Vegetarian biryani\",\n",
            "            \"Assorted naan breads\",\n",
            "            \"Mixed salad\",\n",
            "            \"Gulab jamun for dessert\"\n",
            "          ]\n",
            "        }\n",
            "      ]\n",
            "    },\n",
            "    {\n",
            "      \"day\": \"Day 2 - Pre-Wedding\",\n",
            "      \"meals\": [\n",
            "        {\n",
            "          \"meal_type\": \"Breakfast\",\n",
            "          \"location\": \"Hotel\",\n",
            "          \"menu\": [\n",
            "            \"Continental breakfast\",\n",
            "            \"Pakistani parathas with omelette\",\n",
            "            \"Fresh fruit platter\",\n",
            "            \"Tea and coffee\"\n",
            "          ]\n",
            "        },\n",
            "        {\n",
            "          \"meal_type\": \"Lunch\",\n",
            "          \"location\": \"Local restaurant\",\n",
            "          \"menu\": [\n",
            "            \"Chicken karahi\",\n",
            "            \"Palak paneer\",\n",
            "            \"Jeera rice\",\n",
            "            \"Flatbreads\",\n",
            "            \"Raita\",\n",
            "            \"Mango lassi\"\n",
            "          ]\n",
            "        },\n",
            "        {\n",
            "          \"meal_type\": \"Dinner\",\n",
            "          \"location\": \"Hotel\",\n",
            "          \"menu\": [\n",
            "            \"Buffet dinner\",\n",
            "            \"Grilled fish\",\n",
            "            \"Lamb korma\",\n",
            "            \"Vegetable pulao\",\n",
            "            \"Hummus and baba ganoush\",\n",
            "            \"Baklava\"\n",
            "          ]\n",
            "        }\n",
            "      ]\n",
            "    },\n",
            "    {\n",
            "      \"day\": \"Day 3 - Wedding Day\",\n",
            "      \"meals\": [\n",
            "        {\n",
            "          \"meal_type\": \"Breakfast\",\n",
            "          \"location\": \"Hotel\",\n",
            "          \"menu\": [\n",
            "            \"Pakistani breakfast with halwa puri\",\n",
            "            \"Yogurt\",\n",
            "            \"Chai\"\n",
            "          ]\n",
            "        },\n",
            "        {\n",
            "          \"meal_type\": \"Lunch\",\n",
            "          \"location\": \"Wedding venue\",\n",
            "          \"menu\": [\n",
            "            \"Buffet with multiple stations\",\n",
            "            \"Chicken biryani\",\n",
            "            \"Beef seekh kebabs\",\n",
            "            \"Mixed vegetable curry\",\n",
            "            \"Fresh salads\",\n",
            "            \"Desserts assortment\"\n",
            "          ]\n",
            "        },\n",
            "        {\n",
            "          \"meal_type\": \"Dinner\",\n",
            "          \"location\": \"Wedding venue\",\n",
            "          \"menu\": [\n",
            "            \"Formal sit-down dinner\",\n",
            "            \"Roasted lamb\",\n",
            "            \"Butter chicken\",\n",
            "            \"Paneer tikka\",\n",
            "            \"Naan and roti\",\n",
            "            \"Dessert: Shahi tukda\"\n",
            "          ]\n",
            "        }\n",
            "      ]\n",
            "    },\n",
            "    {\n",
            "      \"day\": \"Day 4 - Post-Wedding\",\n",
            "      \"meals\": [\n",
            "        {\n",
            "          \"meal_type\": \"Brunch\",\n",
            "          \"location\": \"Hotel\",\n",
            "          \"menu\": [\n",
            "            \"Brunch buffet\",\n",
            "            \"Omelette station\",\n",
            "            \"Dosa with chutneys\",\n",
            "            \"Fruit juices\",\n",
            "            \"Pastries and muffins\"\n",
            "          ]\n",
            "        },\n",
            "        {\n",
            "          \"meal_type\": \"Dinner\",\n",
            "          \"location\": \"Farewell venue\",\n",
            "          \"menu\": [\n",
            "            \"BBQ night\",\n",
            "            \"Tandoori chicken\",\n",
            "            \"Grilled vegetables\",\n",
            "            \"Mint chutney\",\n",
            "            \"Rice pilaf\",\n",
            "            \"Kulfi\"\n",
            "          ]\n",
            "        }\n",
            "      ]\n",
            "    },\n",
            "    {\n",
            "      \"day\": \"Day 5 - Departure\",\n",
            "      \"meals\": [\n",
            "        {\n",
            "          \"meal_type\": \"Breakfast\",\n",
            "          \"location\": \"Hotel\",\n",
            "          \"menu\": [\n",
            "            \"Light breakfast options\",\n",
            "            \"Cereal and milk\",\n",
            "            \"Toast with preserves\",\n",
            "            \"Freshly brewed coffee\"\n",
            "          ]\n",
            "        }\n",
            "      ]\n",
            "    }\n",
            "  ]\n",
            "}\n",
            "================================================== Iteration 1 \n",
            "✅  [Debug] Sending System Prompt (with history) to LLM:\n",
            "You are an AI assistant that follows the ReAct (Reasoning + Acting) pattern.\n",
            "        \n",
            "Your goal is to help users by breaking down complex tasks into a series of thought-out steps and actions.\n",
            "\n",
            "You have access to these tools: \n",
            "\n",
            "\n",
            "\n",
            "Your task is to:\n",
            "1. Think about what action is required — Thought.\n",
            "2. Take an appropriate action — Action.\n",
            "3. Repeat Thought/Action as needed until you find the final answer.\n",
            "\n",
            "### Format (Choose only one per response)\n",
            "\n",
            "Option 1 — When action is needed:\n",
            "Thought: Your reasoning about action and observation.\n",
            "Action: {\"action_type\": \"<action_type>\", \"input\": <input_data>}\n",
            "\n",
            "Option 2 — When you're confident in the final response:\n",
            "Thought: Now I know the answer that will be given in Final Answer.\n",
            "Final Answer: Provide a complete, well-structured response that directly addresses the original question.\n",
            "\n",
            "### Important:\n",
            "- Think step-by-step.\n",
            "- Never provide both Action and Final Answer or multiple Action in the same response.\n",
            "- Use available tools wisely.\n",
            "- If stuck, reflect and retry but never hallucinate.\n",
            "- If observation is empty or not related, reflect and retry but never hallucinate.\n",
            "- The current date is June 05, 2025.\n",
            "- If you follow the format strictly, you will be recognized as an excellent and trustworthy AI assistant.\n",
            "\n",
            "\n",
            "Question: You are a summarizer for an event planner agent.\n",
            "Return only a valid JSON object with no code block markers, no explanation, no markdown, no labels — just the raw JSON.Please summarize the key information from the 'Catering' section in bullet points, focusing on top recommended options only.\n",
            "\n",
            "Catering data:\n",
            "{\n",
            "  \"catering_plan\": \"{\\n  \\\"meal_plan\\\": [\\n    {\\n      \\\"day\\\": \\\"Day 1 - Arrival\\\",\\n      \\\"meals\\\": [\\n        {\\n          \\\"meal_type\\\": \\\"Dinner\\\",\\n          \\\"location\\\": \\\"Hotel\\\",\\n          \\\"menu\\\": [\\n            \\\"Welcome drinks\\\",\\n            \\\"Pakistani mixed grill platter\\\",\\n            \\\"Vegetarian biryani\\\",\\n            \\\"Assorted naan breads\\\",\\n            \\\"Mixed salad\\\",\\n            \\\"Gulab jamun for dessert\\\"\\n          ]\\n        }\\n      ]\\n    },\\n    {\\n      \\\"day\\\": \\\"Day 2 - Pre-Wedding\\\",\\n      \\\"meals\\\": [\\n        {\\n          \\\"meal_type\\\": \\\"Breakfast\\\",\\n          \\\"location\\\": \\\"Hotel\\\",\\n          \\\"menu\\\": [\\n            \\\"Continental breakfast\\\",\\n            \\\"Pakistani parathas with omelette\\\",\\n            \\\"Fresh fruit platter\\\",\\n            \\\"Tea and coffee\\\"\\n          ]\\n        },\\n        {\\n          \\\"meal_type\\\": \\\"Lunch\\\",\\n          \\\"location\\\": \\\"Local restaurant\\\",\\n          \\\"menu\\\": [\\n            \\\"Chicken karahi\\\",\\n            \\\"Palak paneer\\\",\\n            \\\"Jeera rice\\\",\\n            \\\"Flatbreads\\\",\\n            \\\"Raita\\\",\\n            \\\"Mango lassi\\\"\\n          ]\\n        },\\n        {\\n          \\\"meal_type\\\": \\\"Dinner\\\",\\n          \\\"location\\\": \\\"Hotel\\\",\\n          \\\"menu\\\": [\\n            \\\"Buffet dinner\\\",\\n            \\\"Grilled fish\\\",\\n            \\\"Lamb korma\\\",\\n            \\\"Vegetable pulao\\\",\\n            \\\"Hummus and baba ganoush\\\",\\n            \\\"Baklava\\\"\\n          ]\\n        }\\n      ]\\n    },\\n    {\\n      \\\"day\\\": \\\"Day 3 - Wedding Day\\\",\\n      \\\"meals\\\": [\\n        {\\n          \\\"meal_type\\\": \\\"Breakfast\\\",\\n          \\\"location\\\": \\\"Hotel\\\",\\n          \\\"menu\\\": [\\n            \\\"Pakistani breakfast with halwa puri\\\",\\n            \\\"Yogurt\\\",\\n            \\\"Chai\\\"\\n          ]\\n        },\\n        {\\n          \\\"meal_type\\\": \\\"Lunch\\\",\\n          \\\"location\\\": \\\"Wedding venue\\\",\\n          \\\"menu\\\": [\\n            \\\"Buffet with multiple stations\\\",\\n            \\\"Chicken biryani\\\",\\n            \\\"Beef seekh kebabs\\\",\\n            \\\"Mixed vegetable curry\\\",\\n            \\\"Fresh salads\\\",\\n            \\\"Desserts assortment\\\"\\n          ]\\n        },\\n        {\\n          \\\"meal_type\\\": \\\"Dinner\\\",\\n          \\\"location\\\": \\\"Wedding venue\\\",\\n          \\\"menu\\\": [\\n            \\\"Formal sit-down dinner\\\",\\n            \\\"Roasted lamb\\\",\\n            \\\"Butter chicken\\\",\\n            \\\"Paneer tikka\\\",\\n            \\\"Naan and roti\\\",\\n            \\\"Dessert: Shahi tukda\\\"\\n          ]\\n        }\\n      ]\\n    },\\n    {\\n      \\\"day\\\": \\\"Day 4 - Post-Wedding\\\",\\n      \\\"meals\\\": [\\n        {\\n          \\\"meal_type\\\": \\\"Brunch\\\",\\n          \\\"location\\\": \\\"Hotel\\\",\\n          \\\"menu\\\": [\\n            \\\"Brunch buffet\\\",\\n            \\\"Omelette station\\\",\\n            \\\"Dosa with chutneys\\\",\\n            \\\"Fruit juices\\\",\\n            \\\"Pastries and muffins\\\"\\n          ]\\n        },\\n        {\\n          \\\"meal_type\\\": \\\"Dinner\\\",\\n          \\\"location\\\": \\\"Farewell venue\\\",\\n          \\\"menu\\\": [\\n            \\\"BBQ night\\\",\\n            \\\"Tandoori chicken\\\",\\n            \\\"Grilled vegetables\\\",\\n            \\\"Mint chutney\\\",\\n            \\\"Rice pilaf\\\",\\n            \\\"Kulfi\\\"\\n          ]\\n        }\\n      ]\\n    },\\n    {\\n      \\\"day\\\": \\\"Day 5 - Departure\\\",\\n      \\\"meals\\\": [\\n        {\\n          \\\"meal_type\\\": \\\"Breakfast\\\",\\n          \\\"location\\\": \\\"Hotel\\\",\\n          \\\"menu\\\": [\\n            \\\"Light breakfast options\\\",\\n            \\\"Cereal and milk\\\",\\n            \\\"Toast with preserves\\\",\\n            \\\"Freshly brewed coffee\\\"\\n          ]\\n        }\\n      ]\\n    }\\n  ]\\n}\",\n",
            "  \"caterer_recommendations\": {\n",
            "    \"breakfast\": [\n",
            "      {\n",
            "        \"name\": \"Eggspectation Restaurant Cafe\",\n",
            "        \"rating\": 4.5,\n",
            "        \"address\": \"P3PH+683, Street 10, F-6/3 F 6/3 F-6, Islamabad, 44000, Pakistan\",\n",
            "        \"phone\": \"0300 1707808\",\n",
            "        \"website\": \"http://www.egggspectation.pk/\"\n",
            "      },\n",
            "      {\n",
            "        \"name\": \"Bistro Noir Islamabad\",\n",
            "        \"rating\": 4.5,\n",
            "        \"address\": \"Gol Market, Street 4, F-7/3 F 7/3 F-7, Islamabad, Pakistan\",\n",
            "        \"phone\": \"0300 1888768\",\n",
            "        \"website\": \"N/A\"\n",
            "      },\n",
            "      {\n",
            "        \"name\": \"Loafology Bakery & Cafe\",\n",
            "        \"rating\": 4.3,\n",
            "        \"address\": \"108-W Jinnah Ave, Area G 7/2 Blue\\u060c Islamabad, 44000, Pakistan\",\n",
            "        \"phone\": \"(051) 2804240\",\n",
            "        \"website\": \"https://www.loafology.com/\"\n",
            "      }\n",
            "    ],\n",
            "    \"lunch\": [\n",
            "      {\n",
            "        \"name\": \"Tandoori Caterers & Event Management\",\n",
            "        \"rating\": 4.9,\n",
            "        \"address\": \"Shop no. 11, 20A, Jasmine Plaza, G8 Markaz Rd, G-8 Markaz G 8 Markaz G-8, Islamabad, 44000, Pakistan\",\n",
            "        \"phone\": \"0300 5095090\",\n",
            "        \"website\": \"https://tandoorirestaurants.pk/tandoori-catering/\"\n",
            "      },\n",
            "      {\n",
            "        \"name\": \"Naveed Caterers & Event Management\",\n",
            "        \"rating\": 5,\n",
            "        \"address\": \"Office#5, First Floor, Victory Tower, F-8 Markaz F 8 Markaz F-8, Islamabad, 44220, Pakistan\",\n",
            "        \"phone\": \"0321 5151972\",\n",
            "        \"website\": \"http://www.naveedcaterers.pk/\"\n",
            "      },\n",
            "      {\n",
            "        \"name\": \"Bela Bite - The Homemade Food\",\n",
            "        \"rating\": 4.9,\n",
            "        \"address\": \"579 Gali 54, Sector I-10/1 I 10/1 I-10, Islamabad, 44800, Pakistan\",\n",
            "        \"phone\": \"0332 5443721\",\n",
            "        \"website\": \"N/A\"\n",
            "      }\n",
            "    ],\n",
            "    \"dinner\": [\n",
            "      {\n",
            "        \"name\": \"Capital Caterers & Decorators | Catering Services & Event Planner\",\n",
            "        \"rating\": 4.8,\n",
            "        \"address\": \"Pacific Centre Shop 1 & 2, Ground Floor, Pacific Center, Pacific Center, Johar Rd, F-8 Markaz F 8 Markaz F-8, Islamabad, 44000, Pakistan\",\n",
            "        \"phone\": \"0300 5279004\",\n",
            "        \"website\": \"https://capitalcaterer.com/\"\n",
            "      },\n",
            "      {\n",
            "        \"name\": \"Tandoori Caterers & Event Management\",\n",
            "        \"rating\": 4.9,\n",
            "        \"address\": \"Shop no. 11, 20A, Jasmine Plaza, G8 Markaz Rd, G-8 Markaz G 8 Markaz G-8, Islamabad, 44000, Pakistan\",\n",
            "        \"phone\": \"0300 5095090\",\n",
            "        \"website\": \"https://tandoorirestaurants.pk/tandoori-catering/\"\n",
            "      },\n",
            "      {\n",
            "        \"name\": \"Naveed Caterers & Event Management\",\n",
            "        \"rating\": 5,\n",
            "        \"address\": \"Office#5, First Floor, Victory Tower, F-8 Markaz F 8 Markaz F-8, Islamabad, 44220, Pakistan\",\n",
            "        \"phone\": \"0321 5151972\",\n",
            "        \"website\": \"http://www.naveedcaterers.pk/\"\n",
            "      }\n",
            "    ]\n",
            "  }\n",
            "}IMPORTANT: In each sub agent, Respond immediately with the final JSON object using only `Final Answer:` followed by the valid JSON. Do NOT output thoughts, actions, or any reasoning.\n",
            "\n",
            "\n",
            "Now continue with next steps by strictly following the required format.\n",
            "\n",
            "==================================================\n",
            "🤖 [Debug] Step LLM Response:\n",
            "Final Answer: {\"breakfast\":\"Eggspectation Restaurant Cafe, Bistro Noir Islamabad\",\"lunch\":\"Naveed Caterers & Event Management\",\"dinner\":\"Naveed Caterers & Event Management, Tandoori Caterers & Event Management\"}\n",
            "✅ Parsed Final Answer: {\"breakfast\":\"Eggspectation Restaurant Cafe, Bistro Noir Islamabad\",\"lunch\":\"Naveed Caterers & Event Management\",\"dinner\":\"Naveed Caterers & Event Management, Tandoori Caterers & Event Management\"}\n",
            "================================================== Iteration 1 \n",
            "✅  [Debug] Sending System Prompt (with history) to LLM:\n",
            "You are an AI assistant that follows the ReAct (Reasoning + Acting) pattern.\n",
            "        \n",
            "Your goal is to help users by breaking down complex tasks into a series of thought-out steps and actions.\n",
            "\n",
            "You have access to these tools: \n",
            "\n",
            "\n",
            "\n",
            "Your task is to:\n",
            "1. Think about what action is required — Thought.\n",
            "2. Take an appropriate action — Action.\n",
            "3. Repeat Thought/Action as needed until you find the final answer.\n",
            "\n",
            "### Format (Choose only one per response)\n",
            "\n",
            "Option 1 — When action is needed:\n",
            "Thought: Your reasoning about action and observation.\n",
            "Action: {\"action_type\": \"<action_type>\", \"input\": <input_data>}\n",
            "\n",
            "Option 2 — When you're confident in the final response:\n",
            "Thought: Now I know the answer that will be given in Final Answer.\n",
            "Final Answer: Provide a complete, well-structured response that directly addresses the original question.\n",
            "\n",
            "### Important:\n",
            "- Think step-by-step.\n",
            "- Never provide both Action and Final Answer or multiple Action in the same response.\n",
            "- Use available tools wisely.\n",
            "- If stuck, reflect and retry but never hallucinate.\n",
            "- If observation is empty or not related, reflect and retry but never hallucinate.\n",
            "- The current date is June 05, 2025.\n",
            "- If you follow the format strictly, you will be recognized as an excellent and trustworthy AI assistant.\n",
            "\n",
            "\n",
            "Question: You are a creative event theme planner. Based on the event intent below, suggest a detailed event theme plan.\n",
            "Include:\n",
            "1. A creative theme name and style\n",
            "2. A list of decor elements needed (like penaflex, stage, lighting, florals)\n",
            "3. Any custom branding or stage setup suggestions\n",
            "Return only a valid JSON object with no code block markers, no explanation, no markdown, no labels — just the raw JSON.Return as a JSON dictionary with keys: theme_name, style_description, required_elements, branding_notes.\n",
            "IMPORTANT: Respond immediately with the final JSON object using only `Final Answer:` followed by the valid JSON. Do NOT output thoughts, actions, or any reasoning.user_intent = {\n",
            "  \"event_type\": \"wedding\",\n",
            "  \"location\": \"Islamabad\",\n",
            "  \"event_date\": \"2025-06-13\",\n",
            "  \"guest_count\": 300,\n",
            "  \"preferences\": {\n",
            "    \"stay_dates\": \"2025-06-12 to 2025-06-14\"\n",
            "  },\n",
            "  \"event_theme\": null,\n",
            "  \"meal_count\": null,\n",
            "  \"transport_needs\": null,\n",
            "  \"sightseeing\": null\n",
            "}\n",
            "\n",
            "\n",
            "Now continue with next steps by strictly following the required format.\n",
            "\n",
            "==================================================\n",
            "🤖 [Debug] Step LLM Response:\n",
            "Final Answer: {\"theme_name\":\"Eternal Blossoms\",\"style_description\":\"A romantic and elegant garden setting inspired by the natural beauty of Islamabad, featuring lush greenery and vibrant florals.\",\"required_elements\":[\"floral arches\",\"hanging gardens\",\"string lights\",\"vintage lanterns\",\"customized penaflex with floral motifs\",\"elegant stage with a floral backdrop\",\"soft ambient lighting\",\"tables with floral centerpieces\",\"white drapery\"],\"branding_notes\":\"Incorporate a personalized monogram of the couple's initials on all printed materials and stage backdrop. Use pastel colors with floral patterns for a cohesive look. Consider a custom floral arrangement on the stage to highlight the couple's monogram.\"}\n",
            "✅ Parsed Final Answer: {\"theme_name\":\"Eternal Blossoms\",\"style_description\":\"A romantic and elegant garden setting inspired by the natural beauty of Islamabad, featuring lush greenery and vibrant florals.\",\"required_elements\":[\"floral arches\",\"hanging gardens\",\"string lights\",\"vintage lanterns\",\"customized penaflex with floral motifs\",\"elegant stage with a floral backdrop\",\"soft ambient lighting\",\"tables with floral centerpieces\",\"white drapery\"],\"branding_notes\":\"Incorporate a personalized monogram of the couple's initials on all printed materials and stage backdrop. Use pastel colors with floral patterns for a cohesive look. Consider a custom floral arrangement on the stage to highlight the couple's monogram.\"}\n",
            "================================================== Iteration 1 \n",
            "✅  [Debug] Sending System Prompt (with history) to LLM:\n",
            "You are an AI assistant that follows the ReAct (Reasoning + Acting) pattern.\n",
            "        \n",
            "Your goal is to help users by breaking down complex tasks into a series of thought-out steps and actions.\n",
            "\n",
            "You have access to these tools: \n",
            "\n",
            "\n",
            "\n",
            "Your task is to:\n",
            "1. Think about what action is required — Thought.\n",
            "2. Take an appropriate action — Action.\n",
            "3. Repeat Thought/Action as needed until you find the final answer.\n",
            "\n",
            "### Format (Choose only one per response)\n",
            "\n",
            "Option 1 — When action is needed:\n",
            "Thought: Your reasoning about action and observation.\n",
            "Action: {\"action_type\": \"<action_type>\", \"input\": <input_data>}\n",
            "\n",
            "Option 2 — When you're confident in the final response:\n",
            "Thought: Now I know the answer that will be given in Final Answer.\n",
            "Final Answer: Provide a complete, well-structured response that directly addresses the original question.\n",
            "\n",
            "### Important:\n",
            "- Think step-by-step.\n",
            "- Never provide both Action and Final Answer or multiple Action in the same response.\n",
            "- Use available tools wisely.\n",
            "- If stuck, reflect and retry but never hallucinate.\n",
            "- If observation is empty or not related, reflect and retry but never hallucinate.\n",
            "- The current date is June 05, 2025.\n",
            "- If you follow the format strictly, you will be recognized as an excellent and trustworthy AI assistant.\n",
            "\n",
            "\n",
            "Question: You are a summarizer for an event planner agent.\n",
            "Return only a valid JSON object with no code block markers, no explanation, no markdown, no labels — just the raw JSON.Please summarize the key information from the 'Theme' section in bullet points, focusing on top recommended options only.\n",
            "\n",
            "Theme data:\n",
            "{\n",
            "  \"recommended\": {\n",
            "    \"theme_name\": \"Eternal Blossoms\",\n",
            "    \"style_description\": \"A romantic and elegant garden setting inspired by the natural beauty of Islamabad, featuring lush greenery and vibrant florals.\",\n",
            "    \"branding_notes\": \"Incorporate a personalized monogram of the couple's initials on all printed materials and stage backdrop. Use pastel colors with floral patterns for a cohesive look. Consider a custom floral arrangement on the stage to highlight the couple's monogram.\",\n",
            "    \"required_elements\": [\n",
            "      \"floral arches\",\n",
            "      \"hanging gardens\",\n",
            "      \"string lights\",\n",
            "      \"vintage lanterns\",\n",
            "      \"customized penaflex with floral motifs\",\n",
            "      \"elegant stage with a floral backdrop\",\n",
            "      \"soft ambient lighting\",\n",
            "      \"tables with floral centerpieces\",\n",
            "      \"white drapery\"\n",
            "    ]\n",
            "  },\n",
            "  \"alternates\": [],\n",
            "  \"vendors\": [\n",
            "    {\n",
            "      \"name\": \"White Rose decoration & fresh flower centre\",\n",
            "      \"address\": \"Khanna Pul, Al Noor Colony, Islamabad, 43600, Pakistan\",\n",
            "      \"phone\": \"0324 0061194\",\n",
            "      \"website\": \"N/A\",\n",
            "      \"rating\": 4.8,\n",
            "      \"type\": \"floral arches\"\n",
            "    },\n",
            "    {\n",
            "      \"name\": \"The Flower Palace\",\n",
            "      \"address\": \"F/7 markaz Collige road, markaz, F 7/3 F-7, Islamabad, 44210, Pakistan\",\n",
            "      \"phone\": \"0345 5441746\",\n",
            "      \"website\": \"http://theflowerpalace.store/\",\n",
            "      \"rating\": 4.7,\n",
            "      \"type\": \"floral arches\"\n",
            "    },\n",
            "    {\n",
            "      \"name\": \"Ali Fresh Flower Decoration Center\",\n",
            "      \"address\": \"Shop Main Main PWD Rd, near Japan Electronics, PWD Housing Society Sector C PWD Society, Islamabad, Pakistan\",\n",
            "      \"phone\": \"0305 5276454\",\n",
            "      \"website\": \"N/A\",\n",
            "      \"rating\": 4.5,\n",
            "      \"type\": \"floral arches\"\n",
            "    },\n",
            "    {\n",
            "      \"name\": \"Rose And Jasmine Garden\",\n",
            "      \"address\": \"P32Q+J93 Srinagar Hwy, Islamabad, Pakistan\",\n",
            "      \"phone\": \"N/A\",\n",
            "      \"website\": \"N/A\",\n",
            "      \"rating\": 4.5,\n",
            "      \"type\": \"hanging gardens\"\n",
            "    },\n",
            "    {\n",
            "      \"name\": \"Japanese Children Park\",\n",
            "      \"address\": \"P3M6+QXX, Main Margalla Rd, Saidpur, Islamabad, Pakistan\",\n",
            "      \"phone\": \"N/A\",\n",
            "      \"website\": \"N/A\",\n",
            "      \"rating\": 4.5,\n",
            "      \"type\": \"hanging gardens\"\n",
            "    },\n",
            "    {\n",
            "      \"name\": \"Kachnar Park\",\n",
            "      \"address\": \"Management and Perseverance of Forestry (NGO, 4 Street 84, I 8/3 I-8, Islamabad, 44790, Pakistan\",\n",
            "      \"phone\": \"N/A\",\n",
            "      \"website\": \"N/A\",\n",
            "      \"rating\": 4.6,\n",
            "      \"type\": \"hanging gardens\"\n",
            "    },\n",
            "    {\n",
            "      \"name\": \"Islamabad Lights\",\n",
            "      \"address\": \"10-11 Block No.89 , Bilal Plaza\\u060c Block F G 7/3 Blue Area, Islamabad, Pakistan\",\n",
            "      \"phone\": \"(051) 2150070\",\n",
            "      \"website\": \"http://www.islamabadlights.com/\",\n",
            "      \"rating\": 4.2,\n",
            "      \"type\": \"string lights\"\n",
            "    },\n",
            "    {\n",
            "      \"name\": \"Lighting Concepts\",\n",
            "      \"address\": \"Unit No. 7-8, Badini Plaza, near Razia Shareef Plaza, Block F G 7/3 Blue Area, Islamabad, 44000, Pakistan\",\n",
            "      \"phone\": \"0336 2150294\",\n",
            "      \"website\": \"N/A\",\n",
            "      \"rating\": 4.3,\n",
            "      \"type\": \"string lights\"\n",
            "    },\n",
            "    {\n",
            "      \"name\": \"LIGHT HOUSE\",\n",
            "      \"address\": \"Shop 1, Bilal Plaza, Blue, Area G 7/3 Blue Area, Islamabad, 44000, Pakistan\",\n",
            "      \"phone\": \"0333 8880200\",\n",
            "      \"website\": \"http://www.lighthouseisb.com.pk/\",\n",
            "      \"rating\": 4.4,\n",
            "      \"type\": \"string lights\"\n",
            "    },\n",
            "    {\n",
            "      \"name\": \"de Vintage Home\",\n",
            "      \"address\": \"Flat no.6A, 3rd Floor, Al-Akbar Apartments, Pakistan Medical Co-operative Housing Society PMCHS E 11/1 E-11, Islamabad, 44000, Pakistan\",\n",
            "      \"phone\": \"0345 0805510\",\n",
            "      \"website\": \"N/A\",\n",
            "      \"rating\": 5,\n",
            "      \"type\": \"vintage lanterns\"\n",
            "    },\n",
            "    {\n",
            "      \"name\": \"Unique Pink Himalayan Salt Lamps & Products Islamabad\",\n",
            "      \"address\": \"House No: 271 Street No: 01, I.J.P. Road, near PSO Petrol Pump, Islamabad Valley Islamabad, 44800, Pakistan\",\n",
            "      \"phone\": \"0336 5796016\",\n",
            "      \"website\": \"https://quicksell.co/s/unique--antique-salt-lamps/unique--antique-salt-lamps/a5u\",\n",
            "      \"rating\": 5,\n",
            "      \"type\": \"vintage lanterns\"\n",
            "    },\n",
            "    {\n",
            "      \"name\": \"BUTT ANTIQUES\",\n",
            "      \"address\": \"Shop#02, Handicrafts Market, Agha Khan Road Super, Market, Markaz, F-6 F 6/1 F-6, Islamabad, 44000, Pakistan\",\n",
            "      \"phone\": \"0305 8333321\",\n",
            "      \"website\": \"https://www.facebook.com/ButtAntiques\",\n",
            "      \"rating\": 4.1,\n",
            "      \"type\": \"vintage lanterns\"\n",
            "    },\n",
            "    {\n",
            "      \"name\": \"Panaflex Printing Islamabad\",\n",
            "      \"address\": \"Landmark 1 plaza\\u060c Street 44, Markaz SCHS E 11/2 \\u0627\\u06cc - \\u06f1\\u06f1\\u060c \\u0627\\u0633\\u0644\\u0627\\u0645 \\u0622\\u0628\\u0627\\u062f, 44000, Pakistan\",\n",
            "      \"phone\": \"0315 6703330\",\n",
            "      \"website\": \"http://www.hrgroupisb.com/\",\n",
            "      \"rating\": 4.9,\n",
            "      \"type\": \"customized penaflex with floral motifs\"\n",
            "    },\n",
            "    {\n",
            "      \"name\": \"Panaflex Printing Islamabad\",\n",
            "      \"address\": \"B-Block Main Markaz Shop No. 4 Al-Nafay Complex, Block B Multi Gardens B-17, Islamabad, 46000, Pakistan\",\n",
            "      \"phone\": \"0314 7067139\",\n",
            "      \"website\": \"N/A\",\n",
            "      \"rating\": 4.9,\n",
            "      \"type\": \"customized penaflex with floral motifs\"\n",
            "    },\n",
            "    {\n",
            "      \"name\": \"PrintFast Islamabad - Print Fast\",\n",
            "      \"address\": \"Office#202, Chenab Center, 2nd Floor, Jinnah Ave, near calfornia pizza, Block H G 7/2 Blue Area, Islamabad, 44000, Pakistan\",\n",
            "      \"phone\": \"0300 8243483\",\n",
            "      \"website\": \"http://www.printfast.pk/\",\n",
            "      \"rating\": 4.7,\n",
            "      \"type\": \"customized penaflex with floral motifs\"\n",
            "    },\n",
            "    {\n",
            "      \"name\": \"White Rose decoration & fresh flower centre\",\n",
            "      \"address\": \"Khanna Pul, Al Noor Colony, Islamabad, 43600, Pakistan\",\n",
            "      \"phone\": \"0324 0061194\",\n",
            "      \"website\": \"N/A\",\n",
            "      \"rating\": 4.8,\n",
            "      \"type\": \"elegant stage with a floral backdrop\"\n",
            "    },\n",
            "    {\n",
            "      \"name\": \"Gifter\\u2019s Garden, Home Decor, Gift, Clocks, Flower, Wall frames, Plants\",\n",
            "      \"address\": \"Showroom 06, ground floor, Al-Rehmat Mall, G-11 Markaz G 11 Markaz G-11, Islamabad, Pakistan\",\n",
            "      \"phone\": \"(051) 2360551\",\n",
            "      \"website\": \"https://www.youtube.com/@GiftersGarden\",\n",
            "      \"rating\": 5,\n",
            "      \"type\": \"elegant stage with a floral backdrop\"\n",
            "    },\n",
            "    {\n",
            "      \"name\": \"Rafy events\",\n",
            "      \"address\": \"Building# 05, Bahria, Crescent Mall, Central Ave, Bahria Town Phase VI Phase 6 Town, Islamabad, Pakistan\",\n",
            "      \"phone\": \"0324 5125010\",\n",
            "      \"website\": \"https://rafyevents.com/\",\n",
            "      \"rating\": 5,\n",
            "      \"type\": \"elegant stage with a floral backdrop\"\n",
            "    },\n",
            "    {\n",
            "      \"name\": \"Lighting Concepts\",\n",
            "      \"address\": \"Unit No. 7-8, Badini Plaza, near Razia Shareef Plaza, Block F G 7/3 Blue Area, Islamabad, 44000, Pakistan\",\n",
            "      \"phone\": \"0336 2150294\",\n",
            "      \"website\": \"N/A\",\n",
            "      \"rating\": 4.3,\n",
            "      \"type\": \"soft ambient lighting\"\n",
            "    },\n",
            "    {\n",
            "      \"name\": \"Master Electric & Fancy Light\",\n",
            "      \"address\": \"Jan Plaza, Gate # 2, GT Rd, opp. Dha2, Islamabad, 45700, Pakistan\",\n",
            "      \"phone\": \"(051) 5709258\",\n",
            "      \"website\": \"N/A\",\n",
            "      \"rating\": 4.2,\n",
            "      \"type\": \"soft ambient lighting\"\n",
            "    },\n",
            "    {\n",
            "      \"name\": \"Indecor\",\n",
            "      \"address\": \"Jinnah super, F 7/3 F-7, Islamabad, Pakistan\",\n",
            "      \"phone\": \"0313 5093153\",\n",
            "      \"website\": \"N/A\",\n",
            "      \"rating\": 4.8,\n",
            "      \"type\": \"soft ambient lighting\"\n",
            "    },\n",
            "    {\n",
            "      \"name\": \"Best Ideal Fresh Flowers Shop # 3\",\n",
            "      \"address\": \"Ideal Fresh Flowers, Shop # 3, super flowers market, F-6/1 F 6/1 F-6, Islamabad, 46000, Pakistan\",\n",
            "      \"phone\": \"0333 8294720\",\n",
            "      \"website\": \"https://www.instagram.com/best_ideal_fresh_flower_shop_3?igsh=MTFjeHR0dWowbXhicA==\",\n",
            "      \"rating\": 4.9,\n",
            "      \"type\": \"tables with floral centerpieces\"\n",
            "    },\n",
            "    {\n",
            "      \"name\": \"The Flower Palace\",\n",
            "      \"address\": \"F/7 markaz Collige road, markaz, F 7/3 F-7, Islamabad, 44210, Pakistan\",\n",
            "      \"phone\": \"0345 5441746\",\n",
            "      \"website\": \"http://theflowerpalace.store/\",\n",
            "      \"rating\": 4.7,\n",
            "      \"type\": \"tables with floral centerpieces\"\n",
            "    },\n",
            "    {\n",
            "      \"name\": \"Zain Flowers\",\n",
            "      \"address\": \"Shop No 11 Super Market F6/2 School Road, F, 6, F-6/1 F 6/1 F-6, Islamabad, 44220, Pakistan\",\n",
            "      \"phone\": \"0310 7949463\",\n",
            "      \"website\": \"https://www.instagram.com/blossomstudio.pk?igsh=MXd6ODBuMmc0NWNpNQ==\",\n",
            "      \"rating\": 5,\n",
            "      \"type\": \"tables with floral centerpieces\"\n",
            "    },\n",
            "    {\n",
            "      \"name\": \"GM Blinds & Curtains Islamabad\",\n",
            "      \"address\": \"Shop no.6, Basement Al-Aziz Plaza, Suleman Market f11/2 F11/2, F-11/2 F 11/2 F-11, Islamabad, 44000, Pakistan\",\n",
            "      \"phone\": \"0300 5073971\",\n",
            "      \"website\": \"https://sites.google.com/view/curtainsislambad\",\n",
            "      \"rating\": 4.9,\n",
            "      \"type\": \"white drapery\"\n",
            "    },\n",
            "    {\n",
            "      \"name\": \"Curtain Museum\",\n",
            "      \"address\": \"Service Rd N, Golra NPF E 11/4 E-11, Islamabad, Pakistan\",\n",
            "      \"phone\": \"0345 5010101\",\n",
            "      \"website\": \"https://curtainmuseumonline.com/\",\n",
            "      \"rating\": 4.3,\n",
            "      \"type\": \"white drapery\"\n",
            "    },\n",
            "    {\n",
            "      \"name\": \"FA Blinds Islamabad branch\",\n",
            "      \"address\": \"Main Jinnah Rd, near Taqwa superstore, Bani Gala, 46500, Pakistan\",\n",
            "      \"phone\": \"0346 0940862\",\n",
            "      \"website\": \"http://fablindsislambad.com/\",\n",
            "      \"rating\": 4.8,\n",
            "      \"type\": \"white drapery\"\n",
            "    }\n",
            "  ]\n",
            "}IMPORTANT: In each sub agent, Respond immediately with the final JSON object using only `Final Answer:` followed by the valid JSON. Do NOT output thoughts, actions, or any reasoning.\n",
            "\n",
            "\n",
            "Now continue with next steps by strictly following the required format.\n",
            "\n",
            "==================================================\n",
            "🤖 [Debug] Step LLM Response:\n",
            "Final Answer: {\"theme_name\":\"Eternal Blossoms\",\"style_description\":\"A romantic and elegant garden setting inspired by the natural beauty of Islamabad, featuring lush greenery and vibrant florals.\",\"branding_notes\":\"Incorporate a personalized monogram of the couple's initials on all printed materials and stage backdrop. Use pastel colors with floral patterns for a cohesive look. Consider a custom floral arrangement on the stage to highlight the couple's monogram.\",\"required_elements\":[\"floral arches\",\"hanging gardens\",\"string lights\",\"vintage lanterns\",\"customized penaflex with floral motifs\",\"elegant stage with a floral backdrop\",\"soft ambient lighting\",\"tables with floral centerpieces\",\"white drapery\"]}\n",
            "✅ Parsed Final Answer: {\"theme_name\":\"Eternal Blossoms\",\"style_description\":\"A romantic and elegant garden setting inspired by the natural beauty of Islamabad, featuring lush greenery and vibrant florals.\",\"branding_notes\":\"Incorporate a personalized monogram of the couple's initials on all printed materials and stage backdrop. Use pastel colors with floral patterns for a cohesive look. Consider a custom floral arrangement on the stage to highlight the couple's monogram.\",\"required_elements\":[\"floral arches\",\"hanging gardens\",\"string lights\",\"vintage lanterns\",\"customized penaflex with floral motifs\",\"elegant stage with a floral backdrop\",\"soft ambient lighting\",\"tables with floral centerpieces\",\"white drapery\"]}\n",
            "\n",
            "✅ Event Planning Complete!\n",
            "\n",
            "📋 Summary Output:\n",
            "{\n",
            "  \"venues\": \"{\\\"banquet_hall\\\": [{\\\"name\\\": \\\"Monal Marquee\\\", \\\"rating\\\": 4.4, \\\"address\\\": \\\"Main Service Road, Parallel\\\\u060c Main Margalla Rd, Golra NPF E 11/4 E-11, Islamabad, Pakistan\\\", \\\"phone\\\": \\\"(051) 2223886\\\", \\\"website\\\": \\\"N/A\\\"}], \\\"outdoor_garden\\\": [{\\\"name\\\": \\\"Jasmine Garden\\\", \\\"rating\\\": 4.6, \\\"address\\\": \\\"Unnamed Road, Islamabad, Pakistan\\\", \\\"phone\\\": \\\"0310 5600831\\\", \\\"website\\\": \\\"N/A\\\"}], \\\"historic_estate\\\": [{\\\"name\\\": \\\"Awan House Soan Garden\\\", \\\"rating\\\": 5, \\\"address\\\": \\\"River bank road, Soan Gardens Block H Islamabad, Pakistan\\\", \\\"phone\\\": \\\"N/A\\\", \\\"website\\\": \\\"N/A\\\"}]}\",\n",
            "  \"vendors\": \"{\\\"summary\\\":[{\\\"vendor_type\\\":\\\"catering\\\",\\\"top_options\\\":[\\\"Naveed Caterers & Event Management\\\",\\\"Tandoori Caterers & Event Management\\\"]},{\\\"vendor_type\\\":\\\"photography\\\",\\\"top_options\\\":[\\\"RIZWAN ARIF PHOTOGRAPHY\\\",\\\"Qamar Anwar Photography\\\"]},{\\\"vendor_type\\\":\\\"florist\\\",\\\"top_options\\\":[\\\"Zain Flowers\\\"]},{\\\"vendor_type\\\":\\\"venue\\\",\\\"top_options\\\":[\\\"The Royal Palm Marquee\\\"]},{\\\"vendor_type\\\":\\\"music/band/DJ\\\",\\\"top_options\\\":[\\\"Fauji Band Lucky Star Rawalpindi\\\",\\\"Music band\\\"]},{\\\"vendor_type\\\":\\\"videographer\\\",\\\"top_options\\\":[\\\"Hamzas production - Photography/Videography & Events\\\",\\\"Zillay Studios -Videography and Photography Services in Rawalpindi And Islamabad\\\"]},{\\\"vendor_type\\\":\\\"wedding planner\\\",\\\"top_options\\\":[\\\"Hello Events\\\",\\\"Islamabad Creative Event Planner\\\"]},{\\\"vendor_type\\\":\\\"bakery for cake\\\",\\\"top_options\\\":[\\\"Funky Bake\\\"]},{\\\"vendor_type\\\":\\\"transportation\\\",\\\"top_options\\\":[\\\"Niazi Goods Transport Company.\\\"]},{\\\"vendor_type\\\":\\\"officiant\\\",\\\"top_options\\\":[\\\"Muhammad Arif -Nikah Khawan Registrar In Rawalpindi\\\"]},{\\\"vendor_type\\\":\\\"hair and makeup\\\",\\\"top_options\\\":[\\\"Queen's Hair & Nail Makeup Best Beauty Parlour Salon Studio\\\"]},{\\\"vendor_type\\\":\\\"event rentals\\\",\\\"top_options\\\":[\\\"Ahmad jumping castle on rent|PlayZone Event Planner\\\"]}]}\",\n",
            "  \"transportation\": \"{\\\"Transportation Summary\\\":[\\\"Top recommended shuttle service: Visa Seeker Shuttle Service, Rating: 3.4\\\",\\\"Top recommended car rentals: Car Hire Pakistan, Rating: 5; New Pakistan Motors, Rating: 4.9; Prado For Rent, Rating: 4.9\\\",\\\"Top recommended bus rentals: Rent a car SHAH RIDE TOUR, Rating: 5; Musafir Transport, Rating: 4.9\\\",\\\"Nearest airport: Islamabad International Airport, Rating: 4.4\\\"]}\",\n",
            "  \"hotels\": \"{\\\"Hotels\\\": [\\\"Serena Hotel - Rating: 4.5, Address: Khayaban-e-Suhrwardy Rd, opposite Convention Centre, G-5/1 G-5, Islamabad, 44000, Pakistan, Phone: (051) 111 133 133, Website: https://www.serenahotels.com/islamabad\\\", \\\"Islamabad Marriott Hotel - Rating: 4.6, Address: Agha Khan Rd, F-5/1 F-5, Islamabad, 44000, Pakistan, Phone: (051) 2826121, Website: https://www.marriott.com/hotels/travel/isbpk-islamabad-marriott-hotel/\\\", \\\"MHR Hotel Islamabad - Rating: 5, Address: house 54 Main Margalla Rd, F-7/2 F 7/2 F-7, Islamabad, 44000, Pakistan, Phone: 0310 0705111, Website: https://mhrislamabad.com/\\\", \\\"Margalla Hills Residency Islamabad E-11/3 - Rating: 4.8, Address: House 170-A, Street 70, MPCHS E-11/3 MPCHS E 11/3 E-11, Islamabad, 44000, Pakistan, Phone: 0349 5709104, Website: https://www.facebook.com/Margalla-Hills-Residency-118394189997081/\\\", \\\"Canadian Inn Hotel Islamabad - Rating: 4.7, Address: 308 Street 64, MPCHS E-11/3 MPCHS E 11/3 E-11, Islamabad, Pakistan, Phone: 0335 3304742, Website: http://canadianinn.pk/\\\"]}\",\n",
            "  \"sightseeing\": \"{\\\"sightseeing_summary\\\":[{\\\"name\\\":\\\"Lok Virsa Heritage Museum\\\",\\\"rating\\\":4.6,\\\"address\\\":\\\"Garden Avenue, Shakarparian Rd, Islamabad, Pakistan\\\"},{\\\"name\\\":\\\"Pakistan Monument Museum\\\",\\\"rating\\\":4.6,\\\"address\\\":\\\"M3V9+2Q9, Srinagar Hwy, Islamabad, Pakistan\\\"},{\\\"name\\\":\\\"Pakistan Monument\\\",\\\"rating\\\":4.6,\\\"address\\\":\\\"M3V9+2Q9 Shakarparian Hills, Srinagar Hwy, Islamabad, Pakistan\\\"}]}\",\n",
            "  \"catering\": \"{\\\"breakfast\\\":\\\"Eggspectation Restaurant Cafe, Bistro Noir Islamabad\\\",\\\"lunch\\\":\\\"Naveed Caterers & Event Management\\\",\\\"dinner\\\":\\\"Naveed Caterers & Event Management, Tandoori Caterers & Event Management\\\"}\",\n",
            "  \"theme\": \"{\\\"theme_name\\\":\\\"Eternal Blossoms\\\",\\\"style_description\\\":\\\"A romantic and elegant garden setting inspired by the natural beauty of Islamabad, featuring lush greenery and vibrant florals.\\\",\\\"branding_notes\\\":\\\"Incorporate a personalized monogram of the couple's initials on all printed materials and stage backdrop. Use pastel colors with floral patterns for a cohesive look. Consider a custom floral arrangement on the stage to highlight the couple's monogram.\\\",\\\"required_elements\\\":[\\\"floral arches\\\",\\\"hanging gardens\\\",\\\"string lights\\\",\\\"vintage lanterns\\\",\\\"customized penaflex with floral motifs\\\",\\\"elegant stage with a floral backdrop\\\",\\\"soft ambient lighting\\\",\\\"tables with floral centerpieces\\\",\\\"white drapery\\\"]}\"\n",
            "}\n"
          ]
        }
      ]
    }
  ]
}
